//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace POSReports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("posDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class posDataSet : global::System.Data.DataSet {
        
        private reStockinProductDataTable tablereStockinProduct;
        
        private purchaseOrderDataTable tablepurchaseOrder;
        
        private purchaseDetailsDataTable tablepurchaseDetails;
        
        private TmpStockoutDataTable tableTmpStockout;
        
        private supplierStockoutDataTable tablesupplierStockout;
        
        private StockStatisticDataTable tableStockStatistic;
        
        private stockInDataTable tablestockIn;
        
        private deptStockStatisticDataTable tabledeptStockStatistic;
        
        private returnPOrderDataTable tablereturnPOrder;
        
        private departmentStockInDataTable tabledepartmentStockIn;
        
        private departmentDataTable tabledepartment;
        
        private allStockDataTable tableallStock;
        
        private returnMainDataTable tablereturnMain;
        
        private deptTempStockoutDataTable tabledeptTempStockout;
        
        private deptReStockDataTable tabledeptReStock;
        
        private mainStockOutDataTable tablemainStockOut;
        
        private stockOutDataTable tablestockOut;
        
        private employeeDataTable tableemployee;
        
        private workingdayDataTable tableworkingday;
        
        private saleStatisticDataTable tablesaleStatistic;
        
        private PurchaseOrderPeriodDataTable tablePurchaseOrderPeriod;
        
        private PurchaseOrderDetailReportDataTable tablePurchaseOrderDetailReport;
        
        private PurchaseOrderReportDataTable tablePurchaseOrderReport;
        
        private CustomizeReportDataTable tableCustomizeReport;
        
        private CustomizeDepartmentReportDataTable tableCustomizeDepartmentReport;
        
        private CustomizeDepartmentDetailReportDataTable tableCustomizeDepartmentDetailReport;
        
        private product_typeDataTable tableproduct_type;
        
        private DepartmentStockOutDataTable tableDepartmentStockOut;
        
        private AllDepartmentPurchaseOrderReportDataTable tableAllDepartmentPurchaseOrderReport;
        
        private StockEvaluationReportDataTable tableStockEvaluationReport;
        
        private ExtraCustomizeDepartmentReportDataTable tableExtraCustomizeDepartmentReport;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public posDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected posDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["reStockinProduct"] != null)) {
                    base.Tables.Add(new reStockinProductDataTable(ds.Tables["reStockinProduct"]));
                }
                if ((ds.Tables["purchaseOrder"] != null)) {
                    base.Tables.Add(new purchaseOrderDataTable(ds.Tables["purchaseOrder"]));
                }
                if ((ds.Tables["purchaseDetails"] != null)) {
                    base.Tables.Add(new purchaseDetailsDataTable(ds.Tables["purchaseDetails"]));
                }
                if ((ds.Tables["TmpStockout"] != null)) {
                    base.Tables.Add(new TmpStockoutDataTable(ds.Tables["TmpStockout"]));
                }
                if ((ds.Tables["supplierStockout"] != null)) {
                    base.Tables.Add(new supplierStockoutDataTable(ds.Tables["supplierStockout"]));
                }
                if ((ds.Tables["StockStatistic"] != null)) {
                    base.Tables.Add(new StockStatisticDataTable(ds.Tables["StockStatistic"]));
                }
                if ((ds.Tables["stockIn"] != null)) {
                    base.Tables.Add(new stockInDataTable(ds.Tables["stockIn"]));
                }
                if ((ds.Tables["deptStockStatistic"] != null)) {
                    base.Tables.Add(new deptStockStatisticDataTable(ds.Tables["deptStockStatistic"]));
                }
                if ((ds.Tables["returnPOrder"] != null)) {
                    base.Tables.Add(new returnPOrderDataTable(ds.Tables["returnPOrder"]));
                }
                if ((ds.Tables["departmentStockIn"] != null)) {
                    base.Tables.Add(new departmentStockInDataTable(ds.Tables["departmentStockIn"]));
                }
                if ((ds.Tables["department"] != null)) {
                    base.Tables.Add(new departmentDataTable(ds.Tables["department"]));
                }
                if ((ds.Tables["allStock"] != null)) {
                    base.Tables.Add(new allStockDataTable(ds.Tables["allStock"]));
                }
                if ((ds.Tables["returnMain"] != null)) {
                    base.Tables.Add(new returnMainDataTable(ds.Tables["returnMain"]));
                }
                if ((ds.Tables["deptTempStockout"] != null)) {
                    base.Tables.Add(new deptTempStockoutDataTable(ds.Tables["deptTempStockout"]));
                }
                if ((ds.Tables["deptReStock"] != null)) {
                    base.Tables.Add(new deptReStockDataTable(ds.Tables["deptReStock"]));
                }
                if ((ds.Tables["mainStockOut"] != null)) {
                    base.Tables.Add(new mainStockOutDataTable(ds.Tables["mainStockOut"]));
                }
                if ((ds.Tables["stockOut"] != null)) {
                    base.Tables.Add(new stockOutDataTable(ds.Tables["stockOut"]));
                }
                if ((ds.Tables["employee"] != null)) {
                    base.Tables.Add(new employeeDataTable(ds.Tables["employee"]));
                }
                if ((ds.Tables["workingday"] != null)) {
                    base.Tables.Add(new workingdayDataTable(ds.Tables["workingday"]));
                }
                if ((ds.Tables["saleStatistic"] != null)) {
                    base.Tables.Add(new saleStatisticDataTable(ds.Tables["saleStatistic"]));
                }
                if ((ds.Tables["PurchaseOrderPeriod"] != null)) {
                    base.Tables.Add(new PurchaseOrderPeriodDataTable(ds.Tables["PurchaseOrderPeriod"]));
                }
                if ((ds.Tables["PurchaseOrderDetailReport"] != null)) {
                    base.Tables.Add(new PurchaseOrderDetailReportDataTable(ds.Tables["PurchaseOrderDetailReport"]));
                }
                if ((ds.Tables["PurchaseOrderReport"] != null)) {
                    base.Tables.Add(new PurchaseOrderReportDataTable(ds.Tables["PurchaseOrderReport"]));
                }
                if ((ds.Tables["CustomizeReport"] != null)) {
                    base.Tables.Add(new CustomizeReportDataTable(ds.Tables["CustomizeReport"]));
                }
                if ((ds.Tables["CustomizeDepartmentReport"] != null)) {
                    base.Tables.Add(new CustomizeDepartmentReportDataTable(ds.Tables["CustomizeDepartmentReport"]));
                }
                if ((ds.Tables["CustomizeDepartmentDetailReport"] != null)) {
                    base.Tables.Add(new CustomizeDepartmentDetailReportDataTable(ds.Tables["CustomizeDepartmentDetailReport"]));
                }
                if ((ds.Tables["product_type"] != null)) {
                    base.Tables.Add(new product_typeDataTable(ds.Tables["product_type"]));
                }
                if ((ds.Tables["DepartmentStockOut"] != null)) {
                    base.Tables.Add(new DepartmentStockOutDataTable(ds.Tables["DepartmentStockOut"]));
                }
                if ((ds.Tables["AllDepartmentPurchaseOrderReport"] != null)) {
                    base.Tables.Add(new AllDepartmentPurchaseOrderReportDataTable(ds.Tables["AllDepartmentPurchaseOrderReport"]));
                }
                if ((ds.Tables["StockEvaluationReport"] != null)) {
                    base.Tables.Add(new StockEvaluationReportDataTable(ds.Tables["StockEvaluationReport"]));
                }
                if ((ds.Tables["ExtraCustomizeDepartmentReport"] != null)) {
                    base.Tables.Add(new ExtraCustomizeDepartmentReportDataTable(ds.Tables["ExtraCustomizeDepartmentReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public reStockinProductDataTable reStockinProduct {
            get {
                return this.tablereStockinProduct;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public purchaseOrderDataTable purchaseOrder {
            get {
                return this.tablepurchaseOrder;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public purchaseDetailsDataTable purchaseDetails {
            get {
                return this.tablepurchaseDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TmpStockoutDataTable TmpStockout {
            get {
                return this.tableTmpStockout;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public supplierStockoutDataTable supplierStockout {
            get {
                return this.tablesupplierStockout;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StockStatisticDataTable StockStatistic {
            get {
                return this.tableStockStatistic;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public stockInDataTable stockIn {
            get {
                return this.tablestockIn;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public deptStockStatisticDataTable deptStockStatistic {
            get {
                return this.tabledeptStockStatistic;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public returnPOrderDataTable returnPOrder {
            get {
                return this.tablereturnPOrder;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public departmentStockInDataTable departmentStockIn {
            get {
                return this.tabledepartmentStockIn;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public departmentDataTable department {
            get {
                return this.tabledepartment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public allStockDataTable allStock {
            get {
                return this.tableallStock;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public returnMainDataTable returnMain {
            get {
                return this.tablereturnMain;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public deptTempStockoutDataTable deptTempStockout {
            get {
                return this.tabledeptTempStockout;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public deptReStockDataTable deptReStock {
            get {
                return this.tabledeptReStock;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public mainStockOutDataTable mainStockOut {
            get {
                return this.tablemainStockOut;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public stockOutDataTable stockOut {
            get {
                return this.tablestockOut;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public employeeDataTable employee {
            get {
                return this.tableemployee;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public workingdayDataTable workingday {
            get {
                return this.tableworkingday;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public saleStatisticDataTable saleStatistic {
            get {
                return this.tablesaleStatistic;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PurchaseOrderPeriodDataTable PurchaseOrderPeriod {
            get {
                return this.tablePurchaseOrderPeriod;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PurchaseOrderDetailReportDataTable PurchaseOrderDetailReport {
            get {
                return this.tablePurchaseOrderDetailReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PurchaseOrderReportDataTable PurchaseOrderReport {
            get {
                return this.tablePurchaseOrderReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomizeReportDataTable CustomizeReport {
            get {
                return this.tableCustomizeReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomizeDepartmentReportDataTable CustomizeDepartmentReport {
            get {
                return this.tableCustomizeDepartmentReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomizeDepartmentDetailReportDataTable CustomizeDepartmentDetailReport {
            get {
                return this.tableCustomizeDepartmentDetailReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public product_typeDataTable product_type {
            get {
                return this.tableproduct_type;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DepartmentStockOutDataTable DepartmentStockOut {
            get {
                return this.tableDepartmentStockOut;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AllDepartmentPurchaseOrderReportDataTable AllDepartmentPurchaseOrderReport {
            get {
                return this.tableAllDepartmentPurchaseOrderReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StockEvaluationReportDataTable StockEvaluationReport {
            get {
                return this.tableStockEvaluationReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ExtraCustomizeDepartmentReportDataTable ExtraCustomizeDepartmentReport {
            get {
                return this.tableExtraCustomizeDepartmentReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            posDataSet cln = ((posDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["reStockinProduct"] != null)) {
                    base.Tables.Add(new reStockinProductDataTable(ds.Tables["reStockinProduct"]));
                }
                if ((ds.Tables["purchaseOrder"] != null)) {
                    base.Tables.Add(new purchaseOrderDataTable(ds.Tables["purchaseOrder"]));
                }
                if ((ds.Tables["purchaseDetails"] != null)) {
                    base.Tables.Add(new purchaseDetailsDataTable(ds.Tables["purchaseDetails"]));
                }
                if ((ds.Tables["TmpStockout"] != null)) {
                    base.Tables.Add(new TmpStockoutDataTable(ds.Tables["TmpStockout"]));
                }
                if ((ds.Tables["supplierStockout"] != null)) {
                    base.Tables.Add(new supplierStockoutDataTable(ds.Tables["supplierStockout"]));
                }
                if ((ds.Tables["StockStatistic"] != null)) {
                    base.Tables.Add(new StockStatisticDataTable(ds.Tables["StockStatistic"]));
                }
                if ((ds.Tables["stockIn"] != null)) {
                    base.Tables.Add(new stockInDataTable(ds.Tables["stockIn"]));
                }
                if ((ds.Tables["deptStockStatistic"] != null)) {
                    base.Tables.Add(new deptStockStatisticDataTable(ds.Tables["deptStockStatistic"]));
                }
                if ((ds.Tables["returnPOrder"] != null)) {
                    base.Tables.Add(new returnPOrderDataTable(ds.Tables["returnPOrder"]));
                }
                if ((ds.Tables["departmentStockIn"] != null)) {
                    base.Tables.Add(new departmentStockInDataTable(ds.Tables["departmentStockIn"]));
                }
                if ((ds.Tables["department"] != null)) {
                    base.Tables.Add(new departmentDataTable(ds.Tables["department"]));
                }
                if ((ds.Tables["allStock"] != null)) {
                    base.Tables.Add(new allStockDataTable(ds.Tables["allStock"]));
                }
                if ((ds.Tables["returnMain"] != null)) {
                    base.Tables.Add(new returnMainDataTable(ds.Tables["returnMain"]));
                }
                if ((ds.Tables["deptTempStockout"] != null)) {
                    base.Tables.Add(new deptTempStockoutDataTable(ds.Tables["deptTempStockout"]));
                }
                if ((ds.Tables["deptReStock"] != null)) {
                    base.Tables.Add(new deptReStockDataTable(ds.Tables["deptReStock"]));
                }
                if ((ds.Tables["mainStockOut"] != null)) {
                    base.Tables.Add(new mainStockOutDataTable(ds.Tables["mainStockOut"]));
                }
                if ((ds.Tables["stockOut"] != null)) {
                    base.Tables.Add(new stockOutDataTable(ds.Tables["stockOut"]));
                }
                if ((ds.Tables["employee"] != null)) {
                    base.Tables.Add(new employeeDataTable(ds.Tables["employee"]));
                }
                if ((ds.Tables["workingday"] != null)) {
                    base.Tables.Add(new workingdayDataTable(ds.Tables["workingday"]));
                }
                if ((ds.Tables["saleStatistic"] != null)) {
                    base.Tables.Add(new saleStatisticDataTable(ds.Tables["saleStatistic"]));
                }
                if ((ds.Tables["PurchaseOrderPeriod"] != null)) {
                    base.Tables.Add(new PurchaseOrderPeriodDataTable(ds.Tables["PurchaseOrderPeriod"]));
                }
                if ((ds.Tables["PurchaseOrderDetailReport"] != null)) {
                    base.Tables.Add(new PurchaseOrderDetailReportDataTable(ds.Tables["PurchaseOrderDetailReport"]));
                }
                if ((ds.Tables["PurchaseOrderReport"] != null)) {
                    base.Tables.Add(new PurchaseOrderReportDataTable(ds.Tables["PurchaseOrderReport"]));
                }
                if ((ds.Tables["CustomizeReport"] != null)) {
                    base.Tables.Add(new CustomizeReportDataTable(ds.Tables["CustomizeReport"]));
                }
                if ((ds.Tables["CustomizeDepartmentReport"] != null)) {
                    base.Tables.Add(new CustomizeDepartmentReportDataTable(ds.Tables["CustomizeDepartmentReport"]));
                }
                if ((ds.Tables["CustomizeDepartmentDetailReport"] != null)) {
                    base.Tables.Add(new CustomizeDepartmentDetailReportDataTable(ds.Tables["CustomizeDepartmentDetailReport"]));
                }
                if ((ds.Tables["product_type"] != null)) {
                    base.Tables.Add(new product_typeDataTable(ds.Tables["product_type"]));
                }
                if ((ds.Tables["DepartmentStockOut"] != null)) {
                    base.Tables.Add(new DepartmentStockOutDataTable(ds.Tables["DepartmentStockOut"]));
                }
                if ((ds.Tables["AllDepartmentPurchaseOrderReport"] != null)) {
                    base.Tables.Add(new AllDepartmentPurchaseOrderReportDataTable(ds.Tables["AllDepartmentPurchaseOrderReport"]));
                }
                if ((ds.Tables["StockEvaluationReport"] != null)) {
                    base.Tables.Add(new StockEvaluationReportDataTable(ds.Tables["StockEvaluationReport"]));
                }
                if ((ds.Tables["ExtraCustomizeDepartmentReport"] != null)) {
                    base.Tables.Add(new ExtraCustomizeDepartmentReportDataTable(ds.Tables["ExtraCustomizeDepartmentReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablereStockinProduct = ((reStockinProductDataTable)(base.Tables["reStockinProduct"]));
            if ((initTable == true)) {
                if ((this.tablereStockinProduct != null)) {
                    this.tablereStockinProduct.InitVars();
                }
            }
            this.tablepurchaseOrder = ((purchaseOrderDataTable)(base.Tables["purchaseOrder"]));
            if ((initTable == true)) {
                if ((this.tablepurchaseOrder != null)) {
                    this.tablepurchaseOrder.InitVars();
                }
            }
            this.tablepurchaseDetails = ((purchaseDetailsDataTable)(base.Tables["purchaseDetails"]));
            if ((initTable == true)) {
                if ((this.tablepurchaseDetails != null)) {
                    this.tablepurchaseDetails.InitVars();
                }
            }
            this.tableTmpStockout = ((TmpStockoutDataTable)(base.Tables["TmpStockout"]));
            if ((initTable == true)) {
                if ((this.tableTmpStockout != null)) {
                    this.tableTmpStockout.InitVars();
                }
            }
            this.tablesupplierStockout = ((supplierStockoutDataTable)(base.Tables["supplierStockout"]));
            if ((initTable == true)) {
                if ((this.tablesupplierStockout != null)) {
                    this.tablesupplierStockout.InitVars();
                }
            }
            this.tableStockStatistic = ((StockStatisticDataTable)(base.Tables["StockStatistic"]));
            if ((initTable == true)) {
                if ((this.tableStockStatistic != null)) {
                    this.tableStockStatistic.InitVars();
                }
            }
            this.tablestockIn = ((stockInDataTable)(base.Tables["stockIn"]));
            if ((initTable == true)) {
                if ((this.tablestockIn != null)) {
                    this.tablestockIn.InitVars();
                }
            }
            this.tabledeptStockStatistic = ((deptStockStatisticDataTable)(base.Tables["deptStockStatistic"]));
            if ((initTable == true)) {
                if ((this.tabledeptStockStatistic != null)) {
                    this.tabledeptStockStatistic.InitVars();
                }
            }
            this.tablereturnPOrder = ((returnPOrderDataTable)(base.Tables["returnPOrder"]));
            if ((initTable == true)) {
                if ((this.tablereturnPOrder != null)) {
                    this.tablereturnPOrder.InitVars();
                }
            }
            this.tabledepartmentStockIn = ((departmentStockInDataTable)(base.Tables["departmentStockIn"]));
            if ((initTable == true)) {
                if ((this.tabledepartmentStockIn != null)) {
                    this.tabledepartmentStockIn.InitVars();
                }
            }
            this.tabledepartment = ((departmentDataTable)(base.Tables["department"]));
            if ((initTable == true)) {
                if ((this.tabledepartment != null)) {
                    this.tabledepartment.InitVars();
                }
            }
            this.tableallStock = ((allStockDataTable)(base.Tables["allStock"]));
            if ((initTable == true)) {
                if ((this.tableallStock != null)) {
                    this.tableallStock.InitVars();
                }
            }
            this.tablereturnMain = ((returnMainDataTable)(base.Tables["returnMain"]));
            if ((initTable == true)) {
                if ((this.tablereturnMain != null)) {
                    this.tablereturnMain.InitVars();
                }
            }
            this.tabledeptTempStockout = ((deptTempStockoutDataTable)(base.Tables["deptTempStockout"]));
            if ((initTable == true)) {
                if ((this.tabledeptTempStockout != null)) {
                    this.tabledeptTempStockout.InitVars();
                }
            }
            this.tabledeptReStock = ((deptReStockDataTable)(base.Tables["deptReStock"]));
            if ((initTable == true)) {
                if ((this.tabledeptReStock != null)) {
                    this.tabledeptReStock.InitVars();
                }
            }
            this.tablemainStockOut = ((mainStockOutDataTable)(base.Tables["mainStockOut"]));
            if ((initTable == true)) {
                if ((this.tablemainStockOut != null)) {
                    this.tablemainStockOut.InitVars();
                }
            }
            this.tablestockOut = ((stockOutDataTable)(base.Tables["stockOut"]));
            if ((initTable == true)) {
                if ((this.tablestockOut != null)) {
                    this.tablestockOut.InitVars();
                }
            }
            this.tableemployee = ((employeeDataTable)(base.Tables["employee"]));
            if ((initTable == true)) {
                if ((this.tableemployee != null)) {
                    this.tableemployee.InitVars();
                }
            }
            this.tableworkingday = ((workingdayDataTable)(base.Tables["workingday"]));
            if ((initTable == true)) {
                if ((this.tableworkingday != null)) {
                    this.tableworkingday.InitVars();
                }
            }
            this.tablesaleStatistic = ((saleStatisticDataTable)(base.Tables["saleStatistic"]));
            if ((initTable == true)) {
                if ((this.tablesaleStatistic != null)) {
                    this.tablesaleStatistic.InitVars();
                }
            }
            this.tablePurchaseOrderPeriod = ((PurchaseOrderPeriodDataTable)(base.Tables["PurchaseOrderPeriod"]));
            if ((initTable == true)) {
                if ((this.tablePurchaseOrderPeriod != null)) {
                    this.tablePurchaseOrderPeriod.InitVars();
                }
            }
            this.tablePurchaseOrderDetailReport = ((PurchaseOrderDetailReportDataTable)(base.Tables["PurchaseOrderDetailReport"]));
            if ((initTable == true)) {
                if ((this.tablePurchaseOrderDetailReport != null)) {
                    this.tablePurchaseOrderDetailReport.InitVars();
                }
            }
            this.tablePurchaseOrderReport = ((PurchaseOrderReportDataTable)(base.Tables["PurchaseOrderReport"]));
            if ((initTable == true)) {
                if ((this.tablePurchaseOrderReport != null)) {
                    this.tablePurchaseOrderReport.InitVars();
                }
            }
            this.tableCustomizeReport = ((CustomizeReportDataTable)(base.Tables["CustomizeReport"]));
            if ((initTable == true)) {
                if ((this.tableCustomizeReport != null)) {
                    this.tableCustomizeReport.InitVars();
                }
            }
            this.tableCustomizeDepartmentReport = ((CustomizeDepartmentReportDataTable)(base.Tables["CustomizeDepartmentReport"]));
            if ((initTable == true)) {
                if ((this.tableCustomizeDepartmentReport != null)) {
                    this.tableCustomizeDepartmentReport.InitVars();
                }
            }
            this.tableCustomizeDepartmentDetailReport = ((CustomizeDepartmentDetailReportDataTable)(base.Tables["CustomizeDepartmentDetailReport"]));
            if ((initTable == true)) {
                if ((this.tableCustomizeDepartmentDetailReport != null)) {
                    this.tableCustomizeDepartmentDetailReport.InitVars();
                }
            }
            this.tableproduct_type = ((product_typeDataTable)(base.Tables["product_type"]));
            if ((initTable == true)) {
                if ((this.tableproduct_type != null)) {
                    this.tableproduct_type.InitVars();
                }
            }
            this.tableDepartmentStockOut = ((DepartmentStockOutDataTable)(base.Tables["DepartmentStockOut"]));
            if ((initTable == true)) {
                if ((this.tableDepartmentStockOut != null)) {
                    this.tableDepartmentStockOut.InitVars();
                }
            }
            this.tableAllDepartmentPurchaseOrderReport = ((AllDepartmentPurchaseOrderReportDataTable)(base.Tables["AllDepartmentPurchaseOrderReport"]));
            if ((initTable == true)) {
                if ((this.tableAllDepartmentPurchaseOrderReport != null)) {
                    this.tableAllDepartmentPurchaseOrderReport.InitVars();
                }
            }
            this.tableStockEvaluationReport = ((StockEvaluationReportDataTable)(base.Tables["StockEvaluationReport"]));
            if ((initTable == true)) {
                if ((this.tableStockEvaluationReport != null)) {
                    this.tableStockEvaluationReport.InitVars();
                }
            }
            this.tableExtraCustomizeDepartmentReport = ((ExtraCustomizeDepartmentReportDataTable)(base.Tables["ExtraCustomizeDepartmentReport"]));
            if ((initTable == true)) {
                if ((this.tableExtraCustomizeDepartmentReport != null)) {
                    this.tableExtraCustomizeDepartmentReport.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "posDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/posDataSet.xsd";
            this.EnforceConstraints = false;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablereStockinProduct = new reStockinProductDataTable();
            base.Tables.Add(this.tablereStockinProduct);
            this.tablepurchaseOrder = new purchaseOrderDataTable();
            base.Tables.Add(this.tablepurchaseOrder);
            this.tablepurchaseDetails = new purchaseDetailsDataTable();
            base.Tables.Add(this.tablepurchaseDetails);
            this.tableTmpStockout = new TmpStockoutDataTable();
            base.Tables.Add(this.tableTmpStockout);
            this.tablesupplierStockout = new supplierStockoutDataTable();
            base.Tables.Add(this.tablesupplierStockout);
            this.tableStockStatistic = new StockStatisticDataTable();
            base.Tables.Add(this.tableStockStatistic);
            this.tablestockIn = new stockInDataTable();
            base.Tables.Add(this.tablestockIn);
            this.tabledeptStockStatistic = new deptStockStatisticDataTable();
            base.Tables.Add(this.tabledeptStockStatistic);
            this.tablereturnPOrder = new returnPOrderDataTable();
            base.Tables.Add(this.tablereturnPOrder);
            this.tabledepartmentStockIn = new departmentStockInDataTable();
            base.Tables.Add(this.tabledepartmentStockIn);
            this.tabledepartment = new departmentDataTable();
            base.Tables.Add(this.tabledepartment);
            this.tableallStock = new allStockDataTable();
            base.Tables.Add(this.tableallStock);
            this.tablereturnMain = new returnMainDataTable();
            base.Tables.Add(this.tablereturnMain);
            this.tabledeptTempStockout = new deptTempStockoutDataTable();
            base.Tables.Add(this.tabledeptTempStockout);
            this.tabledeptReStock = new deptReStockDataTable();
            base.Tables.Add(this.tabledeptReStock);
            this.tablemainStockOut = new mainStockOutDataTable();
            base.Tables.Add(this.tablemainStockOut);
            this.tablestockOut = new stockOutDataTable();
            base.Tables.Add(this.tablestockOut);
            this.tableemployee = new employeeDataTable();
            base.Tables.Add(this.tableemployee);
            this.tableworkingday = new workingdayDataTable();
            base.Tables.Add(this.tableworkingday);
            this.tablesaleStatistic = new saleStatisticDataTable();
            base.Tables.Add(this.tablesaleStatistic);
            this.tablePurchaseOrderPeriod = new PurchaseOrderPeriodDataTable();
            base.Tables.Add(this.tablePurchaseOrderPeriod);
            this.tablePurchaseOrderDetailReport = new PurchaseOrderDetailReportDataTable();
            base.Tables.Add(this.tablePurchaseOrderDetailReport);
            this.tablePurchaseOrderReport = new PurchaseOrderReportDataTable();
            base.Tables.Add(this.tablePurchaseOrderReport);
            this.tableCustomizeReport = new CustomizeReportDataTable();
            base.Tables.Add(this.tableCustomizeReport);
            this.tableCustomizeDepartmentReport = new CustomizeDepartmentReportDataTable();
            base.Tables.Add(this.tableCustomizeDepartmentReport);
            this.tableCustomizeDepartmentDetailReport = new CustomizeDepartmentDetailReportDataTable();
            base.Tables.Add(this.tableCustomizeDepartmentDetailReport);
            this.tableproduct_type = new product_typeDataTable();
            base.Tables.Add(this.tableproduct_type);
            this.tableDepartmentStockOut = new DepartmentStockOutDataTable();
            base.Tables.Add(this.tableDepartmentStockOut);
            this.tableAllDepartmentPurchaseOrderReport = new AllDepartmentPurchaseOrderReportDataTable();
            base.Tables.Add(this.tableAllDepartmentPurchaseOrderReport);
            this.tableStockEvaluationReport = new StockEvaluationReportDataTable();
            base.Tables.Add(this.tableStockEvaluationReport);
            this.tableExtraCustomizeDepartmentReport = new ExtraCustomizeDepartmentReportDataTable();
            base.Tables.Add(this.tableExtraCustomizeDepartmentReport);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializereStockinProduct() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializepurchaseOrder() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializepurchaseDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTmpStockout() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesupplierStockout() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStockStatistic() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestockIn() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedeptStockStatistic() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializereturnPOrder() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedepartmentStockIn() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedepartment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeallStock() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializereturnMain() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedeptTempStockout() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedeptReStock() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializemainStockOut() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestockOut() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeemployee() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeworkingday() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesaleStatistic() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePurchaseOrderPeriod() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePurchaseOrderDetailReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePurchaseOrderReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomizeReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomizeDepartmentReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomizeDepartmentDetailReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeproduct_type() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDepartmentStockOut() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAllDepartmentPurchaseOrderReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStockEvaluationReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeExtraCustomizeDepartmentReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            posDataSet ds = new posDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void reStockinProductRowChangeEventHandler(object sender, reStockinProductRowChangeEvent e);
        
        public delegate void purchaseOrderRowChangeEventHandler(object sender, purchaseOrderRowChangeEvent e);
        
        public delegate void purchaseDetailsRowChangeEventHandler(object sender, purchaseDetailsRowChangeEvent e);
        
        public delegate void TmpStockoutRowChangeEventHandler(object sender, TmpStockoutRowChangeEvent e);
        
        public delegate void supplierStockoutRowChangeEventHandler(object sender, supplierStockoutRowChangeEvent e);
        
        public delegate void StockStatisticRowChangeEventHandler(object sender, StockStatisticRowChangeEvent e);
        
        public delegate void stockInRowChangeEventHandler(object sender, stockInRowChangeEvent e);
        
        public delegate void deptStockStatisticRowChangeEventHandler(object sender, deptStockStatisticRowChangeEvent e);
        
        public delegate void returnPOrderRowChangeEventHandler(object sender, returnPOrderRowChangeEvent e);
        
        public delegate void departmentStockInRowChangeEventHandler(object sender, departmentStockInRowChangeEvent e);
        
        public delegate void departmentRowChangeEventHandler(object sender, departmentRowChangeEvent e);
        
        public delegate void allStockRowChangeEventHandler(object sender, allStockRowChangeEvent e);
        
        public delegate void returnMainRowChangeEventHandler(object sender, returnMainRowChangeEvent e);
        
        public delegate void deptTempStockoutRowChangeEventHandler(object sender, deptTempStockoutRowChangeEvent e);
        
        public delegate void deptReStockRowChangeEventHandler(object sender, deptReStockRowChangeEvent e);
        
        public delegate void mainStockOutRowChangeEventHandler(object sender, mainStockOutRowChangeEvent e);
        
        public delegate void stockOutRowChangeEventHandler(object sender, stockOutRowChangeEvent e);
        
        public delegate void employeeRowChangeEventHandler(object sender, employeeRowChangeEvent e);
        
        public delegate void workingdayRowChangeEventHandler(object sender, workingdayRowChangeEvent e);
        
        public delegate void saleStatisticRowChangeEventHandler(object sender, saleStatisticRowChangeEvent e);
        
        public delegate void PurchaseOrderPeriodRowChangeEventHandler(object sender, PurchaseOrderPeriodRowChangeEvent e);
        
        public delegate void PurchaseOrderDetailReportRowChangeEventHandler(object sender, PurchaseOrderDetailReportRowChangeEvent e);
        
        public delegate void PurchaseOrderReportRowChangeEventHandler(object sender, PurchaseOrderReportRowChangeEvent e);
        
        public delegate void CustomizeReportRowChangeEventHandler(object sender, CustomizeReportRowChangeEvent e);
        
        public delegate void CustomizeDepartmentReportRowChangeEventHandler(object sender, CustomizeDepartmentReportRowChangeEvent e);
        
        public delegate void CustomizeDepartmentDetailReportRowChangeEventHandler(object sender, CustomizeDepartmentDetailReportRowChangeEvent e);
        
        public delegate void product_typeRowChangeEventHandler(object sender, product_typeRowChangeEvent e);
        
        public delegate void DepartmentStockOutRowChangeEventHandler(object sender, DepartmentStockOutRowChangeEvent e);
        
        public delegate void AllDepartmentPurchaseOrderReportRowChangeEventHandler(object sender, AllDepartmentPurchaseOrderReportRowChangeEvent e);
        
        public delegate void StockEvaluationReportRowChangeEventHandler(object sender, StockEvaluationReportRowChangeEvent e);
        
        public delegate void ExtraCustomizeDepartmentReportRowChangeEventHandler(object sender, ExtraCustomizeDepartmentReportRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class reStockinProductDataTable : global::System.Data.TypedTableBase<reStockinProductRow> {
            
            private global::System.Data.DataColumn columntype_name;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columnSTOCK_IN_ID;
            
            private global::System.Data.DataColumn columnSTOCK_IN_DATE;
            
            private global::System.Data.DataColumn columnPRODUCT_ID;
            
            private global::System.Data.DataColumn columnQUANTITY;
            
            private global::System.Data.DataColumn columnPRICE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public reStockinProductDataTable() {
                this.TableName = "reStockinProduct";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal reStockinProductDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected reStockinProductDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_nameColumn {
                get {
                    return this.columntype_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STOCK_IN_IDColumn {
                get {
                    return this.columnSTOCK_IN_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STOCK_IN_DATEColumn {
                get {
                    return this.columnSTOCK_IN_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_IDColumn {
                get {
                    return this.columnPRODUCT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QUANTITYColumn {
                get {
                    return this.columnQUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRICEColumn {
                get {
                    return this.columnPRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public reStockinProductRow this[int index] {
                get {
                    return ((reStockinProductRow)(this.Rows[index]));
                }
            }
            
            public event reStockinProductRowChangeEventHandler reStockinProductRowChanging;
            
            public event reStockinProductRowChangeEventHandler reStockinProductRowChanged;
            
            public event reStockinProductRowChangeEventHandler reStockinProductRowDeleting;
            
            public event reStockinProductRowChangeEventHandler reStockinProductRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddreStockinProductRow(reStockinProductRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public reStockinProductRow AddreStockinProductRow(string type_name, string product_name, string STOCK_IN_ID, System.DateTime STOCK_IN_DATE, string PRODUCT_ID, uint QUANTITY, uint PRICE) {
                reStockinProductRow rowreStockinProductRow = ((reStockinProductRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        type_name,
                        product_name,
                        STOCK_IN_ID,
                        STOCK_IN_DATE,
                        PRODUCT_ID,
                        QUANTITY,
                        PRICE};
                rowreStockinProductRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowreStockinProductRow);
                return rowreStockinProductRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                reStockinProductDataTable cln = ((reStockinProductDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new reStockinProductDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntype_name = base.Columns["type_name"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columnSTOCK_IN_ID = base.Columns["STOCK_IN_ID"];
                this.columnSTOCK_IN_DATE = base.Columns["STOCK_IN_DATE"];
                this.columnPRODUCT_ID = base.Columns["PRODUCT_ID"];
                this.columnQUANTITY = base.Columns["QUANTITY"];
                this.columnPRICE = base.Columns["PRICE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntype_name = new global::System.Data.DataColumn("type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_name);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columnSTOCK_IN_ID = new global::System.Data.DataColumn("STOCK_IN_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_IN_ID);
                this.columnSTOCK_IN_DATE = new global::System.Data.DataColumn("STOCK_IN_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_IN_DATE);
                this.columnPRODUCT_ID = new global::System.Data.DataColumn("PRODUCT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_ID);
                this.columnQUANTITY = new global::System.Data.DataColumn("QUANTITY", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUANTITY);
                this.columnPRICE = new global::System.Data.DataColumn("PRICE", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRICE);
                this.columntype_name.MaxLength = 500;
                this.columnproduct_name.MaxLength = 500;
                this.columnSTOCK_IN_ID.AllowDBNull = false;
                this.columnSTOCK_IN_ID.MaxLength = 11;
                this.columnPRODUCT_ID.AllowDBNull = false;
                this.columnPRODUCT_ID.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public reStockinProductRow NewreStockinProductRow() {
                return ((reStockinProductRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new reStockinProductRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(reStockinProductRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.reStockinProductRowChanged != null)) {
                    this.reStockinProductRowChanged(this, new reStockinProductRowChangeEvent(((reStockinProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.reStockinProductRowChanging != null)) {
                    this.reStockinProductRowChanging(this, new reStockinProductRowChangeEvent(((reStockinProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.reStockinProductRowDeleted != null)) {
                    this.reStockinProductRowDeleted(this, new reStockinProductRowChangeEvent(((reStockinProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.reStockinProductRowDeleting != null)) {
                    this.reStockinProductRowDeleting(this, new reStockinProductRowChangeEvent(((reStockinProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovereStockinProductRow(reStockinProductRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "reStockinProductDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class purchaseOrderDataTable : global::System.Data.TypedTableBase<purchaseOrderRow> {
            
            private global::System.Data.DataColumn columnPURCHASE_ORDER_ID;
            
            private global::System.Data.DataColumn columnTYPE_NAME;
            
            private global::System.Data.DataColumn columnPRODUCT_NAME;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columncolor_name;
            
            private global::System.Data.DataColumn columnsize_name;
            
            private global::System.Data.DataColumn columndepartment_name;
            
            private global::System.Data.DataColumn columnaddress;
            
            private global::System.Data.DataColumn _columndate_format_purchase_order_CREATE_DATE____d__m__Y__;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public purchaseOrderDataTable() {
                this.TableName = "purchaseOrder";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal purchaseOrderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected purchaseOrderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PURCHASE_ORDER_IDColumn {
                get {
                    return this.columnPURCHASE_ORDER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TYPE_NAMEColumn {
                get {
                    return this.columnTYPE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_NAMEColumn {
                get {
                    return this.columnPRODUCT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn color_nameColumn {
                get {
                    return this.columncolor_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn size_nameColumn {
                get {
                    return this.columnsize_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn department_nameColumn {
                get {
                    return this.columndepartment_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _date_format_purchase_order_CREATE_DATE____d__m__Y__Column {
                get {
                    return this._columndate_format_purchase_order_CREATE_DATE____d__m__Y__;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public purchaseOrderRow this[int index] {
                get {
                    return ((purchaseOrderRow)(this.Rows[index]));
                }
            }
            
            public event purchaseOrderRowChangeEventHandler purchaseOrderRowChanging;
            
            public event purchaseOrderRowChangeEventHandler purchaseOrderRowChanged;
            
            public event purchaseOrderRowChangeEventHandler purchaseOrderRowDeleting;
            
            public event purchaseOrderRowChangeEventHandler purchaseOrderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddpurchaseOrderRow(purchaseOrderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public purchaseOrderRow AddpurchaseOrderRow(string PURCHASE_ORDER_ID, string TYPE_NAME, string PRODUCT_NAME, string product_id, decimal Quantity, decimal Price, string color_name, string size_name, string department_name, string address, string _date_format_purchase_order_CREATE_DATE____d__m__Y__) {
                purchaseOrderRow rowpurchaseOrderRow = ((purchaseOrderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PURCHASE_ORDER_ID,
                        TYPE_NAME,
                        PRODUCT_NAME,
                        product_id,
                        Quantity,
                        Price,
                        color_name,
                        size_name,
                        department_name,
                        address,
                        _date_format_purchase_order_CREATE_DATE____d__m__Y__};
                rowpurchaseOrderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowpurchaseOrderRow);
                return rowpurchaseOrderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public purchaseOrderRow FindByPURCHASE_ORDER_ID(string PURCHASE_ORDER_ID) {
                return ((purchaseOrderRow)(this.Rows.Find(new object[] {
                            PURCHASE_ORDER_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                purchaseOrderDataTable cln = ((purchaseOrderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new purchaseOrderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPURCHASE_ORDER_ID = base.Columns["PURCHASE_ORDER_ID"];
                this.columnTYPE_NAME = base.Columns["TYPE_NAME"];
                this.columnPRODUCT_NAME = base.Columns["PRODUCT_NAME"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnPrice = base.Columns["Price"];
                this.columncolor_name = base.Columns["color_name"];
                this.columnsize_name = base.Columns["size_name"];
                this.columndepartment_name = base.Columns["department_name"];
                this.columnaddress = base.Columns["address"];
                this._columndate_format_purchase_order_CREATE_DATE____d__m__Y__ = base.Columns["date_format(purchase_order_CREATE_DATE, \'%d/%m/%Y\')"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPURCHASE_ORDER_ID = new global::System.Data.DataColumn("PURCHASE_ORDER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPURCHASE_ORDER_ID);
                this.columnTYPE_NAME = new global::System.Data.DataColumn("TYPE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_NAME);
                this.columnPRODUCT_NAME = new global::System.Data.DataColumn("PRODUCT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_NAME);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columncolor_name = new global::System.Data.DataColumn("color_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor_name);
                this.columnsize_name = new global::System.Data.DataColumn("size_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsize_name);
                this.columndepartment_name = new global::System.Data.DataColumn("department_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_name);
                this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this._columndate_format_purchase_order_CREATE_DATE____d__m__Y__ = new global::System.Data.DataColumn("date_format(purchase_order_CREATE_DATE, \'%d/%m/%Y\')", typeof(string), null, global::System.Data.MappingType.Element);
                this._columndate_format_purchase_order_CREATE_DATE____d__m__Y__.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columndate_format_purchase_order_CREATE_DATE____d__m__Y__");
                this._columndate_format_purchase_order_CREATE_DATE____d__m__Y__.ExtendedProperties.Add("Generator_UserColumnName", "date_format(purchase_order_CREATE_DATE, \'%d/%m/%Y\')");
                base.Columns.Add(this._columndate_format_purchase_order_CREATE_DATE____d__m__Y__);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPURCHASE_ORDER_ID}, true));
                this.columnPURCHASE_ORDER_ID.AllowDBNull = false;
                this.columnPURCHASE_ORDER_ID.Unique = true;
                this.columnPURCHASE_ORDER_ID.MaxLength = 20;
                this.columnTYPE_NAME.MaxLength = 500;
                this.columnPRODUCT_NAME.MaxLength = 500;
                this.columnproduct_id.MaxLength = 20;
                this.columncolor_name.MaxLength = 500;
                this.columnsize_name.MaxLength = 500;
                this.columndepartment_name.MaxLength = 500;
                this.columnaddress.MaxLength = 500;
                this._columndate_format_purchase_order_CREATE_DATE____d__m__Y__.Caption = "date_format(purchase_order.CREATE_DATE, \'%d/%m/%Y\')";
                this._columndate_format_purchase_order_CREATE_DATE____d__m__Y__.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public purchaseOrderRow NewpurchaseOrderRow() {
                return ((purchaseOrderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new purchaseOrderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(purchaseOrderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.purchaseOrderRowChanged != null)) {
                    this.purchaseOrderRowChanged(this, new purchaseOrderRowChangeEvent(((purchaseOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.purchaseOrderRowChanging != null)) {
                    this.purchaseOrderRowChanging(this, new purchaseOrderRowChangeEvent(((purchaseOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.purchaseOrderRowDeleted != null)) {
                    this.purchaseOrderRowDeleted(this, new purchaseOrderRowChangeEvent(((purchaseOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.purchaseOrderRowDeleting != null)) {
                    this.purchaseOrderRowDeleting(this, new purchaseOrderRowChangeEvent(((purchaseOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovepurchaseOrderRow(purchaseOrderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "purchaseOrderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class purchaseDetailsDataTable : global::System.Data.TypedTableBase<purchaseDetailsRow> {
            
            private global::System.Data.DataColumn columnPURCHASE_ORDER_ID;
            
            private global::System.Data.DataColumn columnCREATE_DATE;
            
            private global::System.Data.DataColumn columntype_name;
            
            private global::System.Data.DataColumn columnPRODUCT_ID;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columncolor_name;
            
            private global::System.Data.DataColumn columnsize_name;
            
            private global::System.Data.DataColumn columnQUANTITY;
            
            private global::System.Data.DataColumn columnPRICE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public purchaseDetailsDataTable() {
                this.TableName = "purchaseDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal purchaseDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected purchaseDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PURCHASE_ORDER_IDColumn {
                get {
                    return this.columnPURCHASE_ORDER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DATEColumn {
                get {
                    return this.columnCREATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_nameColumn {
                get {
                    return this.columntype_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_IDColumn {
                get {
                    return this.columnPRODUCT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn color_nameColumn {
                get {
                    return this.columncolor_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn size_nameColumn {
                get {
                    return this.columnsize_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QUANTITYColumn {
                get {
                    return this.columnQUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRICEColumn {
                get {
                    return this.columnPRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public purchaseDetailsRow this[int index] {
                get {
                    return ((purchaseDetailsRow)(this.Rows[index]));
                }
            }
            
            public event purchaseDetailsRowChangeEventHandler purchaseDetailsRowChanging;
            
            public event purchaseDetailsRowChangeEventHandler purchaseDetailsRowChanged;
            
            public event purchaseDetailsRowChangeEventHandler purchaseDetailsRowDeleting;
            
            public event purchaseDetailsRowChangeEventHandler purchaseDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddpurchaseDetailsRow(purchaseDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public purchaseDetailsRow AddpurchaseDetailsRow(string PURCHASE_ORDER_ID, System.DateTime CREATE_DATE, string type_name, string PRODUCT_ID, string product_name, string color_name, string size_name, uint QUANTITY, uint PRICE) {
                purchaseDetailsRow rowpurchaseDetailsRow = ((purchaseDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PURCHASE_ORDER_ID,
                        CREATE_DATE,
                        type_name,
                        PRODUCT_ID,
                        product_name,
                        color_name,
                        size_name,
                        QUANTITY,
                        PRICE};
                rowpurchaseDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowpurchaseDetailsRow);
                return rowpurchaseDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                purchaseDetailsDataTable cln = ((purchaseDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new purchaseDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPURCHASE_ORDER_ID = base.Columns["PURCHASE_ORDER_ID"];
                this.columnCREATE_DATE = base.Columns["CREATE_DATE"];
                this.columntype_name = base.Columns["type_name"];
                this.columnPRODUCT_ID = base.Columns["PRODUCT_ID"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columncolor_name = base.Columns["color_name"];
                this.columnsize_name = base.Columns["size_name"];
                this.columnQUANTITY = base.Columns["QUANTITY"];
                this.columnPRICE = base.Columns["PRICE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPURCHASE_ORDER_ID = new global::System.Data.DataColumn("PURCHASE_ORDER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPURCHASE_ORDER_ID);
                this.columnCREATE_DATE = new global::System.Data.DataColumn("CREATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DATE);
                this.columntype_name = new global::System.Data.DataColumn("type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_name);
                this.columnPRODUCT_ID = new global::System.Data.DataColumn("PRODUCT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_ID);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columncolor_name = new global::System.Data.DataColumn("color_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor_name);
                this.columnsize_name = new global::System.Data.DataColumn("size_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsize_name);
                this.columnQUANTITY = new global::System.Data.DataColumn("QUANTITY", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUANTITY);
                this.columnPRICE = new global::System.Data.DataColumn("PRICE", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRICE);
                this.columnPURCHASE_ORDER_ID.AllowDBNull = false;
                this.columnPURCHASE_ORDER_ID.MaxLength = 20;
                this.columntype_name.MaxLength = 500;
                this.columnPRODUCT_ID.MaxLength = 20;
                this.columnproduct_name.MaxLength = 500;
                this.columncolor_name.MaxLength = 500;
                this.columnsize_name.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public purchaseDetailsRow NewpurchaseDetailsRow() {
                return ((purchaseDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new purchaseDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(purchaseDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.purchaseDetailsRowChanged != null)) {
                    this.purchaseDetailsRowChanged(this, new purchaseDetailsRowChangeEvent(((purchaseDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.purchaseDetailsRowChanging != null)) {
                    this.purchaseDetailsRowChanging(this, new purchaseDetailsRowChangeEvent(((purchaseDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.purchaseDetailsRowDeleted != null)) {
                    this.purchaseDetailsRowDeleted(this, new purchaseDetailsRowChangeEvent(((purchaseDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.purchaseDetailsRowDeleting != null)) {
                    this.purchaseDetailsRowDeleting(this, new purchaseDetailsRowChangeEvent(((purchaseDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovepurchaseDetailsRow(purchaseDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "purchaseDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TmpStockoutDataTable : global::System.Data.TypedTableBase<TmpStockoutRow> {
            
            private global::System.Data.DataColumn columnstockout_id;
            
            private global::System.Data.DataColumn columnstock_out_date;
            
            private global::System.Data.DataColumn columntype_name;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columnquantity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TmpStockoutDataTable() {
                this.TableName = "TmpStockout";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TmpStockoutDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TmpStockoutDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stockout_idColumn {
                get {
                    return this.columnstockout_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stock_out_dateColumn {
                get {
                    return this.columnstock_out_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_nameColumn {
                get {
                    return this.columntype_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantityColumn {
                get {
                    return this.columnquantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TmpStockoutRow this[int index] {
                get {
                    return ((TmpStockoutRow)(this.Rows[index]));
                }
            }
            
            public event TmpStockoutRowChangeEventHandler TmpStockoutRowChanging;
            
            public event TmpStockoutRowChangeEventHandler TmpStockoutRowChanged;
            
            public event TmpStockoutRowChangeEventHandler TmpStockoutRowDeleting;
            
            public event TmpStockoutRowChangeEventHandler TmpStockoutRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTmpStockoutRow(TmpStockoutRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TmpStockoutRow AddTmpStockoutRow(uint stockout_id, System.DateTime stock_out_date, string type_name, string product_id, string product_name, uint quantity) {
                TmpStockoutRow rowTmpStockoutRow = ((TmpStockoutRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        stockout_id,
                        stock_out_date,
                        type_name,
                        product_id,
                        product_name,
                        quantity};
                rowTmpStockoutRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTmpStockoutRow);
                return rowTmpStockoutRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TmpStockoutDataTable cln = ((TmpStockoutDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TmpStockoutDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstockout_id = base.Columns["stockout_id"];
                this.columnstock_out_date = base.Columns["stock_out_date"];
                this.columntype_name = base.Columns["type_name"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columnquantity = base.Columns["quantity"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstockout_id = new global::System.Data.DataColumn("stockout_id", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstockout_id);
                this.columnstock_out_date = new global::System.Data.DataColumn("stock_out_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstock_out_date);
                this.columntype_name = new global::System.Data.DataColumn("type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_name);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columnquantity = new global::System.Data.DataColumn("quantity", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity);
                this.columnstockout_id.AllowDBNull = false;
                this.columntype_name.MaxLength = 500;
                this.columnproduct_id.AllowDBNull = false;
                this.columnproduct_id.MaxLength = 20;
                this.columnproduct_name.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TmpStockoutRow NewTmpStockoutRow() {
                return ((TmpStockoutRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TmpStockoutRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TmpStockoutRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TmpStockoutRowChanged != null)) {
                    this.TmpStockoutRowChanged(this, new TmpStockoutRowChangeEvent(((TmpStockoutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TmpStockoutRowChanging != null)) {
                    this.TmpStockoutRowChanging(this, new TmpStockoutRowChangeEvent(((TmpStockoutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TmpStockoutRowDeleted != null)) {
                    this.TmpStockoutRowDeleted(this, new TmpStockoutRowChangeEvent(((TmpStockoutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TmpStockoutRowDeleting != null)) {
                    this.TmpStockoutRowDeleting(this, new TmpStockoutRowChangeEvent(((TmpStockoutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTmpStockoutRow(TmpStockoutRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TmpStockoutDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class supplierStockoutDataTable : global::System.Data.TypedTableBase<supplierStockoutRow> {
            
            private global::System.Data.DataColumn columntype_name;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columnquantity;
            
            private global::System.Data.DataColumn columnSTOCKOUT_ID;
            
            private global::System.Data.DataColumn columnSTOCK_OUT_DATE;
            
            private global::System.Data.DataColumn columnPRODUCT_ID;
            
            private global::System.Data.DataColumn columnDEFECT_STATUS_NAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public supplierStockoutDataTable() {
                this.TableName = "supplierStockout";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal supplierStockoutDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected supplierStockoutDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_nameColumn {
                get {
                    return this.columntype_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantityColumn {
                get {
                    return this.columnquantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STOCKOUT_IDColumn {
                get {
                    return this.columnSTOCKOUT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STOCK_OUT_DATEColumn {
                get {
                    return this.columnSTOCK_OUT_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_IDColumn {
                get {
                    return this.columnPRODUCT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEFECT_STATUS_NAMEColumn {
                get {
                    return this.columnDEFECT_STATUS_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public supplierStockoutRow this[int index] {
                get {
                    return ((supplierStockoutRow)(this.Rows[index]));
                }
            }
            
            public event supplierStockoutRowChangeEventHandler supplierStockoutRowChanging;
            
            public event supplierStockoutRowChangeEventHandler supplierStockoutRowChanged;
            
            public event supplierStockoutRowChangeEventHandler supplierStockoutRowDeleting;
            
            public event supplierStockoutRowChangeEventHandler supplierStockoutRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddsupplierStockoutRow(supplierStockoutRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public supplierStockoutRow AddsupplierStockoutRow(string type_name, string product_name, decimal quantity, uint STOCKOUT_ID, System.DateTime STOCK_OUT_DATE, string PRODUCT_ID, string DEFECT_STATUS_NAME) {
                supplierStockoutRow rowsupplierStockoutRow = ((supplierStockoutRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        type_name,
                        product_name,
                        quantity,
                        STOCKOUT_ID,
                        STOCK_OUT_DATE,
                        PRODUCT_ID,
                        DEFECT_STATUS_NAME};
                rowsupplierStockoutRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsupplierStockoutRow);
                return rowsupplierStockoutRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                supplierStockoutDataTable cln = ((supplierStockoutDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new supplierStockoutDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntype_name = base.Columns["type_name"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columnquantity = base.Columns["quantity"];
                this.columnSTOCKOUT_ID = base.Columns["STOCKOUT_ID"];
                this.columnSTOCK_OUT_DATE = base.Columns["STOCK_OUT_DATE"];
                this.columnPRODUCT_ID = base.Columns["PRODUCT_ID"];
                this.columnDEFECT_STATUS_NAME = base.Columns["DEFECT_STATUS_NAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntype_name = new global::System.Data.DataColumn("type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_name);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columnquantity = new global::System.Data.DataColumn("quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity);
                this.columnSTOCKOUT_ID = new global::System.Data.DataColumn("STOCKOUT_ID", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCKOUT_ID);
                this.columnSTOCK_OUT_DATE = new global::System.Data.DataColumn("STOCK_OUT_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_OUT_DATE);
                this.columnPRODUCT_ID = new global::System.Data.DataColumn("PRODUCT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_ID);
                this.columnDEFECT_STATUS_NAME = new global::System.Data.DataColumn("DEFECT_STATUS_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFECT_STATUS_NAME);
                this.columntype_name.MaxLength = 500;
                this.columnproduct_name.MaxLength = 500;
                this.columnSTOCKOUT_ID.AllowDBNull = false;
                this.columnPRODUCT_ID.AllowDBNull = false;
                this.columnPRODUCT_ID.MaxLength = 20;
                this.columnDEFECT_STATUS_NAME.AllowDBNull = false;
                this.columnDEFECT_STATUS_NAME.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public supplierStockoutRow NewsupplierStockoutRow() {
                return ((supplierStockoutRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new supplierStockoutRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(supplierStockoutRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.supplierStockoutRowChanged != null)) {
                    this.supplierStockoutRowChanged(this, new supplierStockoutRowChangeEvent(((supplierStockoutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.supplierStockoutRowChanging != null)) {
                    this.supplierStockoutRowChanging(this, new supplierStockoutRowChangeEvent(((supplierStockoutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.supplierStockoutRowDeleted != null)) {
                    this.supplierStockoutRowDeleted(this, new supplierStockoutRowChangeEvent(((supplierStockoutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.supplierStockoutRowDeleting != null)) {
                    this.supplierStockoutRowDeleting(this, new supplierStockoutRowChangeEvent(((supplierStockoutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovesupplierStockoutRow(supplierStockoutRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "supplierStockoutDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockStatisticDataTable : global::System.Data.TypedTableBase<StockStatisticRow> {
            
            private global::System.Data.DataColumn columnerror_qty;
            
            private global::System.Data.DataColumn columnprestk_qty;
            
            private global::System.Data.DataColumn columninstock_qty;
            
            private global::System.Data.DataColumn columndmg_qty;
            
            private global::System.Data.DataColumn columnstkout_qty;
            
            private global::System.Data.DataColumn columntmpout_qty;
            
            private global::System.Data.DataColumn columnrtn_qty;
            
            private global::System.Data.DataColumn columndestroy_qty;
            
            private global::System.Data.DataColumn columnrealstock;
            
            private global::System.Data.DataColumn columnmainrtnqty;
            
            private global::System.Data.DataColumn columnTYPE_NAME;
            
            private global::System.Data.DataColumn columnPRODUCT_ID;
            
            private global::System.Data.DataColumn columnCOLOR_NAME;
            
            private global::System.Data.DataColumn columnSIZE_NAME;
            
            private global::System.Data.DataColumn columntype_name;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columncolor_name;
            
            private global::System.Data.DataColumn columnsize_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockStatisticDataTable() {
                this.TableName = "StockStatistic";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockStatisticDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StockStatisticDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn error_qtyColumn {
                get {
                    return this.columnerror_qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn prestk_qtyColumn {
                get {
                    return this.columnprestk_qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn instock_qtyColumn {
                get {
                    return this.columninstock_qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dmg_qtyColumn {
                get {
                    return this.columndmg_qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stkout_qtyColumn {
                get {
                    return this.columnstkout_qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tmpout_qtyColumn {
                get {
                    return this.columntmpout_qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rtn_qtyColumn {
                get {
                    return this.columnrtn_qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn destroy_qtyColumn {
                get {
                    return this.columndestroy_qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn realstockColumn {
                get {
                    return this.columnrealstock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mainrtnqtyColumn {
                get {
                    return this.columnmainrtnqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TYPE_NAMEColumn {
                get {
                    return this.columnTYPE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_IDColumn {
                get {
                    return this.columnPRODUCT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COLOR_NAMEColumn {
                get {
                    return this.columnCOLOR_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIZE_NAMEColumn {
                get {
                    return this.columnSIZE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_nameColumn {
                get {
                    return this.columntype_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn color_nameColumn {
                get {
                    return this.columncolor_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn size_nameColumn {
                get {
                    return this.columnsize_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockStatisticRow this[int index] {
                get {
                    return ((StockStatisticRow)(this.Rows[index]));
                }
            }
            
            public event StockStatisticRowChangeEventHandler StockStatisticRowChanging;
            
            public event StockStatisticRowChangeEventHandler StockStatisticRowChanged;
            
            public event StockStatisticRowChangeEventHandler StockStatisticRowDeleting;
            
            public event StockStatisticRowChangeEventHandler StockStatisticRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStockStatisticRow(StockStatisticRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockStatisticRow AddStockStatisticRow(
                        decimal error_qty, 
                        decimal prestk_qty, 
                        decimal instock_qty, 
                        decimal dmg_qty, 
                        decimal stkout_qty, 
                        decimal tmpout_qty, 
                        decimal rtn_qty, 
                        decimal destroy_qty, 
                        decimal realstock, 
                        decimal mainrtnqty, 
                        string TYPE_NAME, 
                        string PRODUCT_ID, 
                        string COLOR_NAME, 
                        string SIZE_NAME, 
                        string type_name1, 
                        string product_id1, 
                        string product_name, 
                        string color_name1, 
                        string size_name1) {
                StockStatisticRow rowStockStatisticRow = ((StockStatisticRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        error_qty,
                        prestk_qty,
                        instock_qty,
                        dmg_qty,
                        stkout_qty,
                        tmpout_qty,
                        rtn_qty,
                        destroy_qty,
                        realstock,
                        mainrtnqty,
                        TYPE_NAME,
                        PRODUCT_ID,
                        COLOR_NAME,
                        SIZE_NAME,
                        type_name1,
                        product_id1,
                        product_name,
                        color_name1,
                        size_name1};
                rowStockStatisticRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStockStatisticRow);
                return rowStockStatisticRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StockStatisticDataTable cln = ((StockStatisticDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StockStatisticDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnerror_qty = base.Columns["error_qty"];
                this.columnprestk_qty = base.Columns["prestk_qty"];
                this.columninstock_qty = base.Columns["instock_qty"];
                this.columndmg_qty = base.Columns["dmg_qty"];
                this.columnstkout_qty = base.Columns["stkout_qty"];
                this.columntmpout_qty = base.Columns["tmpout_qty"];
                this.columnrtn_qty = base.Columns["rtn_qty"];
                this.columndestroy_qty = base.Columns["destroy_qty"];
                this.columnrealstock = base.Columns["realstock"];
                this.columnmainrtnqty = base.Columns["mainrtnqty"];
                this.columnTYPE_NAME = base.Columns["TYPE_NAME"];
                this.columnPRODUCT_ID = base.Columns["PRODUCT_ID"];
                this.columnCOLOR_NAME = base.Columns["COLOR_NAME"];
                this.columnSIZE_NAME = base.Columns["SIZE_NAME"];
                this.columntype_name = base.Columns["type_name"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columncolor_name = base.Columns["color_name"];
                this.columnsize_name = base.Columns["size_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnerror_qty = new global::System.Data.DataColumn("error_qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnerror_qty);
                this.columnprestk_qty = new global::System.Data.DataColumn("prestk_qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprestk_qty);
                this.columninstock_qty = new global::System.Data.DataColumn("instock_qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninstock_qty);
                this.columndmg_qty = new global::System.Data.DataColumn("dmg_qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndmg_qty);
                this.columnstkout_qty = new global::System.Data.DataColumn("stkout_qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstkout_qty);
                this.columntmpout_qty = new global::System.Data.DataColumn("tmpout_qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntmpout_qty);
                this.columnrtn_qty = new global::System.Data.DataColumn("rtn_qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrtn_qty);
                this.columndestroy_qty = new global::System.Data.DataColumn("destroy_qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndestroy_qty);
                this.columnrealstock = new global::System.Data.DataColumn("realstock", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrealstock);
                this.columnmainrtnqty = new global::System.Data.DataColumn("mainrtnqty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmainrtnqty);
                this.columnTYPE_NAME = new global::System.Data.DataColumn("TYPE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_NAME);
                this.columnPRODUCT_ID = new global::System.Data.DataColumn("PRODUCT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_ID);
                this.columnCOLOR_NAME = new global::System.Data.DataColumn("COLOR_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLOR_NAME);
                this.columnSIZE_NAME = new global::System.Data.DataColumn("SIZE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIZE_NAME);
                this.columntype_name = new global::System.Data.DataColumn("type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_name);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columncolor_name = new global::System.Data.DataColumn("color_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor_name);
                this.columnsize_name = new global::System.Data.DataColumn("size_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsize_name);
                this.columnTYPE_NAME.MaxLength = 500;
                this.columnPRODUCT_ID.AllowDBNull = false;
                this.columnPRODUCT_ID.MaxLength = 20;
                this.columnCOLOR_NAME.MaxLength = 500;
                this.columnSIZE_NAME.MaxLength = 500;
                this.columntype_name.MaxLength = 500;
                this.columnproduct_id.AllowDBNull = false;
                this.columnproduct_id.MaxLength = 20;
                this.columnproduct_name.MaxLength = 500;
                this.columncolor_name.MaxLength = 500;
                this.columnsize_name.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockStatisticRow NewStockStatisticRow() {
                return ((StockStatisticRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StockStatisticRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StockStatisticRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockStatisticRowChanged != null)) {
                    this.StockStatisticRowChanged(this, new StockStatisticRowChangeEvent(((StockStatisticRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockStatisticRowChanging != null)) {
                    this.StockStatisticRowChanging(this, new StockStatisticRowChangeEvent(((StockStatisticRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockStatisticRowDeleted != null)) {
                    this.StockStatisticRowDeleted(this, new StockStatisticRowChangeEvent(((StockStatisticRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockStatisticRowDeleting != null)) {
                    this.StockStatisticRowDeleting(this, new StockStatisticRowChangeEvent(((StockStatisticRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStockStatisticRow(StockStatisticRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockStatisticDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class stockInDataTable : global::System.Data.TypedTableBase<stockInRow> {
            
            private global::System.Data.DataColumn columnSTOCK_IN_ID;
            
            private global::System.Data.DataColumn columntype_name;
            
            private global::System.Data.DataColumn columnPRODUCT_ID;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columnquantity;
            
            private global::System.Data.DataColumn columnprice;
            
            private global::System.Data.DataColumn columncolor_name;
            
            private global::System.Data.DataColumn columnsize_name;
            
            private global::System.Data.DataColumn columnstock_in_date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockInDataTable() {
                this.TableName = "stockIn";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal stockInDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected stockInDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STOCK_IN_IDColumn {
                get {
                    return this.columnSTOCK_IN_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_nameColumn {
                get {
                    return this.columntype_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_IDColumn {
                get {
                    return this.columnPRODUCT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantityColumn {
                get {
                    return this.columnquantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priceColumn {
                get {
                    return this.columnprice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn color_nameColumn {
                get {
                    return this.columncolor_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn size_nameColumn {
                get {
                    return this.columnsize_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stock_in_dateColumn {
                get {
                    return this.columnstock_in_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockInRow this[int index] {
                get {
                    return ((stockInRow)(this.Rows[index]));
                }
            }
            
            public event stockInRowChangeEventHandler stockInRowChanging;
            
            public event stockInRowChangeEventHandler stockInRowChanged;
            
            public event stockInRowChangeEventHandler stockInRowDeleting;
            
            public event stockInRowChangeEventHandler stockInRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddstockInRow(stockInRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockInRow AddstockInRow(string STOCK_IN_ID, string type_name, string PRODUCT_ID, string product_name, decimal quantity, decimal price, string color_name, string size_name, string stock_in_date) {
                stockInRow rowstockInRow = ((stockInRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        STOCK_IN_ID,
                        type_name,
                        PRODUCT_ID,
                        product_name,
                        quantity,
                        price,
                        color_name,
                        size_name,
                        stock_in_date};
                rowstockInRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowstockInRow);
                return rowstockInRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockInRow FindBySTOCK_IN_IDPRODUCT_ID(string STOCK_IN_ID, string PRODUCT_ID) {
                return ((stockInRow)(this.Rows.Find(new object[] {
                            STOCK_IN_ID,
                            PRODUCT_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                stockInDataTable cln = ((stockInDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new stockInDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSTOCK_IN_ID = base.Columns["STOCK_IN_ID"];
                this.columntype_name = base.Columns["type_name"];
                this.columnPRODUCT_ID = base.Columns["PRODUCT_ID"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columnquantity = base.Columns["quantity"];
                this.columnprice = base.Columns["price"];
                this.columncolor_name = base.Columns["color_name"];
                this.columnsize_name = base.Columns["size_name"];
                this.columnstock_in_date = base.Columns["stock_in_date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSTOCK_IN_ID = new global::System.Data.DataColumn("STOCK_IN_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_IN_ID);
                this.columntype_name = new global::System.Data.DataColumn("type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_name);
                this.columnPRODUCT_ID = new global::System.Data.DataColumn("PRODUCT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_ID);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columnquantity = new global::System.Data.DataColumn("quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity);
                this.columnprice = new global::System.Data.DataColumn("price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice);
                this.columncolor_name = new global::System.Data.DataColumn("color_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor_name);
                this.columnsize_name = new global::System.Data.DataColumn("size_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsize_name);
                this.columnstock_in_date = new global::System.Data.DataColumn("stock_in_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstock_in_date);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSTOCK_IN_ID,
                                this.columnPRODUCT_ID}, true));
                this.columnSTOCK_IN_ID.AllowDBNull = false;
                this.columnSTOCK_IN_ID.MaxLength = 11;
                this.columntype_name.MaxLength = 500;
                this.columnPRODUCT_ID.AllowDBNull = false;
                this.columnPRODUCT_ID.MaxLength = 20;
                this.columnproduct_name.MaxLength = 500;
                this.columncolor_name.MaxLength = 500;
                this.columnsize_name.MaxLength = 500;
                this.columnstock_in_date.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockInRow NewstockInRow() {
                return ((stockInRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new stockInRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(stockInRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.stockInRowChanged != null)) {
                    this.stockInRowChanged(this, new stockInRowChangeEvent(((stockInRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.stockInRowChanging != null)) {
                    this.stockInRowChanging(this, new stockInRowChangeEvent(((stockInRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.stockInRowDeleted != null)) {
                    this.stockInRowDeleted(this, new stockInRowChangeEvent(((stockInRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.stockInRowDeleting != null)) {
                    this.stockInRowDeleting(this, new stockInRowChangeEvent(((stockInRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovestockInRow(stockInRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "stockInDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class deptStockStatisticDataTable : global::System.Data.TypedTableBase<deptStockStatisticRow> {
            
            private global::System.Data.DataColumn columntype_name;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columnerror_qty;
            
            private global::System.Data.DataColumn columncolor_name;
            
            private global::System.Data.DataColumn columnsize_name;
            
            private global::System.Data.DataColumn columnprestk_qty;
            
            private global::System.Data.DataColumn columninstock_qty;
            
            private global::System.Data.DataColumn columndmg_qty;
            
            private global::System.Data.DataColumn columnstkout_qty;
            
            private global::System.Data.DataColumn columntmpout_qty;
            
            private global::System.Data.DataColumn columnrtn_qty;
            
            private global::System.Data.DataColumn columndestroy_qty;
            
            private global::System.Data.DataColumn columnrealstock;
            
            private global::System.Data.DataColumn columnbkpro;
            
            private global::System.Data.DataColumn columndepartment_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deptStockStatisticDataTable() {
                this.TableName = "deptStockStatistic";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal deptStockStatisticDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected deptStockStatisticDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_nameColumn {
                get {
                    return this.columntype_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn error_qtyColumn {
                get {
                    return this.columnerror_qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn color_nameColumn {
                get {
                    return this.columncolor_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn size_nameColumn {
                get {
                    return this.columnsize_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn prestk_qtyColumn {
                get {
                    return this.columnprestk_qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn instock_qtyColumn {
                get {
                    return this.columninstock_qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dmg_qtyColumn {
                get {
                    return this.columndmg_qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stkout_qtyColumn {
                get {
                    return this.columnstkout_qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tmpout_qtyColumn {
                get {
                    return this.columntmpout_qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rtn_qtyColumn {
                get {
                    return this.columnrtn_qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn destroy_qtyColumn {
                get {
                    return this.columndestroy_qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn realstockColumn {
                get {
                    return this.columnrealstock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bkproColumn {
                get {
                    return this.columnbkpro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn department_nameColumn {
                get {
                    return this.columndepartment_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deptStockStatisticRow this[int index] {
                get {
                    return ((deptStockStatisticRow)(this.Rows[index]));
                }
            }
            
            public event deptStockStatisticRowChangeEventHandler deptStockStatisticRowChanging;
            
            public event deptStockStatisticRowChangeEventHandler deptStockStatisticRowChanged;
            
            public event deptStockStatisticRowChangeEventHandler deptStockStatisticRowDeleting;
            
            public event deptStockStatisticRowChangeEventHandler deptStockStatisticRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddeptStockStatisticRow(deptStockStatisticRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deptStockStatisticRow AdddeptStockStatisticRow(
                        string type_name, 
                        string product_id, 
                        string product_name, 
                        decimal error_qty, 
                        string color_name, 
                        string size_name, 
                        decimal prestk_qty, 
                        decimal instock_qty, 
                        decimal dmg_qty, 
                        decimal stkout_qty, 
                        decimal tmpout_qty, 
                        decimal rtn_qty, 
                        decimal destroy_qty, 
                        decimal realstock, 
                        decimal bkpro, 
                        string department_name) {
                deptStockStatisticRow rowdeptStockStatisticRow = ((deptStockStatisticRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        type_name,
                        product_id,
                        product_name,
                        error_qty,
                        color_name,
                        size_name,
                        prestk_qty,
                        instock_qty,
                        dmg_qty,
                        stkout_qty,
                        tmpout_qty,
                        rtn_qty,
                        destroy_qty,
                        realstock,
                        bkpro,
                        department_name};
                rowdeptStockStatisticRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdeptStockStatisticRow);
                return rowdeptStockStatisticRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                deptStockStatisticDataTable cln = ((deptStockStatisticDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new deptStockStatisticDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntype_name = base.Columns["type_name"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columnerror_qty = base.Columns["error_qty"];
                this.columncolor_name = base.Columns["color_name"];
                this.columnsize_name = base.Columns["size_name"];
                this.columnprestk_qty = base.Columns["prestk_qty"];
                this.columninstock_qty = base.Columns["instock_qty"];
                this.columndmg_qty = base.Columns["dmg_qty"];
                this.columnstkout_qty = base.Columns["stkout_qty"];
                this.columntmpout_qty = base.Columns["tmpout_qty"];
                this.columnrtn_qty = base.Columns["rtn_qty"];
                this.columndestroy_qty = base.Columns["destroy_qty"];
                this.columnrealstock = base.Columns["realstock"];
                this.columnbkpro = base.Columns["bkpro"];
                this.columndepartment_name = base.Columns["department_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntype_name = new global::System.Data.DataColumn("type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_name);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columnerror_qty = new global::System.Data.DataColumn("error_qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnerror_qty);
                this.columncolor_name = new global::System.Data.DataColumn("color_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor_name);
                this.columnsize_name = new global::System.Data.DataColumn("size_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsize_name);
                this.columnprestk_qty = new global::System.Data.DataColumn("prestk_qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprestk_qty);
                this.columninstock_qty = new global::System.Data.DataColumn("instock_qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninstock_qty);
                this.columndmg_qty = new global::System.Data.DataColumn("dmg_qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndmg_qty);
                this.columnstkout_qty = new global::System.Data.DataColumn("stkout_qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstkout_qty);
                this.columntmpout_qty = new global::System.Data.DataColumn("tmpout_qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntmpout_qty);
                this.columnrtn_qty = new global::System.Data.DataColumn("rtn_qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrtn_qty);
                this.columndestroy_qty = new global::System.Data.DataColumn("destroy_qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndestroy_qty);
                this.columnrealstock = new global::System.Data.DataColumn("realstock", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrealstock);
                this.columnbkpro = new global::System.Data.DataColumn("bkpro", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbkpro);
                this.columndepartment_name = new global::System.Data.DataColumn("department_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_name);
                this.columntype_name.MaxLength = 500;
                this.columnproduct_id.AllowDBNull = false;
                this.columnproduct_id.MaxLength = 20;
                this.columnproduct_name.MaxLength = 500;
                this.columncolor_name.MaxLength = 500;
                this.columnsize_name.MaxLength = 500;
                this.columndepartment_name.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deptStockStatisticRow NewdeptStockStatisticRow() {
                return ((deptStockStatisticRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new deptStockStatisticRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(deptStockStatisticRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.deptStockStatisticRowChanged != null)) {
                    this.deptStockStatisticRowChanged(this, new deptStockStatisticRowChangeEvent(((deptStockStatisticRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.deptStockStatisticRowChanging != null)) {
                    this.deptStockStatisticRowChanging(this, new deptStockStatisticRowChangeEvent(((deptStockStatisticRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.deptStockStatisticRowDeleted != null)) {
                    this.deptStockStatisticRowDeleted(this, new deptStockStatisticRowChangeEvent(((deptStockStatisticRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.deptStockStatisticRowDeleting != null)) {
                    this.deptStockStatisticRowDeleting(this, new deptStockStatisticRowChangeEvent(((deptStockStatisticRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedeptStockStatisticRow(deptStockStatisticRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "deptStockStatisticDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class returnPOrderDataTable : global::System.Data.TypedTableBase<returnPOrderRow> {
            
            private global::System.Data.DataColumn columntype_name;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columncolor_name;
            
            private global::System.Data.DataColumn columnsize_name;
            
            private global::System.Data.DataColumn columnquantity;
            
            private global::System.Data.DataColumn columnreturn_date;
            
            private global::System.Data.DataColumn columnprice;
            
            private global::System.Data.DataColumn columnDEPARTMENT_NAME;
            
            private global::System.Data.DataColumn columnADDRESS;
            
            private global::System.Data.DataColumn columnPRODUCT_ID;
            
            private global::System.Data.DataColumn columnPURCHASE_ORDER_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public returnPOrderDataTable() {
                this.TableName = "returnPOrder";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal returnPOrderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected returnPOrderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_nameColumn {
                get {
                    return this.columntype_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn color_nameColumn {
                get {
                    return this.columncolor_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn size_nameColumn {
                get {
                    return this.columnsize_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantityColumn {
                get {
                    return this.columnquantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn return_dateColumn {
                get {
                    return this.columnreturn_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priceColumn {
                get {
                    return this.columnprice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPARTMENT_NAMEColumn {
                get {
                    return this.columnDEPARTMENT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADDRESSColumn {
                get {
                    return this.columnADDRESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_IDColumn {
                get {
                    return this.columnPRODUCT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PURCHASE_ORDER_IDColumn {
                get {
                    return this.columnPURCHASE_ORDER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public returnPOrderRow this[int index] {
                get {
                    return ((returnPOrderRow)(this.Rows[index]));
                }
            }
            
            public event returnPOrderRowChangeEventHandler returnPOrderRowChanging;
            
            public event returnPOrderRowChangeEventHandler returnPOrderRowChanged;
            
            public event returnPOrderRowChangeEventHandler returnPOrderRowDeleting;
            
            public event returnPOrderRowChangeEventHandler returnPOrderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddreturnPOrderRow(returnPOrderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public returnPOrderRow AddreturnPOrderRow(string type_name, string product_name, string color_name, string size_name, decimal quantity, string return_date, int price, string DEPARTMENT_NAME, string ADDRESS, string PRODUCT_ID, string PURCHASE_ORDER_ID) {
                returnPOrderRow rowreturnPOrderRow = ((returnPOrderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        type_name,
                        product_name,
                        color_name,
                        size_name,
                        quantity,
                        return_date,
                        price,
                        DEPARTMENT_NAME,
                        ADDRESS,
                        PRODUCT_ID,
                        PURCHASE_ORDER_ID};
                rowreturnPOrderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowreturnPOrderRow);
                return rowreturnPOrderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public returnPOrderRow FindByPURCHASE_ORDER_ID(string PURCHASE_ORDER_ID) {
                return ((returnPOrderRow)(this.Rows.Find(new object[] {
                            PURCHASE_ORDER_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                returnPOrderDataTable cln = ((returnPOrderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new returnPOrderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntype_name = base.Columns["type_name"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columncolor_name = base.Columns["color_name"];
                this.columnsize_name = base.Columns["size_name"];
                this.columnquantity = base.Columns["quantity"];
                this.columnreturn_date = base.Columns["return_date"];
                this.columnprice = base.Columns["price"];
                this.columnDEPARTMENT_NAME = base.Columns["DEPARTMENT_NAME"];
                this.columnADDRESS = base.Columns["ADDRESS"];
                this.columnPRODUCT_ID = base.Columns["PRODUCT_ID"];
                this.columnPURCHASE_ORDER_ID = base.Columns["PURCHASE_ORDER_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntype_name = new global::System.Data.DataColumn("type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_name);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columncolor_name = new global::System.Data.DataColumn("color_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor_name);
                this.columnsize_name = new global::System.Data.DataColumn("size_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsize_name);
                this.columnquantity = new global::System.Data.DataColumn("quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity);
                this.columnreturn_date = new global::System.Data.DataColumn("return_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreturn_date);
                this.columnprice = new global::System.Data.DataColumn("price", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice);
                this.columnDEPARTMENT_NAME = new global::System.Data.DataColumn("DEPARTMENT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPARTMENT_NAME);
                this.columnADDRESS = new global::System.Data.DataColumn("ADDRESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS);
                this.columnPRODUCT_ID = new global::System.Data.DataColumn("PRODUCT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_ID);
                this.columnPURCHASE_ORDER_ID = new global::System.Data.DataColumn("PURCHASE_ORDER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPURCHASE_ORDER_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPURCHASE_ORDER_ID}, true));
                this.columntype_name.MaxLength = 500;
                this.columnproduct_name.MaxLength = 500;
                this.columncolor_name.MaxLength = 500;
                this.columnsize_name.MaxLength = 500;
                this.columnreturn_date.MaxLength = 10;
                this.columnDEPARTMENT_NAME.MaxLength = 500;
                this.columnADDRESS.MaxLength = 500;
                this.columnPRODUCT_ID.MaxLength = 20;
                this.columnPURCHASE_ORDER_ID.AllowDBNull = false;
                this.columnPURCHASE_ORDER_ID.Unique = true;
                this.columnPURCHASE_ORDER_ID.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public returnPOrderRow NewreturnPOrderRow() {
                return ((returnPOrderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new returnPOrderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(returnPOrderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.returnPOrderRowChanged != null)) {
                    this.returnPOrderRowChanged(this, new returnPOrderRowChangeEvent(((returnPOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.returnPOrderRowChanging != null)) {
                    this.returnPOrderRowChanging(this, new returnPOrderRowChangeEvent(((returnPOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.returnPOrderRowDeleted != null)) {
                    this.returnPOrderRowDeleted(this, new returnPOrderRowChangeEvent(((returnPOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.returnPOrderRowDeleting != null)) {
                    this.returnPOrderRowDeleting(this, new returnPOrderRowChangeEvent(((returnPOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovereturnPOrderRow(returnPOrderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "returnPOrderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class departmentStockInDataTable : global::System.Data.TypedTableBase<departmentStockInRow> {
            
            private global::System.Data.DataColumn columntype_name;
            
            private global::System.Data.DataColumn columndepartment_id;
            
            private global::System.Data.DataColumn columndepartment_name;
            
            private global::System.Data.DataColumn columnstock_in_id;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn _columnsum_dstkdin_quantity_;
            
            private global::System.Data.DataColumn columnprice;
            
            private global::System.Data.DataColumn columncolor_name;
            
            private global::System.Data.DataColumn columnsize_name;
            
            private global::System.Data.DataColumn columnaddress;
            
            private global::System.Data.DataColumn columnstock_in_date;
            
            private global::System.Data.DataColumn columnquantity;
            
            private global::System.Data.DataColumn _columnSUM_dstkdindet_quantity_;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public departmentStockInDataTable() {
                this.TableName = "departmentStockIn";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal departmentStockInDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected departmentStockInDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_nameColumn {
                get {
                    return this.columntype_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn department_idColumn {
                get {
                    return this.columndepartment_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn department_nameColumn {
                get {
                    return this.columndepartment_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stock_in_idColumn {
                get {
                    return this.columnstock_in_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _sum_dstkdin_quantity_Column {
                get {
                    return this._columnsum_dstkdin_quantity_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priceColumn {
                get {
                    return this.columnprice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn color_nameColumn {
                get {
                    return this.columncolor_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn size_nameColumn {
                get {
                    return this.columnsize_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stock_in_dateColumn {
                get {
                    return this.columnstock_in_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantityColumn {
                get {
                    return this.columnquantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _SUM_dstkdindet_quantity_Column {
                get {
                    return this._columnSUM_dstkdindet_quantity_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public departmentStockInRow this[int index] {
                get {
                    return ((departmentStockInRow)(this.Rows[index]));
                }
            }
            
            public event departmentStockInRowChangeEventHandler departmentStockInRowChanging;
            
            public event departmentStockInRowChangeEventHandler departmentStockInRowChanged;
            
            public event departmentStockInRowChangeEventHandler departmentStockInRowDeleting;
            
            public event departmentStockInRowChangeEventHandler departmentStockInRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddepartmentStockInRow(departmentStockInRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public departmentStockInRow AdddepartmentStockInRow(string type_name, uint department_id, string department_name, string stock_in_id, string product_id, string product_name, decimal _sum_dstkdin_quantity_, decimal price, string color_name, string size_name, string address, string stock_in_date, decimal quantity, decimal _SUM_dstkdindet_quantity_) {
                departmentStockInRow rowdepartmentStockInRow = ((departmentStockInRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        type_name,
                        department_id,
                        department_name,
                        stock_in_id,
                        product_id,
                        product_name,
                        _sum_dstkdin_quantity_,
                        price,
                        color_name,
                        size_name,
                        address,
                        stock_in_date,
                        quantity,
                        _SUM_dstkdindet_quantity_};
                rowdepartmentStockInRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdepartmentStockInRow);
                return rowdepartmentStockInRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public departmentStockInRow FindBydepartment_idstock_in_idproduct_id(uint department_id, string stock_in_id, string product_id) {
                return ((departmentStockInRow)(this.Rows.Find(new object[] {
                            department_id,
                            stock_in_id,
                            product_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                departmentStockInDataTable cln = ((departmentStockInDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new departmentStockInDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntype_name = base.Columns["type_name"];
                this.columndepartment_id = base.Columns["department_id"];
                this.columndepartment_name = base.Columns["department_name"];
                this.columnstock_in_id = base.Columns["stock_in_id"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnproduct_name = base.Columns["product_name"];
                this._columnsum_dstkdin_quantity_ = base.Columns["sum(dstkdin_quantity)"];
                this.columnprice = base.Columns["price"];
                this.columncolor_name = base.Columns["color_name"];
                this.columnsize_name = base.Columns["size_name"];
                this.columnaddress = base.Columns["address"];
                this.columnstock_in_date = base.Columns["stock_in_date"];
                this.columnquantity = base.Columns["quantity"];
                this._columnSUM_dstkdindet_quantity_ = base.Columns["SUM(dstkdindet_quantity)"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntype_name = new global::System.Data.DataColumn("type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_name);
                this.columndepartment_id = new global::System.Data.DataColumn("department_id", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_id);
                this.columndepartment_name = new global::System.Data.DataColumn("department_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_name);
                this.columnstock_in_id = new global::System.Data.DataColumn("stock_in_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstock_in_id);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this._columnsum_dstkdin_quantity_ = new global::System.Data.DataColumn("sum(dstkdin_quantity)", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._columnsum_dstkdin_quantity_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnsum_dstkdin_quantity_");
                this._columnsum_dstkdin_quantity_.ExtendedProperties.Add("Generator_UserColumnName", "sum(dstkdin_quantity)");
                base.Columns.Add(this._columnsum_dstkdin_quantity_);
                this.columnprice = new global::System.Data.DataColumn("price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice);
                this.columncolor_name = new global::System.Data.DataColumn("color_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor_name);
                this.columnsize_name = new global::System.Data.DataColumn("size_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsize_name);
                this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this.columnstock_in_date = new global::System.Data.DataColumn("stock_in_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstock_in_date);
                this.columnquantity = new global::System.Data.DataColumn("quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity);
                this._columnSUM_dstkdindet_quantity_ = new global::System.Data.DataColumn("SUM(dstkdindet_quantity)", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._columnSUM_dstkdindet_quantity_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSUM_dstkdindet_quantity_");
                this._columnSUM_dstkdindet_quantity_.ExtendedProperties.Add("Generator_UserColumnName", "SUM(dstkdindet_quantity)");
                base.Columns.Add(this._columnSUM_dstkdindet_quantity_);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columndepartment_id,
                                this.columnstock_in_id,
                                this.columnproduct_id}, true));
                this.columntype_name.MaxLength = 500;
                this.columndepartment_id.AllowDBNull = false;
                this.columndepartment_name.MaxLength = 500;
                this.columnstock_in_id.AllowDBNull = false;
                this.columnstock_in_id.MaxLength = 15;
                this.columnproduct_id.AllowDBNull = false;
                this.columnproduct_id.MaxLength = 20;
                this.columnproduct_name.MaxLength = 500;
                this._columnsum_dstkdin_quantity_.Caption = "sum(dstkdin.quantity)";
                this.columncolor_name.MaxLength = 500;
                this.columnsize_name.MaxLength = 500;
                this.columnaddress.MaxLength = 500;
                this.columnstock_in_date.MaxLength = 10;
                this._columnSUM_dstkdindet_quantity_.Caption = "SUM(dstkdindet.quantity)";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public departmentStockInRow NewdepartmentStockInRow() {
                return ((departmentStockInRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new departmentStockInRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(departmentStockInRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.departmentStockInRowChanged != null)) {
                    this.departmentStockInRowChanged(this, new departmentStockInRowChangeEvent(((departmentStockInRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.departmentStockInRowChanging != null)) {
                    this.departmentStockInRowChanging(this, new departmentStockInRowChangeEvent(((departmentStockInRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.departmentStockInRowDeleted != null)) {
                    this.departmentStockInRowDeleted(this, new departmentStockInRowChangeEvent(((departmentStockInRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.departmentStockInRowDeleting != null)) {
                    this.departmentStockInRowDeleting(this, new departmentStockInRowChangeEvent(((departmentStockInRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedepartmentStockInRow(departmentStockInRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "departmentStockInDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class departmentDataTable : global::System.Data.TypedTableBase<departmentRow> {
            
            private global::System.Data.DataColumn columnDEPARTMENT_ID;
            
            private global::System.Data.DataColumn columnDEPARTMENT_NAME;
            
            private global::System.Data.DataColumn columnADDRESS;
            
            private global::System.Data.DataColumn columnMANAGER_ID;
            
            private global::System.Data.DataColumn columnACTIVE;
            
            private global::System.Data.DataColumn columnCREATE_DATE;
            
            private global::System.Data.DataColumn columnCREATE_ID;
            
            private global::System.Data.DataColumn columnUPDATE_DATE;
            
            private global::System.Data.DataColumn columnUPDATE_ID;
            
            private global::System.Data.DataColumn columnEXCLUSIVE_KEY;
            
            private global::System.Data.DataColumn columnDEL_FLG;
            
            private global::System.Data.DataColumn columnSTART_DATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public departmentDataTable() {
                this.TableName = "department";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal departmentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected departmentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPARTMENT_IDColumn {
                get {
                    return this.columnDEPARTMENT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPARTMENT_NAMEColumn {
                get {
                    return this.columnDEPARTMENT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADDRESSColumn {
                get {
                    return this.columnADDRESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MANAGER_IDColumn {
                get {
                    return this.columnMANAGER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACTIVEColumn {
                get {
                    return this.columnACTIVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DATEColumn {
                get {
                    return this.columnCREATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_IDColumn {
                get {
                    return this.columnCREATE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATE_DATEColumn {
                get {
                    return this.columnUPDATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATE_IDColumn {
                get {
                    return this.columnUPDATE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EXCLUSIVE_KEYColumn {
                get {
                    return this.columnEXCLUSIVE_KEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEL_FLGColumn {
                get {
                    return this.columnDEL_FLG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn START_DATEColumn {
                get {
                    return this.columnSTART_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public departmentRow this[int index] {
                get {
                    return ((departmentRow)(this.Rows[index]));
                }
            }
            
            public event departmentRowChangeEventHandler departmentRowChanging;
            
            public event departmentRowChangeEventHandler departmentRowChanged;
            
            public event departmentRowChangeEventHandler departmentRowDeleting;
            
            public event departmentRowChangeEventHandler departmentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddepartmentRow(departmentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public departmentRow AdddepartmentRow(uint DEPARTMENT_ID, string DEPARTMENT_NAME, string ADDRESS, uint MANAGER_ID, uint ACTIVE, System.DateTime CREATE_DATE, string CREATE_ID, System.DateTime UPDATE_DATE, string UPDATE_ID, uint EXCLUSIVE_KEY, uint DEL_FLG, System.DateTime START_DATE) {
                departmentRow rowdepartmentRow = ((departmentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DEPARTMENT_ID,
                        DEPARTMENT_NAME,
                        ADDRESS,
                        MANAGER_ID,
                        ACTIVE,
                        CREATE_DATE,
                        CREATE_ID,
                        UPDATE_DATE,
                        UPDATE_ID,
                        EXCLUSIVE_KEY,
                        DEL_FLG,
                        START_DATE};
                rowdepartmentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdepartmentRow);
                return rowdepartmentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public departmentRow FindByDEPARTMENT_ID(uint DEPARTMENT_ID) {
                return ((departmentRow)(this.Rows.Find(new object[] {
                            DEPARTMENT_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                departmentDataTable cln = ((departmentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new departmentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDEPARTMENT_ID = base.Columns["DEPARTMENT_ID"];
                this.columnDEPARTMENT_NAME = base.Columns["DEPARTMENT_NAME"];
                this.columnADDRESS = base.Columns["ADDRESS"];
                this.columnMANAGER_ID = base.Columns["MANAGER_ID"];
                this.columnACTIVE = base.Columns["ACTIVE"];
                this.columnCREATE_DATE = base.Columns["CREATE_DATE"];
                this.columnCREATE_ID = base.Columns["CREATE_ID"];
                this.columnUPDATE_DATE = base.Columns["UPDATE_DATE"];
                this.columnUPDATE_ID = base.Columns["UPDATE_ID"];
                this.columnEXCLUSIVE_KEY = base.Columns["EXCLUSIVE_KEY"];
                this.columnDEL_FLG = base.Columns["DEL_FLG"];
                this.columnSTART_DATE = base.Columns["START_DATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDEPARTMENT_ID = new global::System.Data.DataColumn("DEPARTMENT_ID", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPARTMENT_ID);
                this.columnDEPARTMENT_NAME = new global::System.Data.DataColumn("DEPARTMENT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPARTMENT_NAME);
                this.columnADDRESS = new global::System.Data.DataColumn("ADDRESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS);
                this.columnMANAGER_ID = new global::System.Data.DataColumn("MANAGER_ID", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANAGER_ID);
                this.columnACTIVE = new global::System.Data.DataColumn("ACTIVE", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACTIVE);
                this.columnCREATE_DATE = new global::System.Data.DataColumn("CREATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DATE);
                this.columnCREATE_ID = new global::System.Data.DataColumn("CREATE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_ID);
                this.columnUPDATE_DATE = new global::System.Data.DataColumn("UPDATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATE_DATE);
                this.columnUPDATE_ID = new global::System.Data.DataColumn("UPDATE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATE_ID);
                this.columnEXCLUSIVE_KEY = new global::System.Data.DataColumn("EXCLUSIVE_KEY", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXCLUSIVE_KEY);
                this.columnDEL_FLG = new global::System.Data.DataColumn("DEL_FLG", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEL_FLG);
                this.columnSTART_DATE = new global::System.Data.DataColumn("START_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTART_DATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDEPARTMENT_ID}, true));
                this.columnDEPARTMENT_ID.AllowDBNull = false;
                this.columnDEPARTMENT_ID.Unique = true;
                this.columnDEPARTMENT_NAME.MaxLength = 500;
                this.columnADDRESS.MaxLength = 500;
                this.columnCREATE_ID.MaxLength = 50;
                this.columnUPDATE_ID.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public departmentRow NewdepartmentRow() {
                return ((departmentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new departmentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(departmentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.departmentRowChanged != null)) {
                    this.departmentRowChanged(this, new departmentRowChangeEvent(((departmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.departmentRowChanging != null)) {
                    this.departmentRowChanging(this, new departmentRowChangeEvent(((departmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.departmentRowDeleted != null)) {
                    this.departmentRowDeleted(this, new departmentRowChangeEvent(((departmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.departmentRowDeleting != null)) {
                    this.departmentRowDeleting(this, new departmentRowChangeEvent(((departmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedepartmentRow(departmentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "departmentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class allStockDataTable : global::System.Data.TypedTableBase<allStockRow> {
            
            private global::System.Data.DataColumn columntype_name;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columncolor_name;
            
            private global::System.Data.DataColumn columnsize_name;
            
            private global::System.Data.DataColumn columnpreqty;
            
            private global::System.Data.DataColumn columninqty;
            
            private global::System.Data.DataColumn columndpreqty;
            
            private global::System.Data.DataColumn columnmoutqty;
            
            private global::System.Data.DataColumn columnmaindmg;
            
            private global::System.Data.DataColumn columndpoutqty;
            
            private global::System.Data.DataColumn columndpdmg;
            
            private global::System.Data.DataColumn columnmainrtn;
            
            private global::System.Data.DataColumn columnsaleqty;
            
            private global::System.Data.DataColumn columnrtnpr;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public allStockDataTable() {
                this.TableName = "allStock";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal allStockDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected allStockDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_nameColumn {
                get {
                    return this.columntype_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn color_nameColumn {
                get {
                    return this.columncolor_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn size_nameColumn {
                get {
                    return this.columnsize_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn preqtyColumn {
                get {
                    return this.columnpreqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn inqtyColumn {
                get {
                    return this.columninqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dpreqtyColumn {
                get {
                    return this.columndpreqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn moutqtyColumn {
                get {
                    return this.columnmoutqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn maindmgColumn {
                get {
                    return this.columnmaindmg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dpoutqtyColumn {
                get {
                    return this.columndpoutqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dpdmgColumn {
                get {
                    return this.columndpdmg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mainrtnColumn {
                get {
                    return this.columnmainrtn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn saleqtyColumn {
                get {
                    return this.columnsaleqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rtnprColumn {
                get {
                    return this.columnrtnpr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public allStockRow this[int index] {
                get {
                    return ((allStockRow)(this.Rows[index]));
                }
            }
            
            public event allStockRowChangeEventHandler allStockRowChanging;
            
            public event allStockRowChangeEventHandler allStockRowChanged;
            
            public event allStockRowChangeEventHandler allStockRowDeleting;
            
            public event allStockRowChangeEventHandler allStockRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddallStockRow(allStockRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public allStockRow AddallStockRow(string type_name, string product_id, string product_name, string color_name, string size_name, decimal preqty, decimal inqty, decimal dpreqty, decimal moutqty, decimal maindmg, decimal dpoutqty, decimal dpdmg, decimal mainrtn, decimal saleqty, decimal rtnpr) {
                allStockRow rowallStockRow = ((allStockRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        type_name,
                        product_id,
                        product_name,
                        color_name,
                        size_name,
                        preqty,
                        inqty,
                        dpreqty,
                        moutqty,
                        maindmg,
                        dpoutqty,
                        dpdmg,
                        mainrtn,
                        saleqty,
                        rtnpr};
                rowallStockRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowallStockRow);
                return rowallStockRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                allStockDataTable cln = ((allStockDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new allStockDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntype_name = base.Columns["type_name"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columncolor_name = base.Columns["color_name"];
                this.columnsize_name = base.Columns["size_name"];
                this.columnpreqty = base.Columns["preqty"];
                this.columninqty = base.Columns["inqty"];
                this.columndpreqty = base.Columns["dpreqty"];
                this.columnmoutqty = base.Columns["moutqty"];
                this.columnmaindmg = base.Columns["maindmg"];
                this.columndpoutqty = base.Columns["dpoutqty"];
                this.columndpdmg = base.Columns["dpdmg"];
                this.columnmainrtn = base.Columns["mainrtn"];
                this.columnsaleqty = base.Columns["saleqty"];
                this.columnrtnpr = base.Columns["rtnpr"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntype_name = new global::System.Data.DataColumn("type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_name);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columncolor_name = new global::System.Data.DataColumn("color_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor_name);
                this.columnsize_name = new global::System.Data.DataColumn("size_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsize_name);
                this.columnpreqty = new global::System.Data.DataColumn("preqty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpreqty);
                this.columninqty = new global::System.Data.DataColumn("inqty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninqty);
                this.columndpreqty = new global::System.Data.DataColumn("dpreqty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndpreqty);
                this.columnmoutqty = new global::System.Data.DataColumn("moutqty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmoutqty);
                this.columnmaindmg = new global::System.Data.DataColumn("maindmg", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaindmg);
                this.columndpoutqty = new global::System.Data.DataColumn("dpoutqty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndpoutqty);
                this.columndpdmg = new global::System.Data.DataColumn("dpdmg", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndpdmg);
                this.columnmainrtn = new global::System.Data.DataColumn("mainrtn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmainrtn);
                this.columnsaleqty = new global::System.Data.DataColumn("saleqty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsaleqty);
                this.columnrtnpr = new global::System.Data.DataColumn("rtnpr", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrtnpr);
                this.columntype_name.MaxLength = 500;
                this.columnproduct_id.AllowDBNull = false;
                this.columnproduct_id.MaxLength = 20;
                this.columnproduct_name.MaxLength = 500;
                this.columncolor_name.MaxLength = 500;
                this.columnsize_name.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public allStockRow NewallStockRow() {
                return ((allStockRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new allStockRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(allStockRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.allStockRowChanged != null)) {
                    this.allStockRowChanged(this, new allStockRowChangeEvent(((allStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.allStockRowChanging != null)) {
                    this.allStockRowChanging(this, new allStockRowChangeEvent(((allStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.allStockRowDeleted != null)) {
                    this.allStockRowDeleted(this, new allStockRowChangeEvent(((allStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.allStockRowDeleting != null)) {
                    this.allStockRowDeleting(this, new allStockRowChangeEvent(((allStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveallStockRow(allStockRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "allStockDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class returnMainDataTable : global::System.Data.TypedTableBase<returnMainRow> {
            
            private global::System.Data.DataColumn columntype_name;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columncolor_name;
            
            private global::System.Data.DataColumn columnsize_name;
            
            private global::System.Data.DataColumn columnSTOCK_OUT_DATE;
            
            private global::System.Data.DataColumn columnDEPARTMENT_NAME;
            
            private global::System.Data.DataColumn columnADDRESS;
            
            private global::System.Data.DataColumn columnquantity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public returnMainDataTable() {
                this.TableName = "returnMain";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal returnMainDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected returnMainDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_nameColumn {
                get {
                    return this.columntype_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn color_nameColumn {
                get {
                    return this.columncolor_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn size_nameColumn {
                get {
                    return this.columnsize_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STOCK_OUT_DATEColumn {
                get {
                    return this.columnSTOCK_OUT_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPARTMENT_NAMEColumn {
                get {
                    return this.columnDEPARTMENT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADDRESSColumn {
                get {
                    return this.columnADDRESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantityColumn {
                get {
                    return this.columnquantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public returnMainRow this[int index] {
                get {
                    return ((returnMainRow)(this.Rows[index]));
                }
            }
            
            public event returnMainRowChangeEventHandler returnMainRowChanging;
            
            public event returnMainRowChangeEventHandler returnMainRowChanged;
            
            public event returnMainRowChangeEventHandler returnMainRowDeleting;
            
            public event returnMainRowChangeEventHandler returnMainRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddreturnMainRow(returnMainRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public returnMainRow AddreturnMainRow(string type_name, string product_id, string product_name, string color_name, string size_name, System.DateTime STOCK_OUT_DATE, string DEPARTMENT_NAME, string ADDRESS, decimal quantity) {
                returnMainRow rowreturnMainRow = ((returnMainRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        type_name,
                        product_id,
                        product_name,
                        color_name,
                        size_name,
                        STOCK_OUT_DATE,
                        DEPARTMENT_NAME,
                        ADDRESS,
                        quantity};
                rowreturnMainRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowreturnMainRow);
                return rowreturnMainRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                returnMainDataTable cln = ((returnMainDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new returnMainDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntype_name = base.Columns["type_name"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columncolor_name = base.Columns["color_name"];
                this.columnsize_name = base.Columns["size_name"];
                this.columnSTOCK_OUT_DATE = base.Columns["STOCK_OUT_DATE"];
                this.columnDEPARTMENT_NAME = base.Columns["DEPARTMENT_NAME"];
                this.columnADDRESS = base.Columns["ADDRESS"];
                this.columnquantity = base.Columns["quantity"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntype_name = new global::System.Data.DataColumn("type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_name);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columncolor_name = new global::System.Data.DataColumn("color_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor_name);
                this.columnsize_name = new global::System.Data.DataColumn("size_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsize_name);
                this.columnSTOCK_OUT_DATE = new global::System.Data.DataColumn("STOCK_OUT_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_OUT_DATE);
                this.columnDEPARTMENT_NAME = new global::System.Data.DataColumn("DEPARTMENT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPARTMENT_NAME);
                this.columnADDRESS = new global::System.Data.DataColumn("ADDRESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS);
                this.columnquantity = new global::System.Data.DataColumn("quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity);
                this.columntype_name.MaxLength = 500;
                this.columnproduct_id.AllowDBNull = false;
                this.columnproduct_id.MaxLength = 20;
                this.columnproduct_name.MaxLength = 500;
                this.columncolor_name.MaxLength = 500;
                this.columnsize_name.MaxLength = 500;
                this.columnDEPARTMENT_NAME.MaxLength = 500;
                this.columnADDRESS.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public returnMainRow NewreturnMainRow() {
                return ((returnMainRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new returnMainRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(returnMainRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.returnMainRowChanged != null)) {
                    this.returnMainRowChanged(this, new returnMainRowChangeEvent(((returnMainRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.returnMainRowChanging != null)) {
                    this.returnMainRowChanging(this, new returnMainRowChangeEvent(((returnMainRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.returnMainRowDeleted != null)) {
                    this.returnMainRowDeleted(this, new returnMainRowChangeEvent(((returnMainRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.returnMainRowDeleting != null)) {
                    this.returnMainRowDeleting(this, new returnMainRowChangeEvent(((returnMainRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovereturnMainRow(returnMainRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "returnMainDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class deptTempStockoutDataTable : global::System.Data.TypedTableBase<deptTempStockoutRow> {
            
            private global::System.Data.DataColumn columndepartment_name;
            
            private global::System.Data.DataColumn columntype_name;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columncolor_name;
            
            private global::System.Data.DataColumn columnsize_name;
            
            private global::System.Data.DataColumn _columnsum_quantity_;
            
            private global::System.Data.DataColumn columnaddress;
            
            private global::System.Data.DataColumn columnstock_out_date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deptTempStockoutDataTable() {
                this.TableName = "deptTempStockout";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal deptTempStockoutDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected deptTempStockoutDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn department_nameColumn {
                get {
                    return this.columndepartment_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_nameColumn {
                get {
                    return this.columntype_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn color_nameColumn {
                get {
                    return this.columncolor_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn size_nameColumn {
                get {
                    return this.columnsize_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _sum_quantity_Column {
                get {
                    return this._columnsum_quantity_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stock_out_dateColumn {
                get {
                    return this.columnstock_out_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deptTempStockoutRow this[int index] {
                get {
                    return ((deptTempStockoutRow)(this.Rows[index]));
                }
            }
            
            public event deptTempStockoutRowChangeEventHandler deptTempStockoutRowChanging;
            
            public event deptTempStockoutRowChangeEventHandler deptTempStockoutRowChanged;
            
            public event deptTempStockoutRowChangeEventHandler deptTempStockoutRowDeleting;
            
            public event deptTempStockoutRowChangeEventHandler deptTempStockoutRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddeptTempStockoutRow(deptTempStockoutRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deptTempStockoutRow AdddeptTempStockoutRow(string department_name, string type_name, string product_id, string product_name, string color_name, string size_name, decimal _sum_quantity_, string address, System.DateTime stock_out_date) {
                deptTempStockoutRow rowdeptTempStockoutRow = ((deptTempStockoutRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        department_name,
                        type_name,
                        product_id,
                        product_name,
                        color_name,
                        size_name,
                        _sum_quantity_,
                        address,
                        stock_out_date};
                rowdeptTempStockoutRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdeptTempStockoutRow);
                return rowdeptTempStockoutRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                deptTempStockoutDataTable cln = ((deptTempStockoutDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new deptTempStockoutDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columndepartment_name = base.Columns["department_name"];
                this.columntype_name = base.Columns["type_name"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columncolor_name = base.Columns["color_name"];
                this.columnsize_name = base.Columns["size_name"];
                this._columnsum_quantity_ = base.Columns["sum(quantity)"];
                this.columnaddress = base.Columns["address"];
                this.columnstock_out_date = base.Columns["stock_out_date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columndepartment_name = new global::System.Data.DataColumn("department_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_name);
                this.columntype_name = new global::System.Data.DataColumn("type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_name);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columncolor_name = new global::System.Data.DataColumn("color_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor_name);
                this.columnsize_name = new global::System.Data.DataColumn("size_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsize_name);
                this._columnsum_quantity_ = new global::System.Data.DataColumn("sum(quantity)", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._columnsum_quantity_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnsum_quantity_");
                this._columnsum_quantity_.ExtendedProperties.Add("Generator_UserColumnName", "sum(quantity)");
                base.Columns.Add(this._columnsum_quantity_);
                this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this.columnstock_out_date = new global::System.Data.DataColumn("stock_out_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstock_out_date);
                this.columndepartment_name.MaxLength = 500;
                this.columntype_name.MaxLength = 500;
                this.columnproduct_id.AllowDBNull = false;
                this.columnproduct_id.MaxLength = 20;
                this.columnproduct_name.MaxLength = 500;
                this.columncolor_name.MaxLength = 500;
                this.columnsize_name.MaxLength = 500;
                this.columnaddress.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deptTempStockoutRow NewdeptTempStockoutRow() {
                return ((deptTempStockoutRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new deptTempStockoutRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(deptTempStockoutRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.deptTempStockoutRowChanged != null)) {
                    this.deptTempStockoutRowChanged(this, new deptTempStockoutRowChangeEvent(((deptTempStockoutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.deptTempStockoutRowChanging != null)) {
                    this.deptTempStockoutRowChanging(this, new deptTempStockoutRowChangeEvent(((deptTempStockoutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.deptTempStockoutRowDeleted != null)) {
                    this.deptTempStockoutRowDeleted(this, new deptTempStockoutRowChangeEvent(((deptTempStockoutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.deptTempStockoutRowDeleting != null)) {
                    this.deptTempStockoutRowDeleting(this, new deptTempStockoutRowChangeEvent(((deptTempStockoutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedeptTempStockoutRow(deptTempStockoutRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "deptTempStockoutDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class deptReStockDataTable : global::System.Data.TypedTableBase<deptReStockRow> {
            
            private global::System.Data.DataColumn columndepartment_name;
            
            private global::System.Data.DataColumn columntype_name;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columncolor_name;
            
            private global::System.Data.DataColumn columnsize_name;
            
            private global::System.Data.DataColumn _columnsum_quantity_;
            
            private global::System.Data.DataColumn _columnsum_dstk_stock_in_cost_;
            
            private global::System.Data.DataColumn columnaddress;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deptReStockDataTable() {
                this.TableName = "deptReStock";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal deptReStockDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected deptReStockDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn department_nameColumn {
                get {
                    return this.columndepartment_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_nameColumn {
                get {
                    return this.columntype_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn color_nameColumn {
                get {
                    return this.columncolor_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn size_nameColumn {
                get {
                    return this.columnsize_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _sum_quantity_Column {
                get {
                    return this._columnsum_quantity_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _sum_dstk_stock_in_cost_Column {
                get {
                    return this._columnsum_dstk_stock_in_cost_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deptReStockRow this[int index] {
                get {
                    return ((deptReStockRow)(this.Rows[index]));
                }
            }
            
            public event deptReStockRowChangeEventHandler deptReStockRowChanging;
            
            public event deptReStockRowChangeEventHandler deptReStockRowChanged;
            
            public event deptReStockRowChangeEventHandler deptReStockRowDeleting;
            
            public event deptReStockRowChangeEventHandler deptReStockRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddeptReStockRow(deptReStockRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deptReStockRow AdddeptReStockRow(string department_name, string type_name, string product_id, string product_name, string color_name, string size_name, decimal _sum_quantity_, decimal _sum_dstk_stock_in_cost_, string address) {
                deptReStockRow rowdeptReStockRow = ((deptReStockRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        department_name,
                        type_name,
                        product_id,
                        product_name,
                        color_name,
                        size_name,
                        _sum_quantity_,
                        _sum_dstk_stock_in_cost_,
                        address};
                rowdeptReStockRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdeptReStockRow);
                return rowdeptReStockRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                deptReStockDataTable cln = ((deptReStockDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new deptReStockDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columndepartment_name = base.Columns["department_name"];
                this.columntype_name = base.Columns["type_name"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columncolor_name = base.Columns["color_name"];
                this.columnsize_name = base.Columns["size_name"];
                this._columnsum_quantity_ = base.Columns["sum(quantity)"];
                this._columnsum_dstk_stock_in_cost_ = base.Columns["sum(dstk_stock_in_cost)"];
                this.columnaddress = base.Columns["address"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columndepartment_name = new global::System.Data.DataColumn("department_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_name);
                this.columntype_name = new global::System.Data.DataColumn("type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_name);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columncolor_name = new global::System.Data.DataColumn("color_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor_name);
                this.columnsize_name = new global::System.Data.DataColumn("size_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsize_name);
                this._columnsum_quantity_ = new global::System.Data.DataColumn("sum(quantity)", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._columnsum_quantity_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnsum_quantity_");
                this._columnsum_quantity_.ExtendedProperties.Add("Generator_UserColumnName", "sum(quantity)");
                base.Columns.Add(this._columnsum_quantity_);
                this._columnsum_dstk_stock_in_cost_ = new global::System.Data.DataColumn("sum(dstk_stock_in_cost)", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._columnsum_dstk_stock_in_cost_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnsum_dstk_stock_in_cost_");
                this._columnsum_dstk_stock_in_cost_.ExtendedProperties.Add("Generator_UserColumnName", "sum(dstk_stock_in_cost)");
                base.Columns.Add(this._columnsum_dstk_stock_in_cost_);
                this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this.columndepartment_name.MaxLength = 500;
                this.columntype_name.MaxLength = 500;
                this.columnproduct_id.AllowDBNull = false;
                this.columnproduct_id.MaxLength = 20;
                this.columnproduct_name.MaxLength = 500;
                this.columncolor_name.MaxLength = 500;
                this.columnsize_name.MaxLength = 500;
                this._columnsum_dstk_stock_in_cost_.Caption = "sum(dstk.stock_in_cost)";
                this.columnaddress.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deptReStockRow NewdeptReStockRow() {
                return ((deptReStockRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new deptReStockRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(deptReStockRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.deptReStockRowChanged != null)) {
                    this.deptReStockRowChanged(this, new deptReStockRowChangeEvent(((deptReStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.deptReStockRowChanging != null)) {
                    this.deptReStockRowChanging(this, new deptReStockRowChangeEvent(((deptReStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.deptReStockRowDeleted != null)) {
                    this.deptReStockRowDeleted(this, new deptReStockRowChangeEvent(((deptReStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.deptReStockRowDeleting != null)) {
                    this.deptReStockRowDeleting(this, new deptReStockRowChangeEvent(((deptReStockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedeptReStockRow(deptReStockRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "deptReStockDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class mainStockOutDataTable : global::System.Data.TypedTableBase<mainStockOutRow> {
            
            private global::System.Data.DataColumn columnstock_out_date;
            
            private global::System.Data.DataColumn columntype_name;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columncolor_name;
            
            private global::System.Data.DataColumn columnsize_name;
            
            private global::System.Data.DataColumn _columnsum_quantity_;
            
            private global::System.Data.DataColumn columndepartment_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mainStockOutDataTable() {
                this.TableName = "mainStockOut";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal mainStockOutDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected mainStockOutDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stock_out_dateColumn {
                get {
                    return this.columnstock_out_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_nameColumn {
                get {
                    return this.columntype_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn color_nameColumn {
                get {
                    return this.columncolor_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn size_nameColumn {
                get {
                    return this.columnsize_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _sum_quantity_Column {
                get {
                    return this._columnsum_quantity_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn department_nameColumn {
                get {
                    return this.columndepartment_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mainStockOutRow this[int index] {
                get {
                    return ((mainStockOutRow)(this.Rows[index]));
                }
            }
            
            public event mainStockOutRowChangeEventHandler mainStockOutRowChanging;
            
            public event mainStockOutRowChangeEventHandler mainStockOutRowChanged;
            
            public event mainStockOutRowChangeEventHandler mainStockOutRowDeleting;
            
            public event mainStockOutRowChangeEventHandler mainStockOutRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddmainStockOutRow(mainStockOutRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mainStockOutRow AddmainStockOutRow(System.DateTime stock_out_date, string type_name, string product_id, string product_name, string color_name, string size_name, decimal _sum_quantity_, string department_name) {
                mainStockOutRow rowmainStockOutRow = ((mainStockOutRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        stock_out_date,
                        type_name,
                        product_id,
                        product_name,
                        color_name,
                        size_name,
                        _sum_quantity_,
                        department_name};
                rowmainStockOutRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmainStockOutRow);
                return rowmainStockOutRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                mainStockOutDataTable cln = ((mainStockOutDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new mainStockOutDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstock_out_date = base.Columns["stock_out_date"];
                this.columntype_name = base.Columns["type_name"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columncolor_name = base.Columns["color_name"];
                this.columnsize_name = base.Columns["size_name"];
                this._columnsum_quantity_ = base.Columns["sum(quantity)"];
                this.columndepartment_name = base.Columns["department_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstock_out_date = new global::System.Data.DataColumn("stock_out_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstock_out_date);
                this.columntype_name = new global::System.Data.DataColumn("type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_name);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columncolor_name = new global::System.Data.DataColumn("color_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor_name);
                this.columnsize_name = new global::System.Data.DataColumn("size_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsize_name);
                this._columnsum_quantity_ = new global::System.Data.DataColumn("sum(quantity)", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._columnsum_quantity_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnsum_quantity_");
                this._columnsum_quantity_.ExtendedProperties.Add("Generator_UserColumnName", "sum(quantity)");
                base.Columns.Add(this._columnsum_quantity_);
                this.columndepartment_name = new global::System.Data.DataColumn("department_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_name);
                this.columntype_name.MaxLength = 500;
                this.columnproduct_id.AllowDBNull = false;
                this.columnproduct_id.MaxLength = 20;
                this.columnproduct_name.MaxLength = 500;
                this.columncolor_name.MaxLength = 500;
                this.columnsize_name.MaxLength = 500;
                this.columndepartment_name.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mainStockOutRow NewmainStockOutRow() {
                return ((mainStockOutRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new mainStockOutRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(mainStockOutRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.mainStockOutRowChanged != null)) {
                    this.mainStockOutRowChanged(this, new mainStockOutRowChangeEvent(((mainStockOutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.mainStockOutRowChanging != null)) {
                    this.mainStockOutRowChanging(this, new mainStockOutRowChangeEvent(((mainStockOutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.mainStockOutRowDeleted != null)) {
                    this.mainStockOutRowDeleted(this, new mainStockOutRowChangeEvent(((mainStockOutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.mainStockOutRowDeleting != null)) {
                    this.mainStockOutRowDeleting(this, new mainStockOutRowChangeEvent(((mainStockOutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovemainStockOutRow(mainStockOutRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "mainStockOutDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class stockOutDataTable : global::System.Data.TypedTableBase<stockOutRow> {
            
            private global::System.Data.DataColumn columntype_name;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columncolor_name;
            
            private global::System.Data.DataColumn columnsize_name;
            
            private global::System.Data.DataColumn columndepartment_id;
            
            private global::System.Data.DataColumn columndepartment_name;
            
            private global::System.Data.DataColumn _columnsum_quantity_;
            
            private global::System.Data.DataColumn columnprice;
            
            private global::System.Data.DataColumn columnstock_out_date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockOutDataTable() {
                this.TableName = "stockOut";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal stockOutDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected stockOutDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_nameColumn {
                get {
                    return this.columntype_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn color_nameColumn {
                get {
                    return this.columncolor_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn size_nameColumn {
                get {
                    return this.columnsize_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn department_idColumn {
                get {
                    return this.columndepartment_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn department_nameColumn {
                get {
                    return this.columndepartment_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _sum_quantity_Column {
                get {
                    return this._columnsum_quantity_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priceColumn {
                get {
                    return this.columnprice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stock_out_dateColumn {
                get {
                    return this.columnstock_out_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockOutRow this[int index] {
                get {
                    return ((stockOutRow)(this.Rows[index]));
                }
            }
            
            public event stockOutRowChangeEventHandler stockOutRowChanging;
            
            public event stockOutRowChangeEventHandler stockOutRowChanged;
            
            public event stockOutRowChangeEventHandler stockOutRowDeleting;
            
            public event stockOutRowChangeEventHandler stockOutRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddstockOutRow(stockOutRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockOutRow AddstockOutRow(string type_name, string product_id, string product_name, string color_name, string size_name, uint department_id, string department_name, decimal _sum_quantity_, int price, string stock_out_date) {
                stockOutRow rowstockOutRow = ((stockOutRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        type_name,
                        product_id,
                        product_name,
                        color_name,
                        size_name,
                        department_id,
                        department_name,
                        _sum_quantity_,
                        price,
                        stock_out_date};
                rowstockOutRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowstockOutRow);
                return rowstockOutRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockOutRow FindBydepartment_id(uint department_id) {
                return ((stockOutRow)(this.Rows.Find(new object[] {
                            department_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                stockOutDataTable cln = ((stockOutDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new stockOutDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntype_name = base.Columns["type_name"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columncolor_name = base.Columns["color_name"];
                this.columnsize_name = base.Columns["size_name"];
                this.columndepartment_id = base.Columns["department_id"];
                this.columndepartment_name = base.Columns["department_name"];
                this._columnsum_quantity_ = base.Columns["sum(quantity)"];
                this.columnprice = base.Columns["price"];
                this.columnstock_out_date = base.Columns["stock_out_date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntype_name = new global::System.Data.DataColumn("type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_name);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columncolor_name = new global::System.Data.DataColumn("color_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor_name);
                this.columnsize_name = new global::System.Data.DataColumn("size_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsize_name);
                this.columndepartment_id = new global::System.Data.DataColumn("department_id", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_id);
                this.columndepartment_name = new global::System.Data.DataColumn("department_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_name);
                this._columnsum_quantity_ = new global::System.Data.DataColumn("sum(quantity)", typeof(decimal), null, global::System.Data.MappingType.Element);
                this._columnsum_quantity_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnsum_quantity_");
                this._columnsum_quantity_.ExtendedProperties.Add("Generator_UserColumnName", "sum(quantity)");
                base.Columns.Add(this._columnsum_quantity_);
                this.columnprice = new global::System.Data.DataColumn("price", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice);
                this.columnstock_out_date = new global::System.Data.DataColumn("stock_out_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstock_out_date);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columndepartment_id}, true));
                this.columntype_name.MaxLength = 500;
                this.columnproduct_id.AllowDBNull = false;
                this.columnproduct_id.MaxLength = 20;
                this.columnproduct_name.MaxLength = 500;
                this.columncolor_name.MaxLength = 500;
                this.columnsize_name.MaxLength = 500;
                this.columndepartment_id.AllowDBNull = false;
                this.columndepartment_id.Unique = true;
                this.columndepartment_name.MaxLength = 500;
                this.columnprice.AllowDBNull = false;
                this.columnstock_out_date.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockOutRow NewstockOutRow() {
                return ((stockOutRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new stockOutRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(stockOutRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.stockOutRowChanged != null)) {
                    this.stockOutRowChanged(this, new stockOutRowChangeEvent(((stockOutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.stockOutRowChanging != null)) {
                    this.stockOutRowChanging(this, new stockOutRowChangeEvent(((stockOutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.stockOutRowDeleted != null)) {
                    this.stockOutRowDeleted(this, new stockOutRowChangeEvent(((stockOutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.stockOutRowDeleting != null)) {
                    this.stockOutRowDeleting(this, new stockOutRowChangeEvent(((stockOutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovestockOutRow(stockOutRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "stockOutDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class employeeDataTable : global::System.Data.TypedTableBase<employeeRow> {
            
            private global::System.Data.DataColumn columnEMPLOYEE_ID;
            
            private global::System.Data.DataColumn columnEMPLOYEE_NAME;
            
            private global::System.Data.DataColumn columnADDRESS;
            
            private global::System.Data.DataColumn columnstartdate;
            
            private global::System.Data.DataColumn columnBARCODE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeeDataTable() {
                this.TableName = "employee";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal employeeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected employeeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMPLOYEE_IDColumn {
                get {
                    return this.columnEMPLOYEE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMPLOYEE_NAMEColumn {
                get {
                    return this.columnEMPLOYEE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADDRESSColumn {
                get {
                    return this.columnADDRESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn startdateColumn {
                get {
                    return this.columnstartdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BARCODEColumn {
                get {
                    return this.columnBARCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeeRow this[int index] {
                get {
                    return ((employeeRow)(this.Rows[index]));
                }
            }
            
            public event employeeRowChangeEventHandler employeeRowChanging;
            
            public event employeeRowChangeEventHandler employeeRowChanged;
            
            public event employeeRowChangeEventHandler employeeRowDeleting;
            
            public event employeeRowChangeEventHandler employeeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddemployeeRow(employeeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeeRow AddemployeeRow(string EMPLOYEE_ID, string EMPLOYEE_NAME, string ADDRESS, string startdate, string BARCODE) {
                employeeRow rowemployeeRow = ((employeeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EMPLOYEE_ID,
                        EMPLOYEE_NAME,
                        ADDRESS,
                        startdate,
                        BARCODE};
                rowemployeeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowemployeeRow);
                return rowemployeeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeeRow FindByEMPLOYEE_ID(string EMPLOYEE_ID) {
                return ((employeeRow)(this.Rows.Find(new object[] {
                            EMPLOYEE_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                employeeDataTable cln = ((employeeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new employeeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEMPLOYEE_ID = base.Columns["EMPLOYEE_ID"];
                this.columnEMPLOYEE_NAME = base.Columns["EMPLOYEE_NAME"];
                this.columnADDRESS = base.Columns["ADDRESS"];
                this.columnstartdate = base.Columns["startdate"];
                this.columnBARCODE = base.Columns["BARCODE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEMPLOYEE_ID = new global::System.Data.DataColumn("EMPLOYEE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYEE_ID);
                this.columnEMPLOYEE_NAME = new global::System.Data.DataColumn("EMPLOYEE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYEE_NAME);
                this.columnADDRESS = new global::System.Data.DataColumn("ADDRESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS);
                this.columnstartdate = new global::System.Data.DataColumn("startdate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstartdate);
                this.columnBARCODE = new global::System.Data.DataColumn("BARCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBARCODE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEMPLOYEE_ID}, true));
                this.columnEMPLOYEE_ID.AllowDBNull = false;
                this.columnEMPLOYEE_ID.Unique = true;
                this.columnEMPLOYEE_ID.MaxLength = 20;
                this.columnEMPLOYEE_NAME.MaxLength = 500;
                this.columnADDRESS.MaxLength = 500;
                this.columnstartdate.MaxLength = 10;
                this.columnBARCODE.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeeRow NewemployeeRow() {
                return ((employeeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new employeeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(employeeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.employeeRowChanged != null)) {
                    this.employeeRowChanged(this, new employeeRowChangeEvent(((employeeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.employeeRowChanging != null)) {
                    this.employeeRowChanging(this, new employeeRowChangeEvent(((employeeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.employeeRowDeleted != null)) {
                    this.employeeRowDeleted(this, new employeeRowChangeEvent(((employeeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.employeeRowDeleting != null)) {
                    this.employeeRowDeleting(this, new employeeRowChangeEvent(((employeeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveemployeeRow(employeeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "employeeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class workingdayDataTable : global::System.Data.TypedTableBase<workingdayRow> {
            
            private global::System.Data.DataColumn columnemployee_id;
            
            private global::System.Data.DataColumn columnemployee_name;
            
            private global::System.Data.DataColumn columnbarcode;
            
            private global::System.Data.DataColumn columnwkday;
            
            private global::System.Data.DataColumn columnstart_time;
            
            private global::System.Data.DataColumn columnend_time;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public workingdayDataTable() {
                this.TableName = "workingday";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal workingdayDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected workingdayDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn employee_idColumn {
                get {
                    return this.columnemployee_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn employee_nameColumn {
                get {
                    return this.columnemployee_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn barcodeColumn {
                get {
                    return this.columnbarcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn wkdayColumn {
                get {
                    return this.columnwkday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_timeColumn {
                get {
                    return this.columnstart_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_timeColumn {
                get {
                    return this.columnend_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public workingdayRow this[int index] {
                get {
                    return ((workingdayRow)(this.Rows[index]));
                }
            }
            
            public event workingdayRowChangeEventHandler workingdayRowChanging;
            
            public event workingdayRowChangeEventHandler workingdayRowChanged;
            
            public event workingdayRowChangeEventHandler workingdayRowDeleting;
            
            public event workingdayRowChangeEventHandler workingdayRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddworkingdayRow(workingdayRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public workingdayRow AddworkingdayRow(string employee_id, string employee_name, string barcode, string wkday, string start_time, string end_time) {
                workingdayRow rowworkingdayRow = ((workingdayRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        employee_id,
                        employee_name,
                        barcode,
                        wkday,
                        start_time,
                        end_time};
                rowworkingdayRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowworkingdayRow);
                return rowworkingdayRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public workingdayRow FindByemployee_id(string employee_id) {
                return ((workingdayRow)(this.Rows.Find(new object[] {
                            employee_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                workingdayDataTable cln = ((workingdayDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new workingdayDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnemployee_id = base.Columns["employee_id"];
                this.columnemployee_name = base.Columns["employee_name"];
                this.columnbarcode = base.Columns["barcode"];
                this.columnwkday = base.Columns["wkday"];
                this.columnstart_time = base.Columns["start_time"];
                this.columnend_time = base.Columns["end_time"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnemployee_id = new global::System.Data.DataColumn("employee_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemployee_id);
                this.columnemployee_name = new global::System.Data.DataColumn("employee_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemployee_name);
                this.columnbarcode = new global::System.Data.DataColumn("barcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbarcode);
                this.columnwkday = new global::System.Data.DataColumn("wkday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwkday);
                this.columnstart_time = new global::System.Data.DataColumn("start_time", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_time);
                this.columnend_time = new global::System.Data.DataColumn("end_time", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_time);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnemployee_id}, true));
                this.columnemployee_id.AllowDBNull = false;
                this.columnemployee_id.Unique = true;
                this.columnemployee_id.MaxLength = 20;
                this.columnemployee_name.MaxLength = 500;
                this.columnbarcode.MaxLength = 10;
                this.columnwkday.MaxLength = 10;
                this.columnstart_time.MaxLength = 8;
                this.columnend_time.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public workingdayRow NewworkingdayRow() {
                return ((workingdayRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new workingdayRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(workingdayRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.workingdayRowChanged != null)) {
                    this.workingdayRowChanged(this, new workingdayRowChangeEvent(((workingdayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.workingdayRowChanging != null)) {
                    this.workingdayRowChanging(this, new workingdayRowChangeEvent(((workingdayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.workingdayRowDeleted != null)) {
                    this.workingdayRowDeleted(this, new workingdayRowChangeEvent(((workingdayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.workingdayRowDeleting != null)) {
                    this.workingdayRowDeleting(this, new workingdayRowChangeEvent(((workingdayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveworkingdayRow(workingdayRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "workingdayDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class saleStatisticDataTable : global::System.Data.TypedTableBase<saleStatisticRow> {
            
            private global::System.Data.DataColumn columnprdate;
            
            private global::System.Data.DataColumn columndepartment_name;
            
            private global::System.Data.DataColumn columnaddress;
            
            private global::System.Data.DataColumn columnPURCHASE_ORDER_ID;
            
            private global::System.Data.DataColumn columnTYPE_NAME;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnPRODUCT_NAME;
            
            private global::System.Data.DataColumn columncolor_name;
            
            private global::System.Data.DataColumn columnsize_name;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnrtnqty;
            
            private global::System.Data.DataColumn columnPrice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public saleStatisticDataTable() {
                this.TableName = "saleStatistic";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal saleStatisticDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected saleStatisticDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn prdateColumn {
                get {
                    return this.columnprdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn department_nameColumn {
                get {
                    return this.columndepartment_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PURCHASE_ORDER_IDColumn {
                get {
                    return this.columnPURCHASE_ORDER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TYPE_NAMEColumn {
                get {
                    return this.columnTYPE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_NAMEColumn {
                get {
                    return this.columnPRODUCT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn color_nameColumn {
                get {
                    return this.columncolor_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn size_nameColumn {
                get {
                    return this.columnsize_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rtnqtyColumn {
                get {
                    return this.columnrtnqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public saleStatisticRow this[int index] {
                get {
                    return ((saleStatisticRow)(this.Rows[index]));
                }
            }
            
            public event saleStatisticRowChangeEventHandler saleStatisticRowChanging;
            
            public event saleStatisticRowChangeEventHandler saleStatisticRowChanged;
            
            public event saleStatisticRowChangeEventHandler saleStatisticRowDeleting;
            
            public event saleStatisticRowChangeEventHandler saleStatisticRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddsaleStatisticRow(saleStatisticRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public saleStatisticRow AddsaleStatisticRow(string prdate, string department_name, string address, string PURCHASE_ORDER_ID, string TYPE_NAME, string product_id, string PRODUCT_NAME, string color_name, string size_name, decimal Quantity, decimal rtnqty, decimal Price) {
                saleStatisticRow rowsaleStatisticRow = ((saleStatisticRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        prdate,
                        department_name,
                        address,
                        PURCHASE_ORDER_ID,
                        TYPE_NAME,
                        product_id,
                        PRODUCT_NAME,
                        color_name,
                        size_name,
                        Quantity,
                        rtnqty,
                        Price};
                rowsaleStatisticRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsaleStatisticRow);
                return rowsaleStatisticRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public saleStatisticRow FindByPURCHASE_ORDER_ID(string PURCHASE_ORDER_ID) {
                return ((saleStatisticRow)(this.Rows.Find(new object[] {
                            PURCHASE_ORDER_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                saleStatisticDataTable cln = ((saleStatisticDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new saleStatisticDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnprdate = base.Columns["prdate"];
                this.columndepartment_name = base.Columns["department_name"];
                this.columnaddress = base.Columns["address"];
                this.columnPURCHASE_ORDER_ID = base.Columns["PURCHASE_ORDER_ID"];
                this.columnTYPE_NAME = base.Columns["TYPE_NAME"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnPRODUCT_NAME = base.Columns["PRODUCT_NAME"];
                this.columncolor_name = base.Columns["color_name"];
                this.columnsize_name = base.Columns["size_name"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnrtnqty = base.Columns["rtnqty"];
                this.columnPrice = base.Columns["Price"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnprdate = new global::System.Data.DataColumn("prdate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprdate);
                this.columndepartment_name = new global::System.Data.DataColumn("department_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_name);
                this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this.columnPURCHASE_ORDER_ID = new global::System.Data.DataColumn("PURCHASE_ORDER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPURCHASE_ORDER_ID);
                this.columnTYPE_NAME = new global::System.Data.DataColumn("TYPE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_NAME);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnPRODUCT_NAME = new global::System.Data.DataColumn("PRODUCT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_NAME);
                this.columncolor_name = new global::System.Data.DataColumn("color_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor_name);
                this.columnsize_name = new global::System.Data.DataColumn("size_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsize_name);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnrtnqty = new global::System.Data.DataColumn("rtnqty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrtnqty);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPURCHASE_ORDER_ID}, true));
                this.columnprdate.MaxLength = 10;
                this.columndepartment_name.MaxLength = 500;
                this.columnaddress.MaxLength = 500;
                this.columnPURCHASE_ORDER_ID.AllowDBNull = false;
                this.columnPURCHASE_ORDER_ID.Unique = true;
                this.columnPURCHASE_ORDER_ID.MaxLength = 20;
                this.columnTYPE_NAME.MaxLength = 500;
                this.columnproduct_id.MaxLength = 20;
                this.columnPRODUCT_NAME.MaxLength = 500;
                this.columncolor_name.MaxLength = 500;
                this.columnsize_name.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public saleStatisticRow NewsaleStatisticRow() {
                return ((saleStatisticRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new saleStatisticRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(saleStatisticRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.saleStatisticRowChanged != null)) {
                    this.saleStatisticRowChanged(this, new saleStatisticRowChangeEvent(((saleStatisticRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.saleStatisticRowChanging != null)) {
                    this.saleStatisticRowChanging(this, new saleStatisticRowChangeEvent(((saleStatisticRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.saleStatisticRowDeleted != null)) {
                    this.saleStatisticRowDeleted(this, new saleStatisticRowChangeEvent(((saleStatisticRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.saleStatisticRowDeleting != null)) {
                    this.saleStatisticRowDeleting(this, new saleStatisticRowChangeEvent(((saleStatisticRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovesaleStatisticRow(saleStatisticRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "saleStatisticDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PurchaseOrderPeriodDataTable : global::System.Data.TypedTableBase<PurchaseOrderPeriodRow> {
            
            private global::System.Data.DataColumn columnpoid;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columnsellqty;
            
            private global::System.Data.DataColumn columnsellamount;
            
            private global::System.Data.DataColumn columnretqty;
            
            private global::System.Data.DataColumn columnretamount;
            
            private global::System.Data.DataColumn columnissue_date;
            
            private global::System.Data.DataColumn columnperiod;
            
            private global::System.Data.DataColumn columnworking_date;
            
            private global::System.Data.DataColumn columncolor_name;
            
            private global::System.Data.DataColumn columnsize_name;
            
            private global::System.Data.DataColumn columntype_name;
            
            private global::System.Data.DataColumn columndepartment_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderPeriodDataTable() {
                this.TableName = "PurchaseOrderPeriod";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PurchaseOrderPeriodDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PurchaseOrderPeriodDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn poidColumn {
                get {
                    return this.columnpoid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sellqtyColumn {
                get {
                    return this.columnsellqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sellamountColumn {
                get {
                    return this.columnsellamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn retqtyColumn {
                get {
                    return this.columnretqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn retamountColumn {
                get {
                    return this.columnretamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn issue_dateColumn {
                get {
                    return this.columnissue_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn periodColumn {
                get {
                    return this.columnperiod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn working_dateColumn {
                get {
                    return this.columnworking_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn color_nameColumn {
                get {
                    return this.columncolor_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn size_nameColumn {
                get {
                    return this.columnsize_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_nameColumn {
                get {
                    return this.columntype_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn department_nameColumn {
                get {
                    return this.columndepartment_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderPeriodRow this[int index] {
                get {
                    return ((PurchaseOrderPeriodRow)(this.Rows[index]));
                }
            }
            
            public event PurchaseOrderPeriodRowChangeEventHandler PurchaseOrderPeriodRowChanging;
            
            public event PurchaseOrderPeriodRowChangeEventHandler PurchaseOrderPeriodRowChanged;
            
            public event PurchaseOrderPeriodRowChangeEventHandler PurchaseOrderPeriodRowDeleting;
            
            public event PurchaseOrderPeriodRowChangeEventHandler PurchaseOrderPeriodRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPurchaseOrderPeriodRow(PurchaseOrderPeriodRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderPeriodRow AddPurchaseOrderPeriodRow(string poid, string product_name, decimal sellqty, decimal sellamount, decimal retqty, decimal retamount, string issue_date, uint period, string working_date, string color_name, string size_name, string type_name, string department_name) {
                PurchaseOrderPeriodRow rowPurchaseOrderPeriodRow = ((PurchaseOrderPeriodRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        poid,
                        product_name,
                        sellqty,
                        sellamount,
                        retqty,
                        retamount,
                        issue_date,
                        period,
                        working_date,
                        color_name,
                        size_name,
                        type_name,
                        department_name};
                rowPurchaseOrderPeriodRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPurchaseOrderPeriodRow);
                return rowPurchaseOrderPeriodRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PurchaseOrderPeriodDataTable cln = ((PurchaseOrderPeriodDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PurchaseOrderPeriodDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnpoid = base.Columns["poid"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columnsellqty = base.Columns["sellqty"];
                this.columnsellamount = base.Columns["sellamount"];
                this.columnretqty = base.Columns["retqty"];
                this.columnretamount = base.Columns["retamount"];
                this.columnissue_date = base.Columns["issue_date"];
                this.columnperiod = base.Columns["period"];
                this.columnworking_date = base.Columns["working_date"];
                this.columncolor_name = base.Columns["color_name"];
                this.columnsize_name = base.Columns["size_name"];
                this.columntype_name = base.Columns["type_name"];
                this.columndepartment_name = base.Columns["department_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnpoid = new global::System.Data.DataColumn("poid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpoid);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columnsellqty = new global::System.Data.DataColumn("sellqty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsellqty);
                this.columnsellamount = new global::System.Data.DataColumn("sellamount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsellamount);
                this.columnretqty = new global::System.Data.DataColumn("retqty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnretqty);
                this.columnretamount = new global::System.Data.DataColumn("retamount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnretamount);
                this.columnissue_date = new global::System.Data.DataColumn("issue_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnissue_date);
                this.columnperiod = new global::System.Data.DataColumn("period", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnperiod);
                this.columnworking_date = new global::System.Data.DataColumn("working_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnworking_date);
                this.columncolor_name = new global::System.Data.DataColumn("color_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor_name);
                this.columnsize_name = new global::System.Data.DataColumn("size_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsize_name);
                this.columntype_name = new global::System.Data.DataColumn("type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_name);
                this.columndepartment_name = new global::System.Data.DataColumn("department_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_name);
                this.columnpoid.AllowDBNull = false;
                this.columnpoid.MaxLength = 20;
                this.columnproduct_name.MaxLength = 500;
                this.columnissue_date.MaxLength = 10;
                this.columnperiod.AllowDBNull = false;
                this.columnworking_date.MaxLength = 10;
                this.columncolor_name.MaxLength = 500;
                this.columnsize_name.MaxLength = 500;
                this.columntype_name.MaxLength = 500;
                this.columndepartment_name.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderPeriodRow NewPurchaseOrderPeriodRow() {
                return ((PurchaseOrderPeriodRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PurchaseOrderPeriodRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PurchaseOrderPeriodRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PurchaseOrderPeriodRowChanged != null)) {
                    this.PurchaseOrderPeriodRowChanged(this, new PurchaseOrderPeriodRowChangeEvent(((PurchaseOrderPeriodRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PurchaseOrderPeriodRowChanging != null)) {
                    this.PurchaseOrderPeriodRowChanging(this, new PurchaseOrderPeriodRowChangeEvent(((PurchaseOrderPeriodRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PurchaseOrderPeriodRowDeleted != null)) {
                    this.PurchaseOrderPeriodRowDeleted(this, new PurchaseOrderPeriodRowChangeEvent(((PurchaseOrderPeriodRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PurchaseOrderPeriodRowDeleting != null)) {
                    this.PurchaseOrderPeriodRowDeleting(this, new PurchaseOrderPeriodRowChangeEvent(((PurchaseOrderPeriodRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePurchaseOrderPeriodRow(PurchaseOrderPeriodRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PurchaseOrderPeriodDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PurchaseOrderDetailReportDataTable : global::System.Data.TypedTableBase<PurchaseOrderDetailReportRow> {
            
            private global::System.Data.DataColumn columnworking_date;
            
            private global::System.Data.DataColumn columnpoid;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columncolor_name;
            
            private global::System.Data.DataColumn columnsize_name;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnsellqty;
            
            private global::System.Data.DataColumn columnsellamount;
            
            private global::System.Data.DataColumn columnretqty;
            
            private global::System.Data.DataColumn columnretamount;
            
            private global::System.Data.DataColumn columnissue_date;
            
            private global::System.Data.DataColumn columntype_name;
            
            private global::System.Data.DataColumn columndepartment_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderDetailReportDataTable() {
                this.TableName = "PurchaseOrderDetailReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PurchaseOrderDetailReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PurchaseOrderDetailReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn working_dateColumn {
                get {
                    return this.columnworking_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn poidColumn {
                get {
                    return this.columnpoid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn color_nameColumn {
                get {
                    return this.columncolor_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn size_nameColumn {
                get {
                    return this.columnsize_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sellqtyColumn {
                get {
                    return this.columnsellqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sellamountColumn {
                get {
                    return this.columnsellamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn retqtyColumn {
                get {
                    return this.columnretqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn retamountColumn {
                get {
                    return this.columnretamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn issue_dateColumn {
                get {
                    return this.columnissue_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_nameColumn {
                get {
                    return this.columntype_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn department_nameColumn {
                get {
                    return this.columndepartment_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderDetailReportRow this[int index] {
                get {
                    return ((PurchaseOrderDetailReportRow)(this.Rows[index]));
                }
            }
            
            public event PurchaseOrderDetailReportRowChangeEventHandler PurchaseOrderDetailReportRowChanging;
            
            public event PurchaseOrderDetailReportRowChangeEventHandler PurchaseOrderDetailReportRowChanged;
            
            public event PurchaseOrderDetailReportRowChangeEventHandler PurchaseOrderDetailReportRowDeleting;
            
            public event PurchaseOrderDetailReportRowChangeEventHandler PurchaseOrderDetailReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPurchaseOrderDetailReportRow(PurchaseOrderDetailReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderDetailReportRow AddPurchaseOrderDetailReportRow(string working_date, string poid, string product_name, string color_name, string size_name, string product_id, ulong sellqty, ulong sellamount, long retqty, long retamount, string issue_date, string type_name, string department_name) {
                PurchaseOrderDetailReportRow rowPurchaseOrderDetailReportRow = ((PurchaseOrderDetailReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        working_date,
                        poid,
                        product_name,
                        color_name,
                        size_name,
                        product_id,
                        sellqty,
                        sellamount,
                        retqty,
                        retamount,
                        issue_date,
                        type_name,
                        department_name};
                rowPurchaseOrderDetailReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPurchaseOrderDetailReportRow);
                return rowPurchaseOrderDetailReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PurchaseOrderDetailReportDataTable cln = ((PurchaseOrderDetailReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PurchaseOrderDetailReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnworking_date = base.Columns["working_date"];
                this.columnpoid = base.Columns["poid"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columncolor_name = base.Columns["color_name"];
                this.columnsize_name = base.Columns["size_name"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnsellqty = base.Columns["sellqty"];
                this.columnsellamount = base.Columns["sellamount"];
                this.columnretqty = base.Columns["retqty"];
                this.columnretamount = base.Columns["retamount"];
                this.columnissue_date = base.Columns["issue_date"];
                this.columntype_name = base.Columns["type_name"];
                this.columndepartment_name = base.Columns["department_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnworking_date = new global::System.Data.DataColumn("working_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnworking_date);
                this.columnpoid = new global::System.Data.DataColumn("poid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpoid);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columncolor_name = new global::System.Data.DataColumn("color_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor_name);
                this.columnsize_name = new global::System.Data.DataColumn("size_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsize_name);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnsellqty = new global::System.Data.DataColumn("sellqty", typeof(ulong), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsellqty);
                this.columnsellamount = new global::System.Data.DataColumn("sellamount", typeof(ulong), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsellamount);
                this.columnretqty = new global::System.Data.DataColumn("retqty", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnretqty);
                this.columnretamount = new global::System.Data.DataColumn("retamount", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnretamount);
                this.columnissue_date = new global::System.Data.DataColumn("issue_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnissue_date);
                this.columntype_name = new global::System.Data.DataColumn("type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_name);
                this.columndepartment_name = new global::System.Data.DataColumn("department_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_name);
                this.columnworking_date.MaxLength = 10;
                this.columnpoid.AllowDBNull = false;
                this.columnpoid.MaxLength = 20;
                this.columnproduct_name.MaxLength = 500;
                this.columncolor_name.MaxLength = 500;
                this.columnsize_name.MaxLength = 500;
                this.columnproduct_id.AllowDBNull = false;
                this.columnproduct_id.MaxLength = 20;
                this.columnissue_date.MaxLength = 19;
                this.columntype_name.MaxLength = 500;
                this.columndepartment_name.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderDetailReportRow NewPurchaseOrderDetailReportRow() {
                return ((PurchaseOrderDetailReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PurchaseOrderDetailReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PurchaseOrderDetailReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PurchaseOrderDetailReportRowChanged != null)) {
                    this.PurchaseOrderDetailReportRowChanged(this, new PurchaseOrderDetailReportRowChangeEvent(((PurchaseOrderDetailReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PurchaseOrderDetailReportRowChanging != null)) {
                    this.PurchaseOrderDetailReportRowChanging(this, new PurchaseOrderDetailReportRowChangeEvent(((PurchaseOrderDetailReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PurchaseOrderDetailReportRowDeleted != null)) {
                    this.PurchaseOrderDetailReportRowDeleted(this, new PurchaseOrderDetailReportRowChangeEvent(((PurchaseOrderDetailReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PurchaseOrderDetailReportRowDeleting != null)) {
                    this.PurchaseOrderDetailReportRowDeleting(this, new PurchaseOrderDetailReportRowChangeEvent(((PurchaseOrderDetailReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePurchaseOrderDetailReportRow(PurchaseOrderDetailReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PurchaseOrderDetailReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PurchaseOrderReportDataTable : global::System.Data.TypedTableBase<PurchaseOrderReportRow> {
            
            private global::System.Data.DataColumn columnworking_date;
            
            private global::System.Data.DataColumn columnpoid;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columnsellqty;
            
            private global::System.Data.DataColumn columnsellamount;
            
            private global::System.Data.DataColumn columnretqty;
            
            private global::System.Data.DataColumn columnretamount;
            
            private global::System.Data.DataColumn columnissue_date;
            
            private global::System.Data.DataColumn columncolor_name;
            
            private global::System.Data.DataColumn columnsize_name;
            
            private global::System.Data.DataColumn columntype_name;
            
            private global::System.Data.DataColumn columndepartment_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderReportDataTable() {
                this.TableName = "PurchaseOrderReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PurchaseOrderReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PurchaseOrderReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn working_dateColumn {
                get {
                    return this.columnworking_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn poidColumn {
                get {
                    return this.columnpoid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sellqtyColumn {
                get {
                    return this.columnsellqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sellamountColumn {
                get {
                    return this.columnsellamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn retqtyColumn {
                get {
                    return this.columnretqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn retamountColumn {
                get {
                    return this.columnretamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn issue_dateColumn {
                get {
                    return this.columnissue_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn color_nameColumn {
                get {
                    return this.columncolor_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn size_nameColumn {
                get {
                    return this.columnsize_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_nameColumn {
                get {
                    return this.columntype_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn department_nameColumn {
                get {
                    return this.columndepartment_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderReportRow this[int index] {
                get {
                    return ((PurchaseOrderReportRow)(this.Rows[index]));
                }
            }
            
            public event PurchaseOrderReportRowChangeEventHandler PurchaseOrderReportRowChanging;
            
            public event PurchaseOrderReportRowChangeEventHandler PurchaseOrderReportRowChanged;
            
            public event PurchaseOrderReportRowChangeEventHandler PurchaseOrderReportRowDeleting;
            
            public event PurchaseOrderReportRowChangeEventHandler PurchaseOrderReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPurchaseOrderReportRow(PurchaseOrderReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderReportRow AddPurchaseOrderReportRow(string working_date, string poid, string product_name, decimal sellqty, decimal sellamount, decimal retqty, decimal retamount, string issue_date, string color_name, string size_name, string type_name, string department_name) {
                PurchaseOrderReportRow rowPurchaseOrderReportRow = ((PurchaseOrderReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        working_date,
                        poid,
                        product_name,
                        sellqty,
                        sellamount,
                        retqty,
                        retamount,
                        issue_date,
                        color_name,
                        size_name,
                        type_name,
                        department_name};
                rowPurchaseOrderReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPurchaseOrderReportRow);
                return rowPurchaseOrderReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PurchaseOrderReportDataTable cln = ((PurchaseOrderReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PurchaseOrderReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnworking_date = base.Columns["working_date"];
                this.columnpoid = base.Columns["poid"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columnsellqty = base.Columns["sellqty"];
                this.columnsellamount = base.Columns["sellamount"];
                this.columnretqty = base.Columns["retqty"];
                this.columnretamount = base.Columns["retamount"];
                this.columnissue_date = base.Columns["issue_date"];
                this.columncolor_name = base.Columns["color_name"];
                this.columnsize_name = base.Columns["size_name"];
                this.columntype_name = base.Columns["type_name"];
                this.columndepartment_name = base.Columns["department_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnworking_date = new global::System.Data.DataColumn("working_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnworking_date);
                this.columnpoid = new global::System.Data.DataColumn("poid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpoid);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columnsellqty = new global::System.Data.DataColumn("sellqty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsellqty);
                this.columnsellamount = new global::System.Data.DataColumn("sellamount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsellamount);
                this.columnretqty = new global::System.Data.DataColumn("retqty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnretqty);
                this.columnretamount = new global::System.Data.DataColumn("retamount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnretamount);
                this.columnissue_date = new global::System.Data.DataColumn("issue_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnissue_date);
                this.columncolor_name = new global::System.Data.DataColumn("color_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor_name);
                this.columnsize_name = new global::System.Data.DataColumn("size_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsize_name);
                this.columntype_name = new global::System.Data.DataColumn("type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_name);
                this.columndepartment_name = new global::System.Data.DataColumn("department_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_name);
                this.columnworking_date.MaxLength = 10;
                this.columnpoid.AllowDBNull = false;
                this.columnpoid.MaxLength = 20;
                this.columnproduct_name.MaxLength = 500;
                this.columnissue_date.MaxLength = 19;
                this.columncolor_name.MaxLength = 500;
                this.columnsize_name.MaxLength = 500;
                this.columntype_name.MaxLength = 500;
                this.columndepartment_name.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderReportRow NewPurchaseOrderReportRow() {
                return ((PurchaseOrderReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PurchaseOrderReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PurchaseOrderReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PurchaseOrderReportRowChanged != null)) {
                    this.PurchaseOrderReportRowChanged(this, new PurchaseOrderReportRowChangeEvent(((PurchaseOrderReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PurchaseOrderReportRowChanging != null)) {
                    this.PurchaseOrderReportRowChanging(this, new PurchaseOrderReportRowChangeEvent(((PurchaseOrderReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PurchaseOrderReportRowDeleted != null)) {
                    this.PurchaseOrderReportRowDeleted(this, new PurchaseOrderReportRowChangeEvent(((PurchaseOrderReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PurchaseOrderReportRowDeleting != null)) {
                    this.PurchaseOrderReportRowDeleting(this, new PurchaseOrderReportRowChangeEvent(((PurchaseOrderReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePurchaseOrderReportRow(PurchaseOrderReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PurchaseOrderReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomizeReportDataTable : global::System.Data.TypedTableBase<CustomizeReportRow> {
            
            private global::System.Data.DataColumn columntype_name;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columncolor_name;
            
            private global::System.Data.DataColumn columnsize_name;
            
            private global::System.Data.DataColumn columnquantity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomizeReportDataTable() {
                this.TableName = "CustomizeReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomizeReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomizeReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_nameColumn {
                get {
                    return this.columntype_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn color_nameColumn {
                get {
                    return this.columncolor_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn size_nameColumn {
                get {
                    return this.columnsize_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantityColumn {
                get {
                    return this.columnquantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomizeReportRow this[int index] {
                get {
                    return ((CustomizeReportRow)(this.Rows[index]));
                }
            }
            
            public event CustomizeReportRowChangeEventHandler CustomizeReportRowChanging;
            
            public event CustomizeReportRowChangeEventHandler CustomizeReportRowChanged;
            
            public event CustomizeReportRowChangeEventHandler CustomizeReportRowDeleting;
            
            public event CustomizeReportRowChangeEventHandler CustomizeReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomizeReportRow(CustomizeReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomizeReportRow AddCustomizeReportRow(string type_name, string product_name, string color_name, string size_name, decimal quantity) {
                CustomizeReportRow rowCustomizeReportRow = ((CustomizeReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        type_name,
                        product_name,
                        color_name,
                        size_name,
                        quantity};
                rowCustomizeReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomizeReportRow);
                return rowCustomizeReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomizeReportDataTable cln = ((CustomizeReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomizeReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntype_name = base.Columns["type_name"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columncolor_name = base.Columns["color_name"];
                this.columnsize_name = base.Columns["size_name"];
                this.columnquantity = base.Columns["quantity"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntype_name = new global::System.Data.DataColumn("type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_name);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columncolor_name = new global::System.Data.DataColumn("color_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor_name);
                this.columnsize_name = new global::System.Data.DataColumn("size_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsize_name);
                this.columnquantity = new global::System.Data.DataColumn("quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity);
                this.columntype_name.MaxLength = 500;
                this.columnproduct_name.MaxLength = 500;
                this.columncolor_name.MaxLength = 500;
                this.columnsize_name.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomizeReportRow NewCustomizeReportRow() {
                return ((CustomizeReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomizeReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomizeReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomizeReportRowChanged != null)) {
                    this.CustomizeReportRowChanged(this, new CustomizeReportRowChangeEvent(((CustomizeReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomizeReportRowChanging != null)) {
                    this.CustomizeReportRowChanging(this, new CustomizeReportRowChangeEvent(((CustomizeReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomizeReportRowDeleted != null)) {
                    this.CustomizeReportRowDeleted(this, new CustomizeReportRowChangeEvent(((CustomizeReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomizeReportRowDeleting != null)) {
                    this.CustomizeReportRowDeleting(this, new CustomizeReportRowChangeEvent(((CustomizeReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomizeReportRow(CustomizeReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomizeReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomizeDepartmentReportDataTable : global::System.Data.TypedTableBase<CustomizeDepartmentReportRow> {
            
            private global::System.Data.DataColumn columndeptid;
            
            private global::System.Data.DataColumn columndeptname;
            
            private global::System.Data.DataColumn columntype_name;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columncolor_name;
            
            private global::System.Data.DataColumn columnsize_name;
            
            private global::System.Data.DataColumn columnquantity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomizeDepartmentReportDataTable() {
                this.TableName = "CustomizeDepartmentReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomizeDepartmentReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomizeDepartmentReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn deptidColumn {
                get {
                    return this.columndeptid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn deptnameColumn {
                get {
                    return this.columndeptname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_nameColumn {
                get {
                    return this.columntype_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn color_nameColumn {
                get {
                    return this.columncolor_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn size_nameColumn {
                get {
                    return this.columnsize_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantityColumn {
                get {
                    return this.columnquantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomizeDepartmentReportRow this[int index] {
                get {
                    return ((CustomizeDepartmentReportRow)(this.Rows[index]));
                }
            }
            
            public event CustomizeDepartmentReportRowChangeEventHandler CustomizeDepartmentReportRowChanging;
            
            public event CustomizeDepartmentReportRowChangeEventHandler CustomizeDepartmentReportRowChanged;
            
            public event CustomizeDepartmentReportRowChangeEventHandler CustomizeDepartmentReportRowDeleting;
            
            public event CustomizeDepartmentReportRowChangeEventHandler CustomizeDepartmentReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomizeDepartmentReportRow(CustomizeDepartmentReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomizeDepartmentReportRow AddCustomizeDepartmentReportRow(uint deptid, string deptname, string type_name, string product_name, string color_name, string size_name, decimal quantity) {
                CustomizeDepartmentReportRow rowCustomizeDepartmentReportRow = ((CustomizeDepartmentReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        deptid,
                        deptname,
                        type_name,
                        product_name,
                        color_name,
                        size_name,
                        quantity};
                rowCustomizeDepartmentReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomizeDepartmentReportRow);
                return rowCustomizeDepartmentReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomizeDepartmentReportRow FindBydeptid(uint deptid) {
                return ((CustomizeDepartmentReportRow)(this.Rows.Find(new object[] {
                            deptid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomizeDepartmentReportDataTable cln = ((CustomizeDepartmentReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomizeDepartmentReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columndeptid = base.Columns["deptid"];
                this.columndeptname = base.Columns["deptname"];
                this.columntype_name = base.Columns["type_name"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columncolor_name = base.Columns["color_name"];
                this.columnsize_name = base.Columns["size_name"];
                this.columnquantity = base.Columns["quantity"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columndeptid = new global::System.Data.DataColumn("deptid", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeptid);
                this.columndeptname = new global::System.Data.DataColumn("deptname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeptname);
                this.columntype_name = new global::System.Data.DataColumn("type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_name);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columncolor_name = new global::System.Data.DataColumn("color_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor_name);
                this.columnsize_name = new global::System.Data.DataColumn("size_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsize_name);
                this.columnquantity = new global::System.Data.DataColumn("quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columndeptid}, true));
                this.columndeptid.AllowDBNull = false;
                this.columndeptid.Unique = true;
                this.columndeptname.MaxLength = 500;
                this.columntype_name.MaxLength = 500;
                this.columnproduct_name.MaxLength = 500;
                this.columncolor_name.MaxLength = 500;
                this.columnsize_name.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomizeDepartmentReportRow NewCustomizeDepartmentReportRow() {
                return ((CustomizeDepartmentReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomizeDepartmentReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomizeDepartmentReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomizeDepartmentReportRowChanged != null)) {
                    this.CustomizeDepartmentReportRowChanged(this, new CustomizeDepartmentReportRowChangeEvent(((CustomizeDepartmentReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomizeDepartmentReportRowChanging != null)) {
                    this.CustomizeDepartmentReportRowChanging(this, new CustomizeDepartmentReportRowChangeEvent(((CustomizeDepartmentReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomizeDepartmentReportRowDeleted != null)) {
                    this.CustomizeDepartmentReportRowDeleted(this, new CustomizeDepartmentReportRowChangeEvent(((CustomizeDepartmentReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomizeDepartmentReportRowDeleting != null)) {
                    this.CustomizeDepartmentReportRowDeleting(this, new CustomizeDepartmentReportRowChangeEvent(((CustomizeDepartmentReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomizeDepartmentReportRow(CustomizeDepartmentReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomizeDepartmentReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomizeDepartmentDetailReportDataTable : global::System.Data.TypedTableBase<CustomizeDepartmentDetailReportRow> {
            
            private global::System.Data.DataColumn columnrow_number;
            
            private global::System.Data.DataColumn columntype_name;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columncolor_name;
            
            private global::System.Data.DataColumn columnsize_name;
            
            private global::System.Data.DataColumn columnquantity;
            
            private global::System.Data.DataColumn columndeptid;
            
            private global::System.Data.DataColumn columndeptname;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomizeDepartmentDetailReportDataTable() {
                this.TableName = "CustomizeDepartmentDetailReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomizeDepartmentDetailReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomizeDepartmentDetailReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn row_numberColumn {
                get {
                    return this.columnrow_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_nameColumn {
                get {
                    return this.columntype_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn color_nameColumn {
                get {
                    return this.columncolor_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn size_nameColumn {
                get {
                    return this.columnsize_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantityColumn {
                get {
                    return this.columnquantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn deptidColumn {
                get {
                    return this.columndeptid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn deptnameColumn {
                get {
                    return this.columndeptname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomizeDepartmentDetailReportRow this[int index] {
                get {
                    return ((CustomizeDepartmentDetailReportRow)(this.Rows[index]));
                }
            }
            
            public event CustomizeDepartmentDetailReportRowChangeEventHandler CustomizeDepartmentDetailReportRowChanging;
            
            public event CustomizeDepartmentDetailReportRowChangeEventHandler CustomizeDepartmentDetailReportRowChanged;
            
            public event CustomizeDepartmentDetailReportRowChangeEventHandler CustomizeDepartmentDetailReportRowDeleting;
            
            public event CustomizeDepartmentDetailReportRowChangeEventHandler CustomizeDepartmentDetailReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomizeDepartmentDetailReportRow(CustomizeDepartmentDetailReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomizeDepartmentDetailReportRow AddCustomizeDepartmentDetailReportRow(long row_number, string type_name, string product_name, string color_name, string size_name, decimal quantity, uint deptid, string deptname) {
                CustomizeDepartmentDetailReportRow rowCustomizeDepartmentDetailReportRow = ((CustomizeDepartmentDetailReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        row_number,
                        type_name,
                        product_name,
                        color_name,
                        size_name,
                        quantity,
                        deptid,
                        deptname};
                rowCustomizeDepartmentDetailReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomizeDepartmentDetailReportRow);
                return rowCustomizeDepartmentDetailReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomizeDepartmentDetailReportDataTable cln = ((CustomizeDepartmentDetailReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomizeDepartmentDetailReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrow_number = base.Columns["row_number"];
                this.columntype_name = base.Columns["type_name"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columncolor_name = base.Columns["color_name"];
                this.columnsize_name = base.Columns["size_name"];
                this.columnquantity = base.Columns["quantity"];
                this.columndeptid = base.Columns["deptid"];
                this.columndeptname = base.Columns["deptname"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrow_number = new global::System.Data.DataColumn("row_number", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrow_number);
                this.columntype_name = new global::System.Data.DataColumn("type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_name);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columncolor_name = new global::System.Data.DataColumn("color_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor_name);
                this.columnsize_name = new global::System.Data.DataColumn("size_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsize_name);
                this.columnquantity = new global::System.Data.DataColumn("quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity);
                this.columndeptid = new global::System.Data.DataColumn("deptid", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeptid);
                this.columndeptname = new global::System.Data.DataColumn("deptname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeptname);
                this.columntype_name.MaxLength = 500;
                this.columnproduct_name.MaxLength = 500;
                this.columncolor_name.MaxLength = 500;
                this.columnsize_name.MaxLength = 500;
                this.columndeptid.AllowDBNull = false;
                this.columndeptname.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomizeDepartmentDetailReportRow NewCustomizeDepartmentDetailReportRow() {
                return ((CustomizeDepartmentDetailReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomizeDepartmentDetailReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomizeDepartmentDetailReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomizeDepartmentDetailReportRowChanged != null)) {
                    this.CustomizeDepartmentDetailReportRowChanged(this, new CustomizeDepartmentDetailReportRowChangeEvent(((CustomizeDepartmentDetailReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomizeDepartmentDetailReportRowChanging != null)) {
                    this.CustomizeDepartmentDetailReportRowChanging(this, new CustomizeDepartmentDetailReportRowChangeEvent(((CustomizeDepartmentDetailReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomizeDepartmentDetailReportRowDeleted != null)) {
                    this.CustomizeDepartmentDetailReportRowDeleted(this, new CustomizeDepartmentDetailReportRowChangeEvent(((CustomizeDepartmentDetailReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomizeDepartmentDetailReportRowDeleting != null)) {
                    this.CustomizeDepartmentDetailReportRowDeleting(this, new CustomizeDepartmentDetailReportRowChangeEvent(((CustomizeDepartmentDetailReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomizeDepartmentDetailReportRow(CustomizeDepartmentDetailReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomizeDepartmentDetailReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class product_typeDataTable : global::System.Data.TypedTableBase<product_typeRow> {
            
            private global::System.Data.DataColumn columnTYPE_ID;
            
            private global::System.Data.DataColumn columnTYPE_NAME;
            
            private global::System.Data.DataColumn columnCREATE_DATE;
            
            private global::System.Data.DataColumn columnCREATE_ID;
            
            private global::System.Data.DataColumn columnUPDATE_DATE;
            
            private global::System.Data.DataColumn columnUPDATE_ID;
            
            private global::System.Data.DataColumn columnEXCLUSIVE_KEY;
            
            private global::System.Data.DataColumn columnDEL_FLG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_typeDataTable() {
                this.TableName = "product_type";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal product_typeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected product_typeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TYPE_IDColumn {
                get {
                    return this.columnTYPE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TYPE_NAMEColumn {
                get {
                    return this.columnTYPE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DATEColumn {
                get {
                    return this.columnCREATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_IDColumn {
                get {
                    return this.columnCREATE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATE_DATEColumn {
                get {
                    return this.columnUPDATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATE_IDColumn {
                get {
                    return this.columnUPDATE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EXCLUSIVE_KEYColumn {
                get {
                    return this.columnEXCLUSIVE_KEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEL_FLGColumn {
                get {
                    return this.columnDEL_FLG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_typeRow this[int index] {
                get {
                    return ((product_typeRow)(this.Rows[index]));
                }
            }
            
            public event product_typeRowChangeEventHandler product_typeRowChanging;
            
            public event product_typeRowChangeEventHandler product_typeRowChanged;
            
            public event product_typeRowChangeEventHandler product_typeRowDeleting;
            
            public event product_typeRowChangeEventHandler product_typeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addproduct_typeRow(product_typeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_typeRow Addproduct_typeRow(uint TYPE_ID, string TYPE_NAME, System.DateTime CREATE_DATE, string CREATE_ID, System.DateTime UPDATE_DATE, string UPDATE_ID, uint EXCLUSIVE_KEY, uint DEL_FLG) {
                product_typeRow rowproduct_typeRow = ((product_typeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TYPE_ID,
                        TYPE_NAME,
                        CREATE_DATE,
                        CREATE_ID,
                        UPDATE_DATE,
                        UPDATE_ID,
                        EXCLUSIVE_KEY,
                        DEL_FLG};
                rowproduct_typeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowproduct_typeRow);
                return rowproduct_typeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_typeRow FindByTYPE_ID(uint TYPE_ID) {
                return ((product_typeRow)(this.Rows.Find(new object[] {
                            TYPE_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                product_typeDataTable cln = ((product_typeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new product_typeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTYPE_ID = base.Columns["TYPE_ID"];
                this.columnTYPE_NAME = base.Columns["TYPE_NAME"];
                this.columnCREATE_DATE = base.Columns["CREATE_DATE"];
                this.columnCREATE_ID = base.Columns["CREATE_ID"];
                this.columnUPDATE_DATE = base.Columns["UPDATE_DATE"];
                this.columnUPDATE_ID = base.Columns["UPDATE_ID"];
                this.columnEXCLUSIVE_KEY = base.Columns["EXCLUSIVE_KEY"];
                this.columnDEL_FLG = base.Columns["DEL_FLG"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTYPE_ID = new global::System.Data.DataColumn("TYPE_ID", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_ID);
                this.columnTYPE_NAME = new global::System.Data.DataColumn("TYPE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_NAME);
                this.columnCREATE_DATE = new global::System.Data.DataColumn("CREATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DATE);
                this.columnCREATE_ID = new global::System.Data.DataColumn("CREATE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_ID);
                this.columnUPDATE_DATE = new global::System.Data.DataColumn("UPDATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATE_DATE);
                this.columnUPDATE_ID = new global::System.Data.DataColumn("UPDATE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATE_ID);
                this.columnEXCLUSIVE_KEY = new global::System.Data.DataColumn("EXCLUSIVE_KEY", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXCLUSIVE_KEY);
                this.columnDEL_FLG = new global::System.Data.DataColumn("DEL_FLG", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEL_FLG);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTYPE_ID}, true));
                this.columnTYPE_ID.AllowDBNull = false;
                this.columnTYPE_ID.Unique = true;
                this.columnTYPE_NAME.MaxLength = 500;
                this.columnCREATE_ID.MaxLength = 50;
                this.columnUPDATE_ID.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_typeRow Newproduct_typeRow() {
                return ((product_typeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new product_typeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(product_typeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.product_typeRowChanged != null)) {
                    this.product_typeRowChanged(this, new product_typeRowChangeEvent(((product_typeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.product_typeRowChanging != null)) {
                    this.product_typeRowChanging(this, new product_typeRowChangeEvent(((product_typeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.product_typeRowDeleted != null)) {
                    this.product_typeRowDeleted(this, new product_typeRowChangeEvent(((product_typeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.product_typeRowDeleting != null)) {
                    this.product_typeRowDeleting(this, new product_typeRowChangeEvent(((product_typeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeproduct_typeRow(product_typeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "product_typeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DepartmentStockOutDataTable : global::System.Data.TypedTableBase<DepartmentStockOutRow> {
            
            private global::System.Data.DataColumn columntype_name;
            
            private global::System.Data.DataColumn columndepartment_id;
            
            private global::System.Data.DataColumn columndepartment_name;
            
            private global::System.Data.DataColumn columnaddress;
            
            private global::System.Data.DataColumn columnstock_out_id;
            
            private global::System.Data.DataColumn columndefect_status_name;
            
            private global::System.Data.DataColumn columnstock_out_date;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columncolor_name;
            
            private global::System.Data.DataColumn columnsize_name;
            
            private global::System.Data.DataColumn columnquantity;
            
            private global::System.Data.DataColumn columndest_department_name;
            
            private global::System.Data.DataColumn columnprice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentStockOutDataTable() {
                this.TableName = "DepartmentStockOut";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DepartmentStockOutDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DepartmentStockOutDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_nameColumn {
                get {
                    return this.columntype_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn department_idColumn {
                get {
                    return this.columndepartment_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn department_nameColumn {
                get {
                    return this.columndepartment_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stock_out_idColumn {
                get {
                    return this.columnstock_out_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn defect_status_nameColumn {
                get {
                    return this.columndefect_status_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stock_out_dateColumn {
                get {
                    return this.columnstock_out_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn color_nameColumn {
                get {
                    return this.columncolor_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn size_nameColumn {
                get {
                    return this.columnsize_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantityColumn {
                get {
                    return this.columnquantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dest_department_nameColumn {
                get {
                    return this.columndest_department_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priceColumn {
                get {
                    return this.columnprice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentStockOutRow this[int index] {
                get {
                    return ((DepartmentStockOutRow)(this.Rows[index]));
                }
            }
            
            public event DepartmentStockOutRowChangeEventHandler DepartmentStockOutRowChanging;
            
            public event DepartmentStockOutRowChangeEventHandler DepartmentStockOutRowChanged;
            
            public event DepartmentStockOutRowChangeEventHandler DepartmentStockOutRowDeleting;
            
            public event DepartmentStockOutRowChangeEventHandler DepartmentStockOutRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDepartmentStockOutRow(DepartmentStockOutRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentStockOutRow AddDepartmentStockOutRow(string type_name, uint department_id, string department_name, string address, uint stock_out_id, string defect_status_name, string stock_out_date, string product_id, string product_name, string color_name, string size_name, decimal quantity, string dest_department_name, decimal price) {
                DepartmentStockOutRow rowDepartmentStockOutRow = ((DepartmentStockOutRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        type_name,
                        department_id,
                        department_name,
                        address,
                        stock_out_id,
                        defect_status_name,
                        stock_out_date,
                        product_id,
                        product_name,
                        color_name,
                        size_name,
                        quantity,
                        dest_department_name,
                        price};
                rowDepartmentStockOutRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDepartmentStockOutRow);
                return rowDepartmentStockOutRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentStockOutRow FindBydepartment_idstock_out_id(uint department_id, uint stock_out_id) {
                return ((DepartmentStockOutRow)(this.Rows.Find(new object[] {
                            department_id,
                            stock_out_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DepartmentStockOutDataTable cln = ((DepartmentStockOutDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DepartmentStockOutDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntype_name = base.Columns["type_name"];
                this.columndepartment_id = base.Columns["department_id"];
                this.columndepartment_name = base.Columns["department_name"];
                this.columnaddress = base.Columns["address"];
                this.columnstock_out_id = base.Columns["stock_out_id"];
                this.columndefect_status_name = base.Columns["defect_status_name"];
                this.columnstock_out_date = base.Columns["stock_out_date"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columncolor_name = base.Columns["color_name"];
                this.columnsize_name = base.Columns["size_name"];
                this.columnquantity = base.Columns["quantity"];
                this.columndest_department_name = base.Columns["dest_department_name"];
                this.columnprice = base.Columns["price"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntype_name = new global::System.Data.DataColumn("type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_name);
                this.columndepartment_id = new global::System.Data.DataColumn("department_id", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_id);
                this.columndepartment_name = new global::System.Data.DataColumn("department_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_name);
                this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this.columnstock_out_id = new global::System.Data.DataColumn("stock_out_id", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstock_out_id);
                this.columndefect_status_name = new global::System.Data.DataColumn("defect_status_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndefect_status_name);
                this.columnstock_out_date = new global::System.Data.DataColumn("stock_out_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstock_out_date);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columncolor_name = new global::System.Data.DataColumn("color_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor_name);
                this.columnsize_name = new global::System.Data.DataColumn("size_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsize_name);
                this.columnquantity = new global::System.Data.DataColumn("quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantity);
                this.columndest_department_name = new global::System.Data.DataColumn("dest_department_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndest_department_name);
                this.columnprice = new global::System.Data.DataColumn("price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columndepartment_id,
                                this.columnstock_out_id}, true));
                this.columntype_name.MaxLength = 500;
                this.columndepartment_id.AllowDBNull = false;
                this.columndepartment_name.MaxLength = 500;
                this.columnaddress.MaxLength = 500;
                this.columnstock_out_id.AllowDBNull = false;
                this.columndefect_status_name.AllowDBNull = false;
                this.columndefect_status_name.MaxLength = 200;
                this.columnstock_out_date.MaxLength = 10;
                this.columnproduct_id.AllowDBNull = false;
                this.columnproduct_id.MaxLength = 20;
                this.columnproduct_name.MaxLength = 500;
                this.columncolor_name.MaxLength = 500;
                this.columnsize_name.MaxLength = 500;
                this.columndest_department_name.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentStockOutRow NewDepartmentStockOutRow() {
                return ((DepartmentStockOutRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DepartmentStockOutRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DepartmentStockOutRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DepartmentStockOutRowChanged != null)) {
                    this.DepartmentStockOutRowChanged(this, new DepartmentStockOutRowChangeEvent(((DepartmentStockOutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DepartmentStockOutRowChanging != null)) {
                    this.DepartmentStockOutRowChanging(this, new DepartmentStockOutRowChangeEvent(((DepartmentStockOutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DepartmentStockOutRowDeleted != null)) {
                    this.DepartmentStockOutRowDeleted(this, new DepartmentStockOutRowChangeEvent(((DepartmentStockOutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DepartmentStockOutRowDeleting != null)) {
                    this.DepartmentStockOutRowDeleting(this, new DepartmentStockOutRowChangeEvent(((DepartmentStockOutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDepartmentStockOutRow(DepartmentStockOutRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DepartmentStockOutDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AllDepartmentPurchaseOrderReportDataTable : global::System.Data.TypedTableBase<AllDepartmentPurchaseOrderReportRow> {
            
            private global::System.Data.DataColumn columnworking_date;
            
            private global::System.Data.DataColumn columnpoid;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columncolor_name;
            
            private global::System.Data.DataColumn columnsize_name;
            
            private global::System.Data.DataColumn columntype_name;
            
            private global::System.Data.DataColumn columndepartment_name;
            
            private global::System.Data.DataColumn columnsellqty;
            
            private global::System.Data.DataColumn columnsellamount;
            
            private global::System.Data.DataColumn columnretqty;
            
            private global::System.Data.DataColumn columnretamount;
            
            private global::System.Data.DataColumn columnissue_date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AllDepartmentPurchaseOrderReportDataTable() {
                this.TableName = "AllDepartmentPurchaseOrderReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AllDepartmentPurchaseOrderReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AllDepartmentPurchaseOrderReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn working_dateColumn {
                get {
                    return this.columnworking_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn poidColumn {
                get {
                    return this.columnpoid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn color_nameColumn {
                get {
                    return this.columncolor_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn size_nameColumn {
                get {
                    return this.columnsize_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_nameColumn {
                get {
                    return this.columntype_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn department_nameColumn {
                get {
                    return this.columndepartment_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sellqtyColumn {
                get {
                    return this.columnsellqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sellamountColumn {
                get {
                    return this.columnsellamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn retqtyColumn {
                get {
                    return this.columnretqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn retamountColumn {
                get {
                    return this.columnretamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn issue_dateColumn {
                get {
                    return this.columnissue_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AllDepartmentPurchaseOrderReportRow this[int index] {
                get {
                    return ((AllDepartmentPurchaseOrderReportRow)(this.Rows[index]));
                }
            }
            
            public event AllDepartmentPurchaseOrderReportRowChangeEventHandler AllDepartmentPurchaseOrderReportRowChanging;
            
            public event AllDepartmentPurchaseOrderReportRowChangeEventHandler AllDepartmentPurchaseOrderReportRowChanged;
            
            public event AllDepartmentPurchaseOrderReportRowChangeEventHandler AllDepartmentPurchaseOrderReportRowDeleting;
            
            public event AllDepartmentPurchaseOrderReportRowChangeEventHandler AllDepartmentPurchaseOrderReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAllDepartmentPurchaseOrderReportRow(AllDepartmentPurchaseOrderReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AllDepartmentPurchaseOrderReportRow AddAllDepartmentPurchaseOrderReportRow(string working_date, string poid, string product_name, string color_name, string size_name, string type_name, string department_name, decimal sellqty, decimal sellamount, decimal retqty, decimal retamount, string issue_date) {
                AllDepartmentPurchaseOrderReportRow rowAllDepartmentPurchaseOrderReportRow = ((AllDepartmentPurchaseOrderReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        working_date,
                        poid,
                        product_name,
                        color_name,
                        size_name,
                        type_name,
                        department_name,
                        sellqty,
                        sellamount,
                        retqty,
                        retamount,
                        issue_date};
                rowAllDepartmentPurchaseOrderReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAllDepartmentPurchaseOrderReportRow);
                return rowAllDepartmentPurchaseOrderReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AllDepartmentPurchaseOrderReportDataTable cln = ((AllDepartmentPurchaseOrderReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AllDepartmentPurchaseOrderReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnworking_date = base.Columns["working_date"];
                this.columnpoid = base.Columns["poid"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columncolor_name = base.Columns["color_name"];
                this.columnsize_name = base.Columns["size_name"];
                this.columntype_name = base.Columns["type_name"];
                this.columndepartment_name = base.Columns["department_name"];
                this.columnsellqty = base.Columns["sellqty"];
                this.columnsellamount = base.Columns["sellamount"];
                this.columnretqty = base.Columns["retqty"];
                this.columnretamount = base.Columns["retamount"];
                this.columnissue_date = base.Columns["issue_date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnworking_date = new global::System.Data.DataColumn("working_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnworking_date);
                this.columnpoid = new global::System.Data.DataColumn("poid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpoid);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columncolor_name = new global::System.Data.DataColumn("color_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor_name);
                this.columnsize_name = new global::System.Data.DataColumn("size_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsize_name);
                this.columntype_name = new global::System.Data.DataColumn("type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_name);
                this.columndepartment_name = new global::System.Data.DataColumn("department_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_name);
                this.columnsellqty = new global::System.Data.DataColumn("sellqty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsellqty);
                this.columnsellamount = new global::System.Data.DataColumn("sellamount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsellamount);
                this.columnretqty = new global::System.Data.DataColumn("retqty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnretqty);
                this.columnretamount = new global::System.Data.DataColumn("retamount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnretamount);
                this.columnissue_date = new global::System.Data.DataColumn("issue_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnissue_date);
                this.columnworking_date.MaxLength = 10;
                this.columnpoid.AllowDBNull = false;
                this.columnpoid.MaxLength = 20;
                this.columnproduct_name.MaxLength = 500;
                this.columncolor_name.MaxLength = 500;
                this.columnsize_name.MaxLength = 500;
                this.columntype_name.MaxLength = 500;
                this.columndepartment_name.MaxLength = 500;
                this.columnissue_date.MaxLength = 19;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AllDepartmentPurchaseOrderReportRow NewAllDepartmentPurchaseOrderReportRow() {
                return ((AllDepartmentPurchaseOrderReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AllDepartmentPurchaseOrderReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AllDepartmentPurchaseOrderReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AllDepartmentPurchaseOrderReportRowChanged != null)) {
                    this.AllDepartmentPurchaseOrderReportRowChanged(this, new AllDepartmentPurchaseOrderReportRowChangeEvent(((AllDepartmentPurchaseOrderReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AllDepartmentPurchaseOrderReportRowChanging != null)) {
                    this.AllDepartmentPurchaseOrderReportRowChanging(this, new AllDepartmentPurchaseOrderReportRowChangeEvent(((AllDepartmentPurchaseOrderReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AllDepartmentPurchaseOrderReportRowDeleted != null)) {
                    this.AllDepartmentPurchaseOrderReportRowDeleted(this, new AllDepartmentPurchaseOrderReportRowChangeEvent(((AllDepartmentPurchaseOrderReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AllDepartmentPurchaseOrderReportRowDeleting != null)) {
                    this.AllDepartmentPurchaseOrderReportRowDeleting(this, new AllDepartmentPurchaseOrderReportRowChangeEvent(((AllDepartmentPurchaseOrderReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAllDepartmentPurchaseOrderReportRow(AllDepartmentPurchaseOrderReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AllDepartmentPurchaseOrderReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockEvaluationReportDataTable : global::System.Data.TypedTableBase<StockEvaluationReportRow> {
            
            private global::System.Data.DataColumn columnTYPE_ID;
            
            private global::System.Data.DataColumn columnTYPE_NAME;
            
            private global::System.Data.DataColumn columnPRODUCT_MASTER_ID;
            
            private global::System.Data.DataColumn columnPRODUCT_NAME;
            
            private global::System.Data.DataColumn columnCOLOR_NAME;
            
            private global::System.Data.DataColumn columnSIZE_NAME;
            
            private global::System.Data.DataColumn columnQUANTITY;
            
            private global::System.Data.DataColumn columnGOODQUANTITY;
            
            private global::System.Data.DataColumn columnREALQUANTITY;
            
            private global::System.Data.DataColumn columnCREATE_DATE;
            
            private global::System.Data.DataColumn columnDEPARTMENT_ID;
            
            private global::System.Data.DataColumn columnDEPARTMENT_NAME;
            
            private global::System.Data.DataColumn columnPRODUCT_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockEvaluationReportDataTable() {
                this.TableName = "StockEvaluationReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockEvaluationReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StockEvaluationReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TYPE_IDColumn {
                get {
                    return this.columnTYPE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TYPE_NAMEColumn {
                get {
                    return this.columnTYPE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_MASTER_IDColumn {
                get {
                    return this.columnPRODUCT_MASTER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_NAMEColumn {
                get {
                    return this.columnPRODUCT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COLOR_NAMEColumn {
                get {
                    return this.columnCOLOR_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIZE_NAMEColumn {
                get {
                    return this.columnSIZE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QUANTITYColumn {
                get {
                    return this.columnQUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GOODQUANTITYColumn {
                get {
                    return this.columnGOODQUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REALQUANTITYColumn {
                get {
                    return this.columnREALQUANTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DATEColumn {
                get {
                    return this.columnCREATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPARTMENT_IDColumn {
                get {
                    return this.columnDEPARTMENT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPARTMENT_NAMEColumn {
                get {
                    return this.columnDEPARTMENT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_IDColumn {
                get {
                    return this.columnPRODUCT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockEvaluationReportRow this[int index] {
                get {
                    return ((StockEvaluationReportRow)(this.Rows[index]));
                }
            }
            
            public event StockEvaluationReportRowChangeEventHandler StockEvaluationReportRowChanging;
            
            public event StockEvaluationReportRowChangeEventHandler StockEvaluationReportRowChanged;
            
            public event StockEvaluationReportRowChangeEventHandler StockEvaluationReportRowDeleting;
            
            public event StockEvaluationReportRowChangeEventHandler StockEvaluationReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStockEvaluationReportRow(StockEvaluationReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockEvaluationReportRow AddStockEvaluationReportRow(uint TYPE_ID, string TYPE_NAME, string PRODUCT_MASTER_ID, string PRODUCT_NAME, string COLOR_NAME, string SIZE_NAME, decimal QUANTITY, decimal GOODQUANTITY, int REALQUANTITY, System.DateTime CREATE_DATE, uint DEPARTMENT_ID, string DEPARTMENT_NAME, string PRODUCT_ID) {
                StockEvaluationReportRow rowStockEvaluationReportRow = ((StockEvaluationReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TYPE_ID,
                        TYPE_NAME,
                        PRODUCT_MASTER_ID,
                        PRODUCT_NAME,
                        COLOR_NAME,
                        SIZE_NAME,
                        QUANTITY,
                        GOODQUANTITY,
                        REALQUANTITY,
                        CREATE_DATE,
                        DEPARTMENT_ID,
                        DEPARTMENT_NAME,
                        PRODUCT_ID};
                rowStockEvaluationReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStockEvaluationReportRow);
                return rowStockEvaluationReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockEvaluationReportRow FindByPRODUCT_IDCREATE_DATEDEPARTMENT_ID(string PRODUCT_ID, System.DateTime CREATE_DATE, uint DEPARTMENT_ID) {
                return ((StockEvaluationReportRow)(this.Rows.Find(new object[] {
                            PRODUCT_ID,
                            CREATE_DATE,
                            DEPARTMENT_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StockEvaluationReportDataTable cln = ((StockEvaluationReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StockEvaluationReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTYPE_ID = base.Columns["TYPE_ID"];
                this.columnTYPE_NAME = base.Columns["TYPE_NAME"];
                this.columnPRODUCT_MASTER_ID = base.Columns["PRODUCT_MASTER_ID"];
                this.columnPRODUCT_NAME = base.Columns["PRODUCT_NAME"];
                this.columnCOLOR_NAME = base.Columns["COLOR_NAME"];
                this.columnSIZE_NAME = base.Columns["SIZE_NAME"];
                this.columnQUANTITY = base.Columns["QUANTITY"];
                this.columnGOODQUANTITY = base.Columns["GOODQUANTITY"];
                this.columnREALQUANTITY = base.Columns["REALQUANTITY"];
                this.columnCREATE_DATE = base.Columns["CREATE_DATE"];
                this.columnDEPARTMENT_ID = base.Columns["DEPARTMENT_ID"];
                this.columnDEPARTMENT_NAME = base.Columns["DEPARTMENT_NAME"];
                this.columnPRODUCT_ID = base.Columns["PRODUCT_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTYPE_ID = new global::System.Data.DataColumn("TYPE_ID", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_ID);
                this.columnTYPE_NAME = new global::System.Data.DataColumn("TYPE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_NAME);
                this.columnPRODUCT_MASTER_ID = new global::System.Data.DataColumn("PRODUCT_MASTER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_MASTER_ID);
                this.columnPRODUCT_NAME = new global::System.Data.DataColumn("PRODUCT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_NAME);
                this.columnCOLOR_NAME = new global::System.Data.DataColumn("COLOR_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLOR_NAME);
                this.columnSIZE_NAME = new global::System.Data.DataColumn("SIZE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIZE_NAME);
                this.columnQUANTITY = new global::System.Data.DataColumn("QUANTITY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUANTITY);
                this.columnGOODQUANTITY = new global::System.Data.DataColumn("GOODQUANTITY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGOODQUANTITY);
                this.columnREALQUANTITY = new global::System.Data.DataColumn("REALQUANTITY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREALQUANTITY);
                this.columnCREATE_DATE = new global::System.Data.DataColumn("CREATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DATE);
                this.columnDEPARTMENT_ID = new global::System.Data.DataColumn("DEPARTMENT_ID", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPARTMENT_ID);
                this.columnDEPARTMENT_NAME = new global::System.Data.DataColumn("DEPARTMENT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPARTMENT_NAME);
                this.columnPRODUCT_ID = new global::System.Data.DataColumn("PRODUCT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPRODUCT_ID,
                                this.columnCREATE_DATE,
                                this.columnDEPARTMENT_ID}, true));
                this.columnTYPE_NAME.MaxLength = 500;
                this.columnPRODUCT_MASTER_ID.MaxLength = 13;
                this.columnPRODUCT_NAME.MaxLength = 500;
                this.columnCOLOR_NAME.MaxLength = 500;
                this.columnSIZE_NAME.MaxLength = 500;
                this.columnREALQUANTITY.AllowDBNull = false;
                this.columnCREATE_DATE.AllowDBNull = false;
                this.columnDEPARTMENT_ID.AllowDBNull = false;
                this.columnDEPARTMENT_NAME.MaxLength = 500;
                this.columnPRODUCT_ID.AllowDBNull = false;
                this.columnPRODUCT_ID.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockEvaluationReportRow NewStockEvaluationReportRow() {
                return ((StockEvaluationReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StockEvaluationReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StockEvaluationReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockEvaluationReportRowChanged != null)) {
                    this.StockEvaluationReportRowChanged(this, new StockEvaluationReportRowChangeEvent(((StockEvaluationReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockEvaluationReportRowChanging != null)) {
                    this.StockEvaluationReportRowChanging(this, new StockEvaluationReportRowChangeEvent(((StockEvaluationReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockEvaluationReportRowDeleted != null)) {
                    this.StockEvaluationReportRowDeleted(this, new StockEvaluationReportRowChangeEvent(((StockEvaluationReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockEvaluationReportRowDeleting != null)) {
                    this.StockEvaluationReportRowDeleting(this, new StockEvaluationReportRowChangeEvent(((StockEvaluationReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStockEvaluationReportRow(StockEvaluationReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockEvaluationReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ExtraCustomizeDepartmentReportDataTable : global::System.Data.TypedTableBase<ExtraCustomizeDepartmentReportRow> {
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExtraCustomizeDepartmentReportDataTable() {
                this.TableName = "ExtraCustomizeDepartmentReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ExtraCustomizeDepartmentReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ExtraCustomizeDepartmentReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExtraCustomizeDepartmentReportRow this[int index] {
                get {
                    return ((ExtraCustomizeDepartmentReportRow)(this.Rows[index]));
                }
            }
            
            public event ExtraCustomizeDepartmentReportRowChangeEventHandler ExtraCustomizeDepartmentReportRowChanging;
            
            public event ExtraCustomizeDepartmentReportRowChangeEventHandler ExtraCustomizeDepartmentReportRowChanged;
            
            public event ExtraCustomizeDepartmentReportRowChangeEventHandler ExtraCustomizeDepartmentReportRowDeleting;
            
            public event ExtraCustomizeDepartmentReportRowChangeEventHandler ExtraCustomizeDepartmentReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddExtraCustomizeDepartmentReportRow(ExtraCustomizeDepartmentReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExtraCustomizeDepartmentReportRow AddExtraCustomizeDepartmentReportRow() {
                ExtraCustomizeDepartmentReportRow rowExtraCustomizeDepartmentReportRow = ((ExtraCustomizeDepartmentReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[0];
                rowExtraCustomizeDepartmentReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowExtraCustomizeDepartmentReportRow);
                return rowExtraCustomizeDepartmentReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ExtraCustomizeDepartmentReportDataTable cln = ((ExtraCustomizeDepartmentReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ExtraCustomizeDepartmentReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExtraCustomizeDepartmentReportRow NewExtraCustomizeDepartmentReportRow() {
                return ((ExtraCustomizeDepartmentReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ExtraCustomizeDepartmentReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ExtraCustomizeDepartmentReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ExtraCustomizeDepartmentReportRowChanged != null)) {
                    this.ExtraCustomizeDepartmentReportRowChanged(this, new ExtraCustomizeDepartmentReportRowChangeEvent(((ExtraCustomizeDepartmentReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ExtraCustomizeDepartmentReportRowChanging != null)) {
                    this.ExtraCustomizeDepartmentReportRowChanging(this, new ExtraCustomizeDepartmentReportRowChangeEvent(((ExtraCustomizeDepartmentReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ExtraCustomizeDepartmentReportRowDeleted != null)) {
                    this.ExtraCustomizeDepartmentReportRowDeleted(this, new ExtraCustomizeDepartmentReportRowChangeEvent(((ExtraCustomizeDepartmentReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ExtraCustomizeDepartmentReportRowDeleting != null)) {
                    this.ExtraCustomizeDepartmentReportRowDeleting(this, new ExtraCustomizeDepartmentReportRowChangeEvent(((ExtraCustomizeDepartmentReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveExtraCustomizeDepartmentReportRow(ExtraCustomizeDepartmentReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                posDataSet ds = new posDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ExtraCustomizeDepartmentReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class reStockinProductRow : global::System.Data.DataRow {
            
            private reStockinProductDataTable tablereStockinProduct;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal reStockinProductRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablereStockinProduct = ((reStockinProductDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_name {
                get {
                    try {
                        return ((string)(this[this.tablereStockinProduct.type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_name\' in table \'reStockinProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereStockinProduct.type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tablereStockinProduct.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'reStockinProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereStockinProduct.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STOCK_IN_ID {
                get {
                    return ((string)(this[this.tablereStockinProduct.STOCK_IN_IDColumn]));
                }
                set {
                    this[this.tablereStockinProduct.STOCK_IN_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime STOCK_IN_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablereStockinProduct.STOCK_IN_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK_IN_DATE\' in table \'reStockinProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereStockinProduct.STOCK_IN_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_ID {
                get {
                    return ((string)(this[this.tablereStockinProduct.PRODUCT_IDColumn]));
                }
                set {
                    this[this.tablereStockinProduct.PRODUCT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint QUANTITY {
                get {
                    try {
                        return ((uint)(this[this.tablereStockinProduct.QUANTITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QUANTITY\' in table \'reStockinProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereStockinProduct.QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint PRICE {
                get {
                    try {
                        return ((uint)(this[this.tablereStockinProduct.PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRICE\' in table \'reStockinProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereStockinProduct.PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype_nameNull() {
                return this.IsNull(this.tablereStockinProduct.type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype_nameNull() {
                this[this.tablereStockinProduct.type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tablereStockinProduct.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tablereStockinProduct.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTOCK_IN_DATENull() {
                return this.IsNull(this.tablereStockinProduct.STOCK_IN_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTOCK_IN_DATENull() {
                this[this.tablereStockinProduct.STOCK_IN_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQUANTITYNull() {
                return this.IsNull(this.tablereStockinProduct.QUANTITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQUANTITYNull() {
                this[this.tablereStockinProduct.QUANTITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRICENull() {
                return this.IsNull(this.tablereStockinProduct.PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRICENull() {
                this[this.tablereStockinProduct.PRICEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class purchaseOrderRow : global::System.Data.DataRow {
            
            private purchaseOrderDataTable tablepurchaseOrder;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal purchaseOrderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepurchaseOrder = ((purchaseOrderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PURCHASE_ORDER_ID {
                get {
                    return ((string)(this[this.tablepurchaseOrder.PURCHASE_ORDER_IDColumn]));
                }
                set {
                    this[this.tablepurchaseOrder.PURCHASE_ORDER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TYPE_NAME {
                get {
                    try {
                        return ((string)(this[this.tablepurchaseOrder.TYPE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYPE_NAME\' in table \'purchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchaseOrder.TYPE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_NAME {
                get {
                    try {
                        return ((string)(this[this.tablepurchaseOrder.PRODUCT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT_NAME\' in table \'purchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchaseOrder.PRODUCT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_id {
                get {
                    try {
                        return ((string)(this[this.tablepurchaseOrder.product_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_id\' in table \'purchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchaseOrder.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Quantity {
                get {
                    try {
                        return ((decimal)(this[this.tablepurchaseOrder.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'purchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchaseOrder.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Price {
                get {
                    try {
                        return ((decimal)(this[this.tablepurchaseOrder.PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Price\' in table \'purchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchaseOrder.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color_name {
                get {
                    try {
                        return ((string)(this[this.tablepurchaseOrder.color_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color_name\' in table \'purchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchaseOrder.color_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string size_name {
                get {
                    try {
                        return ((string)(this[this.tablepurchaseOrder.size_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'size_name\' in table \'purchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchaseOrder.size_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string department_name {
                get {
                    try {
                        return ((string)(this[this.tablepurchaseOrder.department_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'department_name\' in table \'purchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchaseOrder.department_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address {
                get {
                    try {
                        return ((string)(this[this.tablepurchaseOrder.addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'address\' in table \'purchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchaseOrder.addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _date_format_purchase_order_CREATE_DATE____d__m__Y__ {
                get {
                    try {
                        return ((string)(this[this.tablepurchaseOrder._date_format_purchase_order_CREATE_DATE____d__m__Y__Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'date_format(purchase_order_CREATE_DATE, \'%d/%m/%Y\')\' in tab" +
                                "le \'purchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchaseOrder._date_format_purchase_order_CREATE_DATE____d__m__Y__Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTYPE_NAMENull() {
                return this.IsNull(this.tablepurchaseOrder.TYPE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTYPE_NAMENull() {
                this[this.tablepurchaseOrder.TYPE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCT_NAMENull() {
                return this.IsNull(this.tablepurchaseOrder.PRODUCT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCT_NAMENull() {
                this[this.tablepurchaseOrder.PRODUCT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_idNull() {
                return this.IsNull(this.tablepurchaseOrder.product_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_idNull() {
                this[this.tablepurchaseOrder.product_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tablepurchaseOrder.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tablepurchaseOrder.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceNull() {
                return this.IsNull(this.tablepurchaseOrder.PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceNull() {
                this[this.tablepurchaseOrder.PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscolor_nameNull() {
                return this.IsNull(this.tablepurchaseOrder.color_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcolor_nameNull() {
                this[this.tablepurchaseOrder.color_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issize_nameNull() {
                return this.IsNull(this.tablepurchaseOrder.size_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsize_nameNull() {
                this[this.tablepurchaseOrder.size_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdepartment_nameNull() {
                return this.IsNull(this.tablepurchaseOrder.department_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdepartment_nameNull() {
                this[this.tablepurchaseOrder.department_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaddressNull() {
                return this.IsNull(this.tablepurchaseOrder.addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaddressNull() {
                this[this.tablepurchaseOrder.addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_date_format_purchase_order_CREATE_DATE____d__m__Y__Null() {
                return this.IsNull(this.tablepurchaseOrder._date_format_purchase_order_CREATE_DATE____d__m__Y__Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_date_format_purchase_order_CREATE_DATE____d__m__Y__Null() {
                this[this.tablepurchaseOrder._date_format_purchase_order_CREATE_DATE____d__m__Y__Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class purchaseDetailsRow : global::System.Data.DataRow {
            
            private purchaseDetailsDataTable tablepurchaseDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal purchaseDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepurchaseDetails = ((purchaseDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PURCHASE_ORDER_ID {
                get {
                    return ((string)(this[this.tablepurchaseDetails.PURCHASE_ORDER_IDColumn]));
                }
                set {
                    this[this.tablepurchaseDetails.PURCHASE_ORDER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablepurchaseDetails.CREATE_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CREATE_DATE\' in table \'purchaseDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchaseDetails.CREATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_name {
                get {
                    try {
                        return ((string)(this[this.tablepurchaseDetails.type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_name\' in table \'purchaseDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchaseDetails.type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_ID {
                get {
                    try {
                        return ((string)(this[this.tablepurchaseDetails.PRODUCT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT_ID\' in table \'purchaseDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchaseDetails.PRODUCT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tablepurchaseDetails.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'purchaseDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchaseDetails.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color_name {
                get {
                    try {
                        return ((string)(this[this.tablepurchaseDetails.color_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color_name\' in table \'purchaseDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchaseDetails.color_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string size_name {
                get {
                    try {
                        return ((string)(this[this.tablepurchaseDetails.size_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'size_name\' in table \'purchaseDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchaseDetails.size_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint QUANTITY {
                get {
                    try {
                        return ((uint)(this[this.tablepurchaseDetails.QUANTITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QUANTITY\' in table \'purchaseDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchaseDetails.QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint PRICE {
                get {
                    try {
                        return ((uint)(this[this.tablepurchaseDetails.PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRICE\' in table \'purchaseDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchaseDetails.PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_DATENull() {
                return this.IsNull(this.tablepurchaseDetails.CREATE_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_DATENull() {
                this[this.tablepurchaseDetails.CREATE_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype_nameNull() {
                return this.IsNull(this.tablepurchaseDetails.type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype_nameNull() {
                this[this.tablepurchaseDetails.type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCT_IDNull() {
                return this.IsNull(this.tablepurchaseDetails.PRODUCT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCT_IDNull() {
                this[this.tablepurchaseDetails.PRODUCT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tablepurchaseDetails.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tablepurchaseDetails.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscolor_nameNull() {
                return this.IsNull(this.tablepurchaseDetails.color_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcolor_nameNull() {
                this[this.tablepurchaseDetails.color_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issize_nameNull() {
                return this.IsNull(this.tablepurchaseDetails.size_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsize_nameNull() {
                this[this.tablepurchaseDetails.size_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQUANTITYNull() {
                return this.IsNull(this.tablepurchaseDetails.QUANTITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQUANTITYNull() {
                this[this.tablepurchaseDetails.QUANTITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRICENull() {
                return this.IsNull(this.tablepurchaseDetails.PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRICENull() {
                this[this.tablepurchaseDetails.PRICEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TmpStockoutRow : global::System.Data.DataRow {
            
            private TmpStockoutDataTable tableTmpStockout;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TmpStockoutRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTmpStockout = ((TmpStockoutDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint stockout_id {
                get {
                    return ((uint)(this[this.tableTmpStockout.stockout_idColumn]));
                }
                set {
                    this[this.tableTmpStockout.stockout_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime stock_out_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTmpStockout.stock_out_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'stock_out_date\' in table \'TmpStockout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTmpStockout.stock_out_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_name {
                get {
                    try {
                        return ((string)(this[this.tableTmpStockout.type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_name\' in table \'TmpStockout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTmpStockout.type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_id {
                get {
                    return ((string)(this[this.tableTmpStockout.product_idColumn]));
                }
                set {
                    this[this.tableTmpStockout.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tableTmpStockout.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'TmpStockout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTmpStockout.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint quantity {
                get {
                    try {
                        return ((uint)(this[this.tableTmpStockout.quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'quantity\' in table \'TmpStockout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTmpStockout.quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstock_out_dateNull() {
                return this.IsNull(this.tableTmpStockout.stock_out_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstock_out_dateNull() {
                this[this.tableTmpStockout.stock_out_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype_nameNull() {
                return this.IsNull(this.tableTmpStockout.type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype_nameNull() {
                this[this.tableTmpStockout.type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tableTmpStockout.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tableTmpStockout.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsquantityNull() {
                return this.IsNull(this.tableTmpStockout.quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetquantityNull() {
                this[this.tableTmpStockout.quantityColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class supplierStockoutRow : global::System.Data.DataRow {
            
            private supplierStockoutDataTable tablesupplierStockout;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal supplierStockoutRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesupplierStockout = ((supplierStockoutDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_name {
                get {
                    try {
                        return ((string)(this[this.tablesupplierStockout.type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_name\' in table \'supplierStockout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesupplierStockout.type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tablesupplierStockout.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'supplierStockout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesupplierStockout.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal quantity {
                get {
                    try {
                        return ((decimal)(this[this.tablesupplierStockout.quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'quantity\' in table \'supplierStockout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesupplierStockout.quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint STOCKOUT_ID {
                get {
                    return ((uint)(this[this.tablesupplierStockout.STOCKOUT_IDColumn]));
                }
                set {
                    this[this.tablesupplierStockout.STOCKOUT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime STOCK_OUT_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablesupplierStockout.STOCK_OUT_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK_OUT_DATE\' in table \'supplierStockout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesupplierStockout.STOCK_OUT_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_ID {
                get {
                    return ((string)(this[this.tablesupplierStockout.PRODUCT_IDColumn]));
                }
                set {
                    this[this.tablesupplierStockout.PRODUCT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEFECT_STATUS_NAME {
                get {
                    return ((string)(this[this.tablesupplierStockout.DEFECT_STATUS_NAMEColumn]));
                }
                set {
                    this[this.tablesupplierStockout.DEFECT_STATUS_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype_nameNull() {
                return this.IsNull(this.tablesupplierStockout.type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype_nameNull() {
                this[this.tablesupplierStockout.type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tablesupplierStockout.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tablesupplierStockout.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsquantityNull() {
                return this.IsNull(this.tablesupplierStockout.quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetquantityNull() {
                this[this.tablesupplierStockout.quantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTOCK_OUT_DATENull() {
                return this.IsNull(this.tablesupplierStockout.STOCK_OUT_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTOCK_OUT_DATENull() {
                this[this.tablesupplierStockout.STOCK_OUT_DATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StockStatisticRow : global::System.Data.DataRow {
            
            private StockStatisticDataTable tableStockStatistic;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockStatisticRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStockStatistic = ((StockStatisticDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal error_qty {
                get {
                    try {
                        return ((decimal)(this[this.tableStockStatistic.error_qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'error_qty\' in table \'StockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockStatistic.error_qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal prestk_qty {
                get {
                    try {
                        return ((decimal)(this[this.tableStockStatistic.prestk_qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'prestk_qty\' in table \'StockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockStatistic.prestk_qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal instock_qty {
                get {
                    try {
                        return ((decimal)(this[this.tableStockStatistic.instock_qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'instock_qty\' in table \'StockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockStatistic.instock_qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal dmg_qty {
                get {
                    try {
                        return ((decimal)(this[this.tableStockStatistic.dmg_qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dmg_qty\' in table \'StockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockStatistic.dmg_qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal stkout_qty {
                get {
                    try {
                        return ((decimal)(this[this.tableStockStatistic.stkout_qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'stkout_qty\' in table \'StockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockStatistic.stkout_qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal tmpout_qty {
                get {
                    try {
                        return ((decimal)(this[this.tableStockStatistic.tmpout_qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tmpout_qty\' in table \'StockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockStatistic.tmpout_qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal rtn_qty {
                get {
                    try {
                        return ((decimal)(this[this.tableStockStatistic.rtn_qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rtn_qty\' in table \'StockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockStatistic.rtn_qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal destroy_qty {
                get {
                    try {
                        return ((decimal)(this[this.tableStockStatistic.destroy_qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'destroy_qty\' in table \'StockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockStatistic.destroy_qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal realstock {
                get {
                    try {
                        return ((decimal)(this[this.tableStockStatistic.realstockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'realstock\' in table \'StockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockStatistic.realstockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal mainrtnqty {
                get {
                    try {
                        return ((decimal)(this[this.tableStockStatistic.mainrtnqtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mainrtnqty\' in table \'StockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockStatistic.mainrtnqtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TYPE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableStockStatistic.TYPE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYPE_NAME\' in table \'StockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockStatistic.TYPE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_ID {
                get {
                    return ((string)(this[this.tableStockStatistic.PRODUCT_IDColumn]));
                }
                set {
                    this[this.tableStockStatistic.PRODUCT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COLOR_NAME {
                get {
                    try {
                        return ((string)(this[this.tableStockStatistic.COLOR_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLOR_NAME\' in table \'StockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockStatistic.COLOR_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SIZE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableStockStatistic.SIZE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIZE_NAME\' in table \'StockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockStatistic.SIZE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_name {
                get {
                    try {
                        return ((string)(this[this.tableStockStatistic.type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_name\' in table \'StockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockStatistic.type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_id {
                get {
                    return ((string)(this[this.tableStockStatistic.product_idColumn]));
                }
                set {
                    this[this.tableStockStatistic.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tableStockStatistic.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'StockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockStatistic.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color_name {
                get {
                    try {
                        return ((string)(this[this.tableStockStatistic.color_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color_name\' in table \'StockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockStatistic.color_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string size_name {
                get {
                    try {
                        return ((string)(this[this.tableStockStatistic.size_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'size_name\' in table \'StockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockStatistic.size_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iserror_qtyNull() {
                return this.IsNull(this.tableStockStatistic.error_qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Seterror_qtyNull() {
                this[this.tableStockStatistic.error_qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprestk_qtyNull() {
                return this.IsNull(this.tableStockStatistic.prestk_qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprestk_qtyNull() {
                this[this.tableStockStatistic.prestk_qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isinstock_qtyNull() {
                return this.IsNull(this.tableStockStatistic.instock_qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setinstock_qtyNull() {
                this[this.tableStockStatistic.instock_qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdmg_qtyNull() {
                return this.IsNull(this.tableStockStatistic.dmg_qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdmg_qtyNull() {
                this[this.tableStockStatistic.dmg_qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstkout_qtyNull() {
                return this.IsNull(this.tableStockStatistic.stkout_qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstkout_qtyNull() {
                this[this.tableStockStatistic.stkout_qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istmpout_qtyNull() {
                return this.IsNull(this.tableStockStatistic.tmpout_qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settmpout_qtyNull() {
                this[this.tableStockStatistic.tmpout_qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrtn_qtyNull() {
                return this.IsNull(this.tableStockStatistic.rtn_qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrtn_qtyNull() {
                this[this.tableStockStatistic.rtn_qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdestroy_qtyNull() {
                return this.IsNull(this.tableStockStatistic.destroy_qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdestroy_qtyNull() {
                this[this.tableStockStatistic.destroy_qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrealstockNull() {
                return this.IsNull(this.tableStockStatistic.realstockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrealstockNull() {
                this[this.tableStockStatistic.realstockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmainrtnqtyNull() {
                return this.IsNull(this.tableStockStatistic.mainrtnqtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmainrtnqtyNull() {
                this[this.tableStockStatistic.mainrtnqtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTYPE_NAMENull() {
                return this.IsNull(this.tableStockStatistic.TYPE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTYPE_NAMENull() {
                this[this.tableStockStatistic.TYPE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOLOR_NAMENull() {
                return this.IsNull(this.tableStockStatistic.COLOR_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOLOR_NAMENull() {
                this[this.tableStockStatistic.COLOR_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIZE_NAMENull() {
                return this.IsNull(this.tableStockStatistic.SIZE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIZE_NAMENull() {
                this[this.tableStockStatistic.SIZE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype_nameNull() {
                return this.IsNull(this.tableStockStatistic.type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype_nameNull() {
                this[this.tableStockStatistic.type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tableStockStatistic.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tableStockStatistic.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscolor_nameNull() {
                return this.IsNull(this.tableStockStatistic.color_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcolor_nameNull() {
                this[this.tableStockStatistic.color_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issize_nameNull() {
                return this.IsNull(this.tableStockStatistic.size_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsize_nameNull() {
                this[this.tableStockStatistic.size_nameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class stockInRow : global::System.Data.DataRow {
            
            private stockInDataTable tablestockIn;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal stockInRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestockIn = ((stockInDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STOCK_IN_ID {
                get {
                    return ((string)(this[this.tablestockIn.STOCK_IN_IDColumn]));
                }
                set {
                    this[this.tablestockIn.STOCK_IN_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_name {
                get {
                    try {
                        return ((string)(this[this.tablestockIn.type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_name\' in table \'stockIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockIn.type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_ID {
                get {
                    return ((string)(this[this.tablestockIn.PRODUCT_IDColumn]));
                }
                set {
                    this[this.tablestockIn.PRODUCT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tablestockIn.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'stockIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockIn.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal quantity {
                get {
                    try {
                        return ((decimal)(this[this.tablestockIn.quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'quantity\' in table \'stockIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockIn.quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal price {
                get {
                    try {
                        return ((decimal)(this[this.tablestockIn.priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price\' in table \'stockIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockIn.priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color_name {
                get {
                    try {
                        return ((string)(this[this.tablestockIn.color_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color_name\' in table \'stockIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockIn.color_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string size_name {
                get {
                    try {
                        return ((string)(this[this.tablestockIn.size_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'size_name\' in table \'stockIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockIn.size_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stock_in_date {
                get {
                    try {
                        return ((string)(this[this.tablestockIn.stock_in_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'stock_in_date\' in table \'stockIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockIn.stock_in_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype_nameNull() {
                return this.IsNull(this.tablestockIn.type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype_nameNull() {
                this[this.tablestockIn.type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tablestockIn.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tablestockIn.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsquantityNull() {
                return this.IsNull(this.tablestockIn.quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetquantityNull() {
                this[this.tablestockIn.quantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspriceNull() {
                return this.IsNull(this.tablestockIn.priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpriceNull() {
                this[this.tablestockIn.priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscolor_nameNull() {
                return this.IsNull(this.tablestockIn.color_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcolor_nameNull() {
                this[this.tablestockIn.color_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issize_nameNull() {
                return this.IsNull(this.tablestockIn.size_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsize_nameNull() {
                this[this.tablestockIn.size_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstock_in_dateNull() {
                return this.IsNull(this.tablestockIn.stock_in_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstock_in_dateNull() {
                this[this.tablestockIn.stock_in_dateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class deptStockStatisticRow : global::System.Data.DataRow {
            
            private deptStockStatisticDataTable tabledeptStockStatistic;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal deptStockStatisticRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledeptStockStatistic = ((deptStockStatisticDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_name {
                get {
                    try {
                        return ((string)(this[this.tabledeptStockStatistic.type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_name\' in table \'deptStockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptStockStatistic.type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_id {
                get {
                    return ((string)(this[this.tabledeptStockStatistic.product_idColumn]));
                }
                set {
                    this[this.tabledeptStockStatistic.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tabledeptStockStatistic.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'deptStockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptStockStatistic.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal error_qty {
                get {
                    try {
                        return ((decimal)(this[this.tabledeptStockStatistic.error_qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'error_qty\' in table \'deptStockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptStockStatistic.error_qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color_name {
                get {
                    try {
                        return ((string)(this[this.tabledeptStockStatistic.color_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color_name\' in table \'deptStockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptStockStatistic.color_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string size_name {
                get {
                    try {
                        return ((string)(this[this.tabledeptStockStatistic.size_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'size_name\' in table \'deptStockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptStockStatistic.size_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal prestk_qty {
                get {
                    try {
                        return ((decimal)(this[this.tabledeptStockStatistic.prestk_qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'prestk_qty\' in table \'deptStockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptStockStatistic.prestk_qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal instock_qty {
                get {
                    try {
                        return ((decimal)(this[this.tabledeptStockStatistic.instock_qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'instock_qty\' in table \'deptStockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptStockStatistic.instock_qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal dmg_qty {
                get {
                    try {
                        return ((decimal)(this[this.tabledeptStockStatistic.dmg_qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dmg_qty\' in table \'deptStockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptStockStatistic.dmg_qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal stkout_qty {
                get {
                    try {
                        return ((decimal)(this[this.tabledeptStockStatistic.stkout_qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'stkout_qty\' in table \'deptStockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptStockStatistic.stkout_qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal tmpout_qty {
                get {
                    try {
                        return ((decimal)(this[this.tabledeptStockStatistic.tmpout_qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tmpout_qty\' in table \'deptStockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptStockStatistic.tmpout_qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal rtn_qty {
                get {
                    try {
                        return ((decimal)(this[this.tabledeptStockStatistic.rtn_qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rtn_qty\' in table \'deptStockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptStockStatistic.rtn_qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal destroy_qty {
                get {
                    try {
                        return ((decimal)(this[this.tabledeptStockStatistic.destroy_qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'destroy_qty\' in table \'deptStockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptStockStatistic.destroy_qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal realstock {
                get {
                    try {
                        return ((decimal)(this[this.tabledeptStockStatistic.realstockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'realstock\' in table \'deptStockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptStockStatistic.realstockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal bkpro {
                get {
                    try {
                        return ((decimal)(this[this.tabledeptStockStatistic.bkproColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bkpro\' in table \'deptStockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptStockStatistic.bkproColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string department_name {
                get {
                    try {
                        return ((string)(this[this.tabledeptStockStatistic.department_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'department_name\' in table \'deptStockStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptStockStatistic.department_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype_nameNull() {
                return this.IsNull(this.tabledeptStockStatistic.type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype_nameNull() {
                this[this.tabledeptStockStatistic.type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tabledeptStockStatistic.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tabledeptStockStatistic.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iserror_qtyNull() {
                return this.IsNull(this.tabledeptStockStatistic.error_qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Seterror_qtyNull() {
                this[this.tabledeptStockStatistic.error_qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscolor_nameNull() {
                return this.IsNull(this.tabledeptStockStatistic.color_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcolor_nameNull() {
                this[this.tabledeptStockStatistic.color_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issize_nameNull() {
                return this.IsNull(this.tabledeptStockStatistic.size_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsize_nameNull() {
                this[this.tabledeptStockStatistic.size_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprestk_qtyNull() {
                return this.IsNull(this.tabledeptStockStatistic.prestk_qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprestk_qtyNull() {
                this[this.tabledeptStockStatistic.prestk_qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isinstock_qtyNull() {
                return this.IsNull(this.tabledeptStockStatistic.instock_qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setinstock_qtyNull() {
                this[this.tabledeptStockStatistic.instock_qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdmg_qtyNull() {
                return this.IsNull(this.tabledeptStockStatistic.dmg_qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdmg_qtyNull() {
                this[this.tabledeptStockStatistic.dmg_qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstkout_qtyNull() {
                return this.IsNull(this.tabledeptStockStatistic.stkout_qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstkout_qtyNull() {
                this[this.tabledeptStockStatistic.stkout_qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istmpout_qtyNull() {
                return this.IsNull(this.tabledeptStockStatistic.tmpout_qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settmpout_qtyNull() {
                this[this.tabledeptStockStatistic.tmpout_qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrtn_qtyNull() {
                return this.IsNull(this.tabledeptStockStatistic.rtn_qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrtn_qtyNull() {
                this[this.tabledeptStockStatistic.rtn_qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdestroy_qtyNull() {
                return this.IsNull(this.tabledeptStockStatistic.destroy_qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdestroy_qtyNull() {
                this[this.tabledeptStockStatistic.destroy_qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrealstockNull() {
                return this.IsNull(this.tabledeptStockStatistic.realstockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrealstockNull() {
                this[this.tabledeptStockStatistic.realstockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbkproNull() {
                return this.IsNull(this.tabledeptStockStatistic.bkproColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbkproNull() {
                this[this.tabledeptStockStatistic.bkproColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdepartment_nameNull() {
                return this.IsNull(this.tabledeptStockStatistic.department_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdepartment_nameNull() {
                this[this.tabledeptStockStatistic.department_nameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class returnPOrderRow : global::System.Data.DataRow {
            
            private returnPOrderDataTable tablereturnPOrder;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal returnPOrderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablereturnPOrder = ((returnPOrderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_name {
                get {
                    try {
                        return ((string)(this[this.tablereturnPOrder.type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_name\' in table \'returnPOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereturnPOrder.type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tablereturnPOrder.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'returnPOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereturnPOrder.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color_name {
                get {
                    try {
                        return ((string)(this[this.tablereturnPOrder.color_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color_name\' in table \'returnPOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereturnPOrder.color_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string size_name {
                get {
                    try {
                        return ((string)(this[this.tablereturnPOrder.size_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'size_name\' in table \'returnPOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereturnPOrder.size_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal quantity {
                get {
                    try {
                        return ((decimal)(this[this.tablereturnPOrder.quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'quantity\' in table \'returnPOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereturnPOrder.quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string return_date {
                get {
                    try {
                        return ((string)(this[this.tablereturnPOrder.return_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'return_date\' in table \'returnPOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereturnPOrder.return_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int price {
                get {
                    try {
                        return ((int)(this[this.tablereturnPOrder.priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price\' in table \'returnPOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereturnPOrder.priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPARTMENT_NAME {
                get {
                    try {
                        return ((string)(this[this.tablereturnPOrder.DEPARTMENT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEPARTMENT_NAME\' in table \'returnPOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereturnPOrder.DEPARTMENT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tablereturnPOrder.ADDRESSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADDRESS\' in table \'returnPOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereturnPOrder.ADDRESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_ID {
                get {
                    try {
                        return ((string)(this[this.tablereturnPOrder.PRODUCT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT_ID\' in table \'returnPOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereturnPOrder.PRODUCT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PURCHASE_ORDER_ID {
                get {
                    return ((string)(this[this.tablereturnPOrder.PURCHASE_ORDER_IDColumn]));
                }
                set {
                    this[this.tablereturnPOrder.PURCHASE_ORDER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype_nameNull() {
                return this.IsNull(this.tablereturnPOrder.type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype_nameNull() {
                this[this.tablereturnPOrder.type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tablereturnPOrder.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tablereturnPOrder.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscolor_nameNull() {
                return this.IsNull(this.tablereturnPOrder.color_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcolor_nameNull() {
                this[this.tablereturnPOrder.color_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issize_nameNull() {
                return this.IsNull(this.tablereturnPOrder.size_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsize_nameNull() {
                this[this.tablereturnPOrder.size_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsquantityNull() {
                return this.IsNull(this.tablereturnPOrder.quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetquantityNull() {
                this[this.tablereturnPOrder.quantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isreturn_dateNull() {
                return this.IsNull(this.tablereturnPOrder.return_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setreturn_dateNull() {
                this[this.tablereturnPOrder.return_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspriceNull() {
                return this.IsNull(this.tablereturnPOrder.priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpriceNull() {
                this[this.tablereturnPOrder.priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPARTMENT_NAMENull() {
                return this.IsNull(this.tablereturnPOrder.DEPARTMENT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPARTMENT_NAMENull() {
                this[this.tablereturnPOrder.DEPARTMENT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDRESSNull() {
                return this.IsNull(this.tablereturnPOrder.ADDRESSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDRESSNull() {
                this[this.tablereturnPOrder.ADDRESSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCT_IDNull() {
                return this.IsNull(this.tablereturnPOrder.PRODUCT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCT_IDNull() {
                this[this.tablereturnPOrder.PRODUCT_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class departmentStockInRow : global::System.Data.DataRow {
            
            private departmentStockInDataTable tabledepartmentStockIn;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal departmentStockInRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledepartmentStockIn = ((departmentStockInDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_name {
                get {
                    try {
                        return ((string)(this[this.tabledepartmentStockIn.type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_name\' in table \'departmentStockIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledepartmentStockIn.type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint department_id {
                get {
                    return ((uint)(this[this.tabledepartmentStockIn.department_idColumn]));
                }
                set {
                    this[this.tabledepartmentStockIn.department_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string department_name {
                get {
                    try {
                        return ((string)(this[this.tabledepartmentStockIn.department_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'department_name\' in table \'departmentStockIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledepartmentStockIn.department_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stock_in_id {
                get {
                    return ((string)(this[this.tabledepartmentStockIn.stock_in_idColumn]));
                }
                set {
                    this[this.tabledepartmentStockIn.stock_in_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_id {
                get {
                    return ((string)(this[this.tabledepartmentStockIn.product_idColumn]));
                }
                set {
                    this[this.tabledepartmentStockIn.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tabledepartmentStockIn.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'departmentStockIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledepartmentStockIn.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal _sum_dstkdin_quantity_ {
                get {
                    try {
                        return ((decimal)(this[this.tabledepartmentStockIn._sum_dstkdin_quantity_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sum(dstkdin_quantity)\' in table \'departmentStockIn\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabledepartmentStockIn._sum_dstkdin_quantity_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal price {
                get {
                    try {
                        return ((decimal)(this[this.tabledepartmentStockIn.priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price\' in table \'departmentStockIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledepartmentStockIn.priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color_name {
                get {
                    try {
                        return ((string)(this[this.tabledepartmentStockIn.color_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color_name\' in table \'departmentStockIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledepartmentStockIn.color_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string size_name {
                get {
                    try {
                        return ((string)(this[this.tabledepartmentStockIn.size_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'size_name\' in table \'departmentStockIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledepartmentStockIn.size_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address {
                get {
                    try {
                        return ((string)(this[this.tabledepartmentStockIn.addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'address\' in table \'departmentStockIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledepartmentStockIn.addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stock_in_date {
                get {
                    try {
                        return ((string)(this[this.tabledepartmentStockIn.stock_in_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'stock_in_date\' in table \'departmentStockIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledepartmentStockIn.stock_in_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal quantity {
                get {
                    try {
                        return ((decimal)(this[this.tabledepartmentStockIn.quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'quantity\' in table \'departmentStockIn\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledepartmentStockIn.quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal _SUM_dstkdindet_quantity_ {
                get {
                    try {
                        return ((decimal)(this[this.tabledepartmentStockIn._SUM_dstkdindet_quantity_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SUM(dstkdindet_quantity)\' in table \'departmentStockIn\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tabledepartmentStockIn._SUM_dstkdindet_quantity_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype_nameNull() {
                return this.IsNull(this.tabledepartmentStockIn.type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype_nameNull() {
                this[this.tabledepartmentStockIn.type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdepartment_nameNull() {
                return this.IsNull(this.tabledepartmentStockIn.department_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdepartment_nameNull() {
                this[this.tabledepartmentStockIn.department_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tabledepartmentStockIn.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tabledepartmentStockIn.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_sum_dstkdin_quantity_Null() {
                return this.IsNull(this.tabledepartmentStockIn._sum_dstkdin_quantity_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_sum_dstkdin_quantity_Null() {
                this[this.tabledepartmentStockIn._sum_dstkdin_quantity_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspriceNull() {
                return this.IsNull(this.tabledepartmentStockIn.priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpriceNull() {
                this[this.tabledepartmentStockIn.priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscolor_nameNull() {
                return this.IsNull(this.tabledepartmentStockIn.color_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcolor_nameNull() {
                this[this.tabledepartmentStockIn.color_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issize_nameNull() {
                return this.IsNull(this.tabledepartmentStockIn.size_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsize_nameNull() {
                this[this.tabledepartmentStockIn.size_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaddressNull() {
                return this.IsNull(this.tabledepartmentStockIn.addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaddressNull() {
                this[this.tabledepartmentStockIn.addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstock_in_dateNull() {
                return this.IsNull(this.tabledepartmentStockIn.stock_in_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstock_in_dateNull() {
                this[this.tabledepartmentStockIn.stock_in_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsquantityNull() {
                return this.IsNull(this.tabledepartmentStockIn.quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetquantityNull() {
                this[this.tabledepartmentStockIn.quantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_SUM_dstkdindet_quantity_Null() {
                return this.IsNull(this.tabledepartmentStockIn._SUM_dstkdindet_quantity_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_SUM_dstkdindet_quantity_Null() {
                this[this.tabledepartmentStockIn._SUM_dstkdindet_quantity_Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class departmentRow : global::System.Data.DataRow {
            
            private departmentDataTable tabledepartment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal departmentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledepartment = ((departmentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint DEPARTMENT_ID {
                get {
                    return ((uint)(this[this.tabledepartment.DEPARTMENT_IDColumn]));
                }
                set {
                    this[this.tabledepartment.DEPARTMENT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPARTMENT_NAME {
                get {
                    try {
                        return ((string)(this[this.tabledepartment.DEPARTMENT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEPARTMENT_NAME\' in table \'department\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledepartment.DEPARTMENT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tabledepartment.ADDRESSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADDRESS\' in table \'department\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledepartment.ADDRESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint MANAGER_ID {
                get {
                    try {
                        return ((uint)(this[this.tabledepartment.MANAGER_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MANAGER_ID\' in table \'department\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledepartment.MANAGER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint ACTIVE {
                get {
                    try {
                        return ((uint)(this[this.tabledepartment.ACTIVEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACTIVE\' in table \'department\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledepartment.ACTIVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledepartment.CREATE_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CREATE_DATE\' in table \'department\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledepartment.CREATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_ID {
                get {
                    try {
                        return ((string)(this[this.tabledepartment.CREATE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CREATE_ID\' in table \'department\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledepartment.CREATE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UPDATE_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledepartment.UPDATE_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UPDATE_DATE\' in table \'department\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledepartment.UPDATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UPDATE_ID {
                get {
                    try {
                        return ((string)(this[this.tabledepartment.UPDATE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UPDATE_ID\' in table \'department\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledepartment.UPDATE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint EXCLUSIVE_KEY {
                get {
                    try {
                        return ((uint)(this[this.tabledepartment.EXCLUSIVE_KEYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXCLUSIVE_KEY\' in table \'department\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledepartment.EXCLUSIVE_KEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint DEL_FLG {
                get {
                    try {
                        return ((uint)(this[this.tabledepartment.DEL_FLGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEL_FLG\' in table \'department\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledepartment.DEL_FLGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime START_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledepartment.START_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'START_DATE\' in table \'department\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledepartment.START_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPARTMENT_NAMENull() {
                return this.IsNull(this.tabledepartment.DEPARTMENT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPARTMENT_NAMENull() {
                this[this.tabledepartment.DEPARTMENT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDRESSNull() {
                return this.IsNull(this.tabledepartment.ADDRESSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDRESSNull() {
                this[this.tabledepartment.ADDRESSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMANAGER_IDNull() {
                return this.IsNull(this.tabledepartment.MANAGER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMANAGER_IDNull() {
                this[this.tabledepartment.MANAGER_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACTIVENull() {
                return this.IsNull(this.tabledepartment.ACTIVEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACTIVENull() {
                this[this.tabledepartment.ACTIVEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_DATENull() {
                return this.IsNull(this.tabledepartment.CREATE_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_DATENull() {
                this[this.tabledepartment.CREATE_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_IDNull() {
                return this.IsNull(this.tabledepartment.CREATE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_IDNull() {
                this[this.tabledepartment.CREATE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATE_DATENull() {
                return this.IsNull(this.tabledepartment.UPDATE_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATE_DATENull() {
                this[this.tabledepartment.UPDATE_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATE_IDNull() {
                return this.IsNull(this.tabledepartment.UPDATE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATE_IDNull() {
                this[this.tabledepartment.UPDATE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEXCLUSIVE_KEYNull() {
                return this.IsNull(this.tabledepartment.EXCLUSIVE_KEYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEXCLUSIVE_KEYNull() {
                this[this.tabledepartment.EXCLUSIVE_KEYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEL_FLGNull() {
                return this.IsNull(this.tabledepartment.DEL_FLGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEL_FLGNull() {
                this[this.tabledepartment.DEL_FLGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTART_DATENull() {
                return this.IsNull(this.tabledepartment.START_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTART_DATENull() {
                this[this.tabledepartment.START_DATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class allStockRow : global::System.Data.DataRow {
            
            private allStockDataTable tableallStock;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal allStockRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableallStock = ((allStockDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_name {
                get {
                    try {
                        return ((string)(this[this.tableallStock.type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_name\' in table \'allStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableallStock.type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_id {
                get {
                    return ((string)(this[this.tableallStock.product_idColumn]));
                }
                set {
                    this[this.tableallStock.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tableallStock.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'allStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableallStock.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color_name {
                get {
                    try {
                        return ((string)(this[this.tableallStock.color_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color_name\' in table \'allStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableallStock.color_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string size_name {
                get {
                    try {
                        return ((string)(this[this.tableallStock.size_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'size_name\' in table \'allStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableallStock.size_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal preqty {
                get {
                    try {
                        return ((decimal)(this[this.tableallStock.preqtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'preqty\' in table \'allStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableallStock.preqtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal inqty {
                get {
                    try {
                        return ((decimal)(this[this.tableallStock.inqtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'inqty\' in table \'allStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableallStock.inqtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal dpreqty {
                get {
                    try {
                        return ((decimal)(this[this.tableallStock.dpreqtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dpreqty\' in table \'allStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableallStock.dpreqtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal moutqty {
                get {
                    try {
                        return ((decimal)(this[this.tableallStock.moutqtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'moutqty\' in table \'allStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableallStock.moutqtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal maindmg {
                get {
                    try {
                        return ((decimal)(this[this.tableallStock.maindmgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'maindmg\' in table \'allStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableallStock.maindmgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal dpoutqty {
                get {
                    try {
                        return ((decimal)(this[this.tableallStock.dpoutqtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dpoutqty\' in table \'allStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableallStock.dpoutqtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal dpdmg {
                get {
                    try {
                        return ((decimal)(this[this.tableallStock.dpdmgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dpdmg\' in table \'allStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableallStock.dpdmgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal mainrtn {
                get {
                    try {
                        return ((decimal)(this[this.tableallStock.mainrtnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mainrtn\' in table \'allStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableallStock.mainrtnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal saleqty {
                get {
                    try {
                        return ((decimal)(this[this.tableallStock.saleqtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'saleqty\' in table \'allStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableallStock.saleqtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal rtnpr {
                get {
                    try {
                        return ((decimal)(this[this.tableallStock.rtnprColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rtnpr\' in table \'allStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableallStock.rtnprColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype_nameNull() {
                return this.IsNull(this.tableallStock.type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype_nameNull() {
                this[this.tableallStock.type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tableallStock.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tableallStock.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscolor_nameNull() {
                return this.IsNull(this.tableallStock.color_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcolor_nameNull() {
                this[this.tableallStock.color_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issize_nameNull() {
                return this.IsNull(this.tableallStock.size_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsize_nameNull() {
                this[this.tableallStock.size_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspreqtyNull() {
                return this.IsNull(this.tableallStock.preqtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpreqtyNull() {
                this[this.tableallStock.preqtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinqtyNull() {
                return this.IsNull(this.tableallStock.inqtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinqtyNull() {
                this[this.tableallStock.inqtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdpreqtyNull() {
                return this.IsNull(this.tableallStock.dpreqtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdpreqtyNull() {
                this[this.tableallStock.dpreqtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmoutqtyNull() {
                return this.IsNull(this.tableallStock.moutqtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmoutqtyNull() {
                this[this.tableallStock.moutqtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmaindmgNull() {
                return this.IsNull(this.tableallStock.maindmgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmaindmgNull() {
                this[this.tableallStock.maindmgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdpoutqtyNull() {
                return this.IsNull(this.tableallStock.dpoutqtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdpoutqtyNull() {
                this[this.tableallStock.dpoutqtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdpdmgNull() {
                return this.IsNull(this.tableallStock.dpdmgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdpdmgNull() {
                this[this.tableallStock.dpdmgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmainrtnNull() {
                return this.IsNull(this.tableallStock.mainrtnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmainrtnNull() {
                this[this.tableallStock.mainrtnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssaleqtyNull() {
                return this.IsNull(this.tableallStock.saleqtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsaleqtyNull() {
                this[this.tableallStock.saleqtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrtnprNull() {
                return this.IsNull(this.tableallStock.rtnprColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrtnprNull() {
                this[this.tableallStock.rtnprColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class returnMainRow : global::System.Data.DataRow {
            
            private returnMainDataTable tablereturnMain;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal returnMainRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablereturnMain = ((returnMainDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_name {
                get {
                    try {
                        return ((string)(this[this.tablereturnMain.type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_name\' in table \'returnMain\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereturnMain.type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_id {
                get {
                    return ((string)(this[this.tablereturnMain.product_idColumn]));
                }
                set {
                    this[this.tablereturnMain.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tablereturnMain.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'returnMain\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereturnMain.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color_name {
                get {
                    try {
                        return ((string)(this[this.tablereturnMain.color_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color_name\' in table \'returnMain\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereturnMain.color_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string size_name {
                get {
                    try {
                        return ((string)(this[this.tablereturnMain.size_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'size_name\' in table \'returnMain\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereturnMain.size_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime STOCK_OUT_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablereturnMain.STOCK_OUT_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK_OUT_DATE\' in table \'returnMain\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereturnMain.STOCK_OUT_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPARTMENT_NAME {
                get {
                    try {
                        return ((string)(this[this.tablereturnMain.DEPARTMENT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEPARTMENT_NAME\' in table \'returnMain\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereturnMain.DEPARTMENT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tablereturnMain.ADDRESSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADDRESS\' in table \'returnMain\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereturnMain.ADDRESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal quantity {
                get {
                    try {
                        return ((decimal)(this[this.tablereturnMain.quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'quantity\' in table \'returnMain\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereturnMain.quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype_nameNull() {
                return this.IsNull(this.tablereturnMain.type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype_nameNull() {
                this[this.tablereturnMain.type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tablereturnMain.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tablereturnMain.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscolor_nameNull() {
                return this.IsNull(this.tablereturnMain.color_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcolor_nameNull() {
                this[this.tablereturnMain.color_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issize_nameNull() {
                return this.IsNull(this.tablereturnMain.size_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsize_nameNull() {
                this[this.tablereturnMain.size_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTOCK_OUT_DATENull() {
                return this.IsNull(this.tablereturnMain.STOCK_OUT_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTOCK_OUT_DATENull() {
                this[this.tablereturnMain.STOCK_OUT_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPARTMENT_NAMENull() {
                return this.IsNull(this.tablereturnMain.DEPARTMENT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPARTMENT_NAMENull() {
                this[this.tablereturnMain.DEPARTMENT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDRESSNull() {
                return this.IsNull(this.tablereturnMain.ADDRESSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDRESSNull() {
                this[this.tablereturnMain.ADDRESSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsquantityNull() {
                return this.IsNull(this.tablereturnMain.quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetquantityNull() {
                this[this.tablereturnMain.quantityColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class deptTempStockoutRow : global::System.Data.DataRow {
            
            private deptTempStockoutDataTable tabledeptTempStockout;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal deptTempStockoutRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledeptTempStockout = ((deptTempStockoutDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string department_name {
                get {
                    try {
                        return ((string)(this[this.tabledeptTempStockout.department_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'department_name\' in table \'deptTempStockout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptTempStockout.department_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_name {
                get {
                    try {
                        return ((string)(this[this.tabledeptTempStockout.type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_name\' in table \'deptTempStockout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptTempStockout.type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_id {
                get {
                    return ((string)(this[this.tabledeptTempStockout.product_idColumn]));
                }
                set {
                    this[this.tabledeptTempStockout.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tabledeptTempStockout.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'deptTempStockout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptTempStockout.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color_name {
                get {
                    try {
                        return ((string)(this[this.tabledeptTempStockout.color_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color_name\' in table \'deptTempStockout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptTempStockout.color_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string size_name {
                get {
                    try {
                        return ((string)(this[this.tabledeptTempStockout.size_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'size_name\' in table \'deptTempStockout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptTempStockout.size_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal _sum_quantity_ {
                get {
                    try {
                        return ((decimal)(this[this.tabledeptTempStockout._sum_quantity_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sum(quantity)\' in table \'deptTempStockout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptTempStockout._sum_quantity_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address {
                get {
                    try {
                        return ((string)(this[this.tabledeptTempStockout.addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'address\' in table \'deptTempStockout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptTempStockout.addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime stock_out_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledeptTempStockout.stock_out_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'stock_out_date\' in table \'deptTempStockout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptTempStockout.stock_out_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdepartment_nameNull() {
                return this.IsNull(this.tabledeptTempStockout.department_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdepartment_nameNull() {
                this[this.tabledeptTempStockout.department_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype_nameNull() {
                return this.IsNull(this.tabledeptTempStockout.type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype_nameNull() {
                this[this.tabledeptTempStockout.type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tabledeptTempStockout.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tabledeptTempStockout.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscolor_nameNull() {
                return this.IsNull(this.tabledeptTempStockout.color_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcolor_nameNull() {
                this[this.tabledeptTempStockout.color_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issize_nameNull() {
                return this.IsNull(this.tabledeptTempStockout.size_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsize_nameNull() {
                this[this.tabledeptTempStockout.size_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_sum_quantity_Null() {
                return this.IsNull(this.tabledeptTempStockout._sum_quantity_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_sum_quantity_Null() {
                this[this.tabledeptTempStockout._sum_quantity_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaddressNull() {
                return this.IsNull(this.tabledeptTempStockout.addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaddressNull() {
                this[this.tabledeptTempStockout.addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstock_out_dateNull() {
                return this.IsNull(this.tabledeptTempStockout.stock_out_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstock_out_dateNull() {
                this[this.tabledeptTempStockout.stock_out_dateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class deptReStockRow : global::System.Data.DataRow {
            
            private deptReStockDataTable tabledeptReStock;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal deptReStockRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledeptReStock = ((deptReStockDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string department_name {
                get {
                    try {
                        return ((string)(this[this.tabledeptReStock.department_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'department_name\' in table \'deptReStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptReStock.department_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_name {
                get {
                    try {
                        return ((string)(this[this.tabledeptReStock.type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_name\' in table \'deptReStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptReStock.type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_id {
                get {
                    return ((string)(this[this.tabledeptReStock.product_idColumn]));
                }
                set {
                    this[this.tabledeptReStock.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tabledeptReStock.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'deptReStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptReStock.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color_name {
                get {
                    try {
                        return ((string)(this[this.tabledeptReStock.color_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color_name\' in table \'deptReStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptReStock.color_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string size_name {
                get {
                    try {
                        return ((string)(this[this.tabledeptReStock.size_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'size_name\' in table \'deptReStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptReStock.size_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal _sum_quantity_ {
                get {
                    try {
                        return ((decimal)(this[this.tabledeptReStock._sum_quantity_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sum(quantity)\' in table \'deptReStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptReStock._sum_quantity_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal _sum_dstk_stock_in_cost_ {
                get {
                    try {
                        return ((decimal)(this[this.tabledeptReStock._sum_dstk_stock_in_cost_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sum(dstk_stock_in_cost)\' in table \'deptReStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptReStock._sum_dstk_stock_in_cost_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address {
                get {
                    try {
                        return ((string)(this[this.tabledeptReStock.addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'address\' in table \'deptReStock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledeptReStock.addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdepartment_nameNull() {
                return this.IsNull(this.tabledeptReStock.department_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdepartment_nameNull() {
                this[this.tabledeptReStock.department_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype_nameNull() {
                return this.IsNull(this.tabledeptReStock.type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype_nameNull() {
                this[this.tabledeptReStock.type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tabledeptReStock.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tabledeptReStock.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscolor_nameNull() {
                return this.IsNull(this.tabledeptReStock.color_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcolor_nameNull() {
                this[this.tabledeptReStock.color_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issize_nameNull() {
                return this.IsNull(this.tabledeptReStock.size_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsize_nameNull() {
                this[this.tabledeptReStock.size_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_sum_quantity_Null() {
                return this.IsNull(this.tabledeptReStock._sum_quantity_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_sum_quantity_Null() {
                this[this.tabledeptReStock._sum_quantity_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_sum_dstk_stock_in_cost_Null() {
                return this.IsNull(this.tabledeptReStock._sum_dstk_stock_in_cost_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_sum_dstk_stock_in_cost_Null() {
                this[this.tabledeptReStock._sum_dstk_stock_in_cost_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaddressNull() {
                return this.IsNull(this.tabledeptReStock.addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaddressNull() {
                this[this.tabledeptReStock.addressColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class mainStockOutRow : global::System.Data.DataRow {
            
            private mainStockOutDataTable tablemainStockOut;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal mainStockOutRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemainStockOut = ((mainStockOutDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime stock_out_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablemainStockOut.stock_out_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'stock_out_date\' in table \'mainStockOut\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemainStockOut.stock_out_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_name {
                get {
                    try {
                        return ((string)(this[this.tablemainStockOut.type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_name\' in table \'mainStockOut\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemainStockOut.type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_id {
                get {
                    return ((string)(this[this.tablemainStockOut.product_idColumn]));
                }
                set {
                    this[this.tablemainStockOut.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tablemainStockOut.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'mainStockOut\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemainStockOut.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color_name {
                get {
                    try {
                        return ((string)(this[this.tablemainStockOut.color_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color_name\' in table \'mainStockOut\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemainStockOut.color_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string size_name {
                get {
                    try {
                        return ((string)(this[this.tablemainStockOut.size_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'size_name\' in table \'mainStockOut\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemainStockOut.size_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal _sum_quantity_ {
                get {
                    try {
                        return ((decimal)(this[this.tablemainStockOut._sum_quantity_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sum(quantity)\' in table \'mainStockOut\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemainStockOut._sum_quantity_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string department_name {
                get {
                    try {
                        return ((string)(this[this.tablemainStockOut.department_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'department_name\' in table \'mainStockOut\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemainStockOut.department_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstock_out_dateNull() {
                return this.IsNull(this.tablemainStockOut.stock_out_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstock_out_dateNull() {
                this[this.tablemainStockOut.stock_out_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype_nameNull() {
                return this.IsNull(this.tablemainStockOut.type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype_nameNull() {
                this[this.tablemainStockOut.type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tablemainStockOut.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tablemainStockOut.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscolor_nameNull() {
                return this.IsNull(this.tablemainStockOut.color_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcolor_nameNull() {
                this[this.tablemainStockOut.color_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issize_nameNull() {
                return this.IsNull(this.tablemainStockOut.size_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsize_nameNull() {
                this[this.tablemainStockOut.size_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_sum_quantity_Null() {
                return this.IsNull(this.tablemainStockOut._sum_quantity_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_sum_quantity_Null() {
                this[this.tablemainStockOut._sum_quantity_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdepartment_nameNull() {
                return this.IsNull(this.tablemainStockOut.department_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdepartment_nameNull() {
                this[this.tablemainStockOut.department_nameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class stockOutRow : global::System.Data.DataRow {
            
            private stockOutDataTable tablestockOut;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal stockOutRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestockOut = ((stockOutDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_name {
                get {
                    try {
                        return ((string)(this[this.tablestockOut.type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_name\' in table \'stockOut\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockOut.type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_id {
                get {
                    return ((string)(this[this.tablestockOut.product_idColumn]));
                }
                set {
                    this[this.tablestockOut.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tablestockOut.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'stockOut\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockOut.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color_name {
                get {
                    try {
                        return ((string)(this[this.tablestockOut.color_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color_name\' in table \'stockOut\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockOut.color_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string size_name {
                get {
                    try {
                        return ((string)(this[this.tablestockOut.size_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'size_name\' in table \'stockOut\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockOut.size_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint department_id {
                get {
                    return ((uint)(this[this.tablestockOut.department_idColumn]));
                }
                set {
                    this[this.tablestockOut.department_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string department_name {
                get {
                    try {
                        return ((string)(this[this.tablestockOut.department_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'department_name\' in table \'stockOut\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockOut.department_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal _sum_quantity_ {
                get {
                    try {
                        return ((decimal)(this[this.tablestockOut._sum_quantity_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sum(quantity)\' in table \'stockOut\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockOut._sum_quantity_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int price {
                get {
                    return ((int)(this[this.tablestockOut.priceColumn]));
                }
                set {
                    this[this.tablestockOut.priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stock_out_date {
                get {
                    try {
                        return ((string)(this[this.tablestockOut.stock_out_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'stock_out_date\' in table \'stockOut\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockOut.stock_out_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype_nameNull() {
                return this.IsNull(this.tablestockOut.type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype_nameNull() {
                this[this.tablestockOut.type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tablestockOut.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tablestockOut.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscolor_nameNull() {
                return this.IsNull(this.tablestockOut.color_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcolor_nameNull() {
                this[this.tablestockOut.color_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issize_nameNull() {
                return this.IsNull(this.tablestockOut.size_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsize_nameNull() {
                this[this.tablestockOut.size_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdepartment_nameNull() {
                return this.IsNull(this.tablestockOut.department_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdepartment_nameNull() {
                this[this.tablestockOut.department_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_sum_quantity_Null() {
                return this.IsNull(this.tablestockOut._sum_quantity_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_sum_quantity_Null() {
                this[this.tablestockOut._sum_quantity_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstock_out_dateNull() {
                return this.IsNull(this.tablestockOut.stock_out_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstock_out_dateNull() {
                this[this.tablestockOut.stock_out_dateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class employeeRow : global::System.Data.DataRow {
            
            private employeeDataTable tableemployee;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal employeeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableemployee = ((employeeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMPLOYEE_ID {
                get {
                    return ((string)(this[this.tableemployee.EMPLOYEE_IDColumn]));
                }
                set {
                    this[this.tableemployee.EMPLOYEE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMPLOYEE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableemployee.EMPLOYEE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMPLOYEE_NAME\' in table \'employee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee.EMPLOYEE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tableemployee.ADDRESSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADDRESS\' in table \'employee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee.ADDRESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string startdate {
                get {
                    try {
                        return ((string)(this[this.tableemployee.startdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'startdate\' in table \'employee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee.startdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BARCODE {
                get {
                    try {
                        return ((string)(this[this.tableemployee.BARCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BARCODE\' in table \'employee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployee.BARCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMPLOYEE_NAMENull() {
                return this.IsNull(this.tableemployee.EMPLOYEE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMPLOYEE_NAMENull() {
                this[this.tableemployee.EMPLOYEE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDRESSNull() {
                return this.IsNull(this.tableemployee.ADDRESSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDRESSNull() {
                this[this.tableemployee.ADDRESSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstartdateNull() {
                return this.IsNull(this.tableemployee.startdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstartdateNull() {
                this[this.tableemployee.startdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBARCODENull() {
                return this.IsNull(this.tableemployee.BARCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBARCODENull() {
                this[this.tableemployee.BARCODEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class workingdayRow : global::System.Data.DataRow {
            
            private workingdayDataTable tableworkingday;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal workingdayRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableworkingday = ((workingdayDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string employee_id {
                get {
                    return ((string)(this[this.tableworkingday.employee_idColumn]));
                }
                set {
                    this[this.tableworkingday.employee_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string employee_name {
                get {
                    try {
                        return ((string)(this[this.tableworkingday.employee_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'employee_name\' in table \'workingday\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableworkingday.employee_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string barcode {
                get {
                    try {
                        return ((string)(this[this.tableworkingday.barcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'barcode\' in table \'workingday\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableworkingday.barcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string wkday {
                get {
                    try {
                        return ((string)(this[this.tableworkingday.wkdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'wkday\' in table \'workingday\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableworkingday.wkdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string start_time {
                get {
                    try {
                        return ((string)(this[this.tableworkingday.start_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'start_time\' in table \'workingday\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableworkingday.start_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string end_time {
                get {
                    try {
                        return ((string)(this[this.tableworkingday.end_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'end_time\' in table \'workingday\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableworkingday.end_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isemployee_nameNull() {
                return this.IsNull(this.tableworkingday.employee_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setemployee_nameNull() {
                this[this.tableworkingday.employee_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbarcodeNull() {
                return this.IsNull(this.tableworkingday.barcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbarcodeNull() {
                this[this.tableworkingday.barcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswkdayNull() {
                return this.IsNull(this.tableworkingday.wkdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwkdayNull() {
                this[this.tableworkingday.wkdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstart_timeNull() {
                return this.IsNull(this.tableworkingday.start_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstart_timeNull() {
                this[this.tableworkingday.start_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isend_timeNull() {
                return this.IsNull(this.tableworkingday.end_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setend_timeNull() {
                this[this.tableworkingday.end_timeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class saleStatisticRow : global::System.Data.DataRow {
            
            private saleStatisticDataTable tablesaleStatistic;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal saleStatisticRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesaleStatistic = ((saleStatisticDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string prdate {
                get {
                    try {
                        return ((string)(this[this.tablesaleStatistic.prdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'prdate\' in table \'saleStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaleStatistic.prdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string department_name {
                get {
                    try {
                        return ((string)(this[this.tablesaleStatistic.department_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'department_name\' in table \'saleStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaleStatistic.department_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address {
                get {
                    try {
                        return ((string)(this[this.tablesaleStatistic.addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'address\' in table \'saleStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaleStatistic.addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PURCHASE_ORDER_ID {
                get {
                    return ((string)(this[this.tablesaleStatistic.PURCHASE_ORDER_IDColumn]));
                }
                set {
                    this[this.tablesaleStatistic.PURCHASE_ORDER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TYPE_NAME {
                get {
                    try {
                        return ((string)(this[this.tablesaleStatistic.TYPE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYPE_NAME\' in table \'saleStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaleStatistic.TYPE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_id {
                get {
                    try {
                        return ((string)(this[this.tablesaleStatistic.product_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_id\' in table \'saleStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaleStatistic.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_NAME {
                get {
                    try {
                        return ((string)(this[this.tablesaleStatistic.PRODUCT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT_NAME\' in table \'saleStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaleStatistic.PRODUCT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color_name {
                get {
                    try {
                        return ((string)(this[this.tablesaleStatistic.color_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color_name\' in table \'saleStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaleStatistic.color_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string size_name {
                get {
                    try {
                        return ((string)(this[this.tablesaleStatistic.size_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'size_name\' in table \'saleStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaleStatistic.size_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Quantity {
                get {
                    try {
                        return ((decimal)(this[this.tablesaleStatistic.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'saleStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaleStatistic.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal rtnqty {
                get {
                    try {
                        return ((decimal)(this[this.tablesaleStatistic.rtnqtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rtnqty\' in table \'saleStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaleStatistic.rtnqtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Price {
                get {
                    try {
                        return ((decimal)(this[this.tablesaleStatistic.PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Price\' in table \'saleStatistic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesaleStatistic.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsprdateNull() {
                return this.IsNull(this.tablesaleStatistic.prdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetprdateNull() {
                this[this.tablesaleStatistic.prdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdepartment_nameNull() {
                return this.IsNull(this.tablesaleStatistic.department_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdepartment_nameNull() {
                this[this.tablesaleStatistic.department_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaddressNull() {
                return this.IsNull(this.tablesaleStatistic.addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaddressNull() {
                this[this.tablesaleStatistic.addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTYPE_NAMENull() {
                return this.IsNull(this.tablesaleStatistic.TYPE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTYPE_NAMENull() {
                this[this.tablesaleStatistic.TYPE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_idNull() {
                return this.IsNull(this.tablesaleStatistic.product_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_idNull() {
                this[this.tablesaleStatistic.product_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCT_NAMENull() {
                return this.IsNull(this.tablesaleStatistic.PRODUCT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCT_NAMENull() {
                this[this.tablesaleStatistic.PRODUCT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscolor_nameNull() {
                return this.IsNull(this.tablesaleStatistic.color_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcolor_nameNull() {
                this[this.tablesaleStatistic.color_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issize_nameNull() {
                return this.IsNull(this.tablesaleStatistic.size_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsize_nameNull() {
                this[this.tablesaleStatistic.size_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tablesaleStatistic.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tablesaleStatistic.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrtnqtyNull() {
                return this.IsNull(this.tablesaleStatistic.rtnqtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrtnqtyNull() {
                this[this.tablesaleStatistic.rtnqtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceNull() {
                return this.IsNull(this.tablesaleStatistic.PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceNull() {
                this[this.tablesaleStatistic.PriceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PurchaseOrderPeriodRow : global::System.Data.DataRow {
            
            private PurchaseOrderPeriodDataTable tablePurchaseOrderPeriod;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PurchaseOrderPeriodRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePurchaseOrderPeriod = ((PurchaseOrderPeriodDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string poid {
                get {
                    return ((string)(this[this.tablePurchaseOrderPeriod.poidColumn]));
                }
                set {
                    this[this.tablePurchaseOrderPeriod.poidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrderPeriod.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'PurchaseOrderPeriod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderPeriod.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal sellqty {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrderPeriod.sellqtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sellqty\' in table \'PurchaseOrderPeriod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderPeriod.sellqtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal sellamount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrderPeriod.sellamountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sellamount\' in table \'PurchaseOrderPeriod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderPeriod.sellamountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal retqty {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrderPeriod.retqtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'retqty\' in table \'PurchaseOrderPeriod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderPeriod.retqtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal retamount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrderPeriod.retamountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'retamount\' in table \'PurchaseOrderPeriod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderPeriod.retamountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string issue_date {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrderPeriod.issue_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'issue_date\' in table \'PurchaseOrderPeriod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderPeriod.issue_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint period {
                get {
                    return ((uint)(this[this.tablePurchaseOrderPeriod.periodColumn]));
                }
                set {
                    this[this.tablePurchaseOrderPeriod.periodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string working_date {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrderPeriod.working_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'working_date\' in table \'PurchaseOrderPeriod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderPeriod.working_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color_name {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrderPeriod.color_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color_name\' in table \'PurchaseOrderPeriod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderPeriod.color_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string size_name {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrderPeriod.size_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'size_name\' in table \'PurchaseOrderPeriod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderPeriod.size_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_name {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrderPeriod.type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_name\' in table \'PurchaseOrderPeriod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderPeriod.type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string department_name {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrderPeriod.department_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'department_name\' in table \'PurchaseOrderPeriod\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderPeriod.department_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tablePurchaseOrderPeriod.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tablePurchaseOrderPeriod.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssellqtyNull() {
                return this.IsNull(this.tablePurchaseOrderPeriod.sellqtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsellqtyNull() {
                this[this.tablePurchaseOrderPeriod.sellqtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssellamountNull() {
                return this.IsNull(this.tablePurchaseOrderPeriod.sellamountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsellamountNull() {
                this[this.tablePurchaseOrderPeriod.sellamountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsretqtyNull() {
                return this.IsNull(this.tablePurchaseOrderPeriod.retqtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetretqtyNull() {
                this[this.tablePurchaseOrderPeriod.retqtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsretamountNull() {
                return this.IsNull(this.tablePurchaseOrderPeriod.retamountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetretamountNull() {
                this[this.tablePurchaseOrderPeriod.retamountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isissue_dateNull() {
                return this.IsNull(this.tablePurchaseOrderPeriod.issue_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setissue_dateNull() {
                this[this.tablePurchaseOrderPeriod.issue_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isworking_dateNull() {
                return this.IsNull(this.tablePurchaseOrderPeriod.working_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setworking_dateNull() {
                this[this.tablePurchaseOrderPeriod.working_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscolor_nameNull() {
                return this.IsNull(this.tablePurchaseOrderPeriod.color_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcolor_nameNull() {
                this[this.tablePurchaseOrderPeriod.color_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issize_nameNull() {
                return this.IsNull(this.tablePurchaseOrderPeriod.size_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsize_nameNull() {
                this[this.tablePurchaseOrderPeriod.size_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype_nameNull() {
                return this.IsNull(this.tablePurchaseOrderPeriod.type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype_nameNull() {
                this[this.tablePurchaseOrderPeriod.type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdepartment_nameNull() {
                return this.IsNull(this.tablePurchaseOrderPeriod.department_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdepartment_nameNull() {
                this[this.tablePurchaseOrderPeriod.department_nameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PurchaseOrderDetailReportRow : global::System.Data.DataRow {
            
            private PurchaseOrderDetailReportDataTable tablePurchaseOrderDetailReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PurchaseOrderDetailReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePurchaseOrderDetailReport = ((PurchaseOrderDetailReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string working_date {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrderDetailReport.working_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'working_date\' in table \'PurchaseOrderDetailReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderDetailReport.working_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string poid {
                get {
                    return ((string)(this[this.tablePurchaseOrderDetailReport.poidColumn]));
                }
                set {
                    this[this.tablePurchaseOrderDetailReport.poidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrderDetailReport.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'PurchaseOrderDetailReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderDetailReport.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color_name {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrderDetailReport.color_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color_name\' in table \'PurchaseOrderDetailReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderDetailReport.color_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string size_name {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrderDetailReport.size_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'size_name\' in table \'PurchaseOrderDetailReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderDetailReport.size_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_id {
                get {
                    return ((string)(this[this.tablePurchaseOrderDetailReport.product_idColumn]));
                }
                set {
                    this[this.tablePurchaseOrderDetailReport.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ulong sellqty {
                get {
                    try {
                        return ((ulong)(this[this.tablePurchaseOrderDetailReport.sellqtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sellqty\' in table \'PurchaseOrderDetailReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderDetailReport.sellqtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ulong sellamount {
                get {
                    try {
                        return ((ulong)(this[this.tablePurchaseOrderDetailReport.sellamountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sellamount\' in table \'PurchaseOrderDetailReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderDetailReport.sellamountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long retqty {
                get {
                    try {
                        return ((long)(this[this.tablePurchaseOrderDetailReport.retqtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'retqty\' in table \'PurchaseOrderDetailReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderDetailReport.retqtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long retamount {
                get {
                    try {
                        return ((long)(this[this.tablePurchaseOrderDetailReport.retamountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'retamount\' in table \'PurchaseOrderDetailReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderDetailReport.retamountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string issue_date {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrderDetailReport.issue_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'issue_date\' in table \'PurchaseOrderDetailReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderDetailReport.issue_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_name {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrderDetailReport.type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_name\' in table \'PurchaseOrderDetailReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderDetailReport.type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string department_name {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrderDetailReport.department_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'department_name\' in table \'PurchaseOrderDetailReport\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderDetailReport.department_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isworking_dateNull() {
                return this.IsNull(this.tablePurchaseOrderDetailReport.working_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setworking_dateNull() {
                this[this.tablePurchaseOrderDetailReport.working_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tablePurchaseOrderDetailReport.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tablePurchaseOrderDetailReport.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscolor_nameNull() {
                return this.IsNull(this.tablePurchaseOrderDetailReport.color_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcolor_nameNull() {
                this[this.tablePurchaseOrderDetailReport.color_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issize_nameNull() {
                return this.IsNull(this.tablePurchaseOrderDetailReport.size_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsize_nameNull() {
                this[this.tablePurchaseOrderDetailReport.size_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssellqtyNull() {
                return this.IsNull(this.tablePurchaseOrderDetailReport.sellqtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsellqtyNull() {
                this[this.tablePurchaseOrderDetailReport.sellqtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssellamountNull() {
                return this.IsNull(this.tablePurchaseOrderDetailReport.sellamountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsellamountNull() {
                this[this.tablePurchaseOrderDetailReport.sellamountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsretqtyNull() {
                return this.IsNull(this.tablePurchaseOrderDetailReport.retqtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetretqtyNull() {
                this[this.tablePurchaseOrderDetailReport.retqtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsretamountNull() {
                return this.IsNull(this.tablePurchaseOrderDetailReport.retamountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetretamountNull() {
                this[this.tablePurchaseOrderDetailReport.retamountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isissue_dateNull() {
                return this.IsNull(this.tablePurchaseOrderDetailReport.issue_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setissue_dateNull() {
                this[this.tablePurchaseOrderDetailReport.issue_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype_nameNull() {
                return this.IsNull(this.tablePurchaseOrderDetailReport.type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype_nameNull() {
                this[this.tablePurchaseOrderDetailReport.type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdepartment_nameNull() {
                return this.IsNull(this.tablePurchaseOrderDetailReport.department_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdepartment_nameNull() {
                this[this.tablePurchaseOrderDetailReport.department_nameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PurchaseOrderReportRow : global::System.Data.DataRow {
            
            private PurchaseOrderReportDataTable tablePurchaseOrderReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PurchaseOrderReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePurchaseOrderReport = ((PurchaseOrderReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string working_date {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrderReport.working_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'working_date\' in table \'PurchaseOrderReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderReport.working_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string poid {
                get {
                    return ((string)(this[this.tablePurchaseOrderReport.poidColumn]));
                }
                set {
                    this[this.tablePurchaseOrderReport.poidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrderReport.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'PurchaseOrderReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderReport.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal sellqty {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrderReport.sellqtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sellqty\' in table \'PurchaseOrderReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderReport.sellqtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal sellamount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrderReport.sellamountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sellamount\' in table \'PurchaseOrderReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderReport.sellamountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal retqty {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrderReport.retqtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'retqty\' in table \'PurchaseOrderReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderReport.retqtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal retamount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrderReport.retamountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'retamount\' in table \'PurchaseOrderReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderReport.retamountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string issue_date {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrderReport.issue_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'issue_date\' in table \'PurchaseOrderReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderReport.issue_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color_name {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrderReport.color_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color_name\' in table \'PurchaseOrderReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderReport.color_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string size_name {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrderReport.size_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'size_name\' in table \'PurchaseOrderReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderReport.size_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_name {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrderReport.type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_name\' in table \'PurchaseOrderReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderReport.type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string department_name {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrderReport.department_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'department_name\' in table \'PurchaseOrderReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrderReport.department_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isworking_dateNull() {
                return this.IsNull(this.tablePurchaseOrderReport.working_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setworking_dateNull() {
                this[this.tablePurchaseOrderReport.working_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tablePurchaseOrderReport.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tablePurchaseOrderReport.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssellqtyNull() {
                return this.IsNull(this.tablePurchaseOrderReport.sellqtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsellqtyNull() {
                this[this.tablePurchaseOrderReport.sellqtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssellamountNull() {
                return this.IsNull(this.tablePurchaseOrderReport.sellamountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsellamountNull() {
                this[this.tablePurchaseOrderReport.sellamountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsretqtyNull() {
                return this.IsNull(this.tablePurchaseOrderReport.retqtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetretqtyNull() {
                this[this.tablePurchaseOrderReport.retqtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsretamountNull() {
                return this.IsNull(this.tablePurchaseOrderReport.retamountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetretamountNull() {
                this[this.tablePurchaseOrderReport.retamountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isissue_dateNull() {
                return this.IsNull(this.tablePurchaseOrderReport.issue_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setissue_dateNull() {
                this[this.tablePurchaseOrderReport.issue_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscolor_nameNull() {
                return this.IsNull(this.tablePurchaseOrderReport.color_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcolor_nameNull() {
                this[this.tablePurchaseOrderReport.color_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issize_nameNull() {
                return this.IsNull(this.tablePurchaseOrderReport.size_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsize_nameNull() {
                this[this.tablePurchaseOrderReport.size_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype_nameNull() {
                return this.IsNull(this.tablePurchaseOrderReport.type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype_nameNull() {
                this[this.tablePurchaseOrderReport.type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdepartment_nameNull() {
                return this.IsNull(this.tablePurchaseOrderReport.department_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdepartment_nameNull() {
                this[this.tablePurchaseOrderReport.department_nameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomizeReportRow : global::System.Data.DataRow {
            
            private CustomizeReportDataTable tableCustomizeReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomizeReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomizeReport = ((CustomizeReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_name {
                get {
                    try {
                        return ((string)(this[this.tableCustomizeReport.type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_name\' in table \'CustomizeReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomizeReport.type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tableCustomizeReport.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'CustomizeReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomizeReport.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color_name {
                get {
                    try {
                        return ((string)(this[this.tableCustomizeReport.color_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color_name\' in table \'CustomizeReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomizeReport.color_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string size_name {
                get {
                    try {
                        return ((string)(this[this.tableCustomizeReport.size_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'size_name\' in table \'CustomizeReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomizeReport.size_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal quantity {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomizeReport.quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'quantity\' in table \'CustomizeReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomizeReport.quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype_nameNull() {
                return this.IsNull(this.tableCustomizeReport.type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype_nameNull() {
                this[this.tableCustomizeReport.type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tableCustomizeReport.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tableCustomizeReport.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscolor_nameNull() {
                return this.IsNull(this.tableCustomizeReport.color_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcolor_nameNull() {
                this[this.tableCustomizeReport.color_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issize_nameNull() {
                return this.IsNull(this.tableCustomizeReport.size_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsize_nameNull() {
                this[this.tableCustomizeReport.size_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsquantityNull() {
                return this.IsNull(this.tableCustomizeReport.quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetquantityNull() {
                this[this.tableCustomizeReport.quantityColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomizeDepartmentReportRow : global::System.Data.DataRow {
            
            private CustomizeDepartmentReportDataTable tableCustomizeDepartmentReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomizeDepartmentReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomizeDepartmentReport = ((CustomizeDepartmentReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint deptid {
                get {
                    return ((uint)(this[this.tableCustomizeDepartmentReport.deptidColumn]));
                }
                set {
                    this[this.tableCustomizeDepartmentReport.deptidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string deptname {
                get {
                    try {
                        return ((string)(this[this.tableCustomizeDepartmentReport.deptnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'deptname\' in table \'CustomizeDepartmentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomizeDepartmentReport.deptnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_name {
                get {
                    try {
                        return ((string)(this[this.tableCustomizeDepartmentReport.type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_name\' in table \'CustomizeDepartmentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomizeDepartmentReport.type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tableCustomizeDepartmentReport.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'CustomizeDepartmentReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomizeDepartmentReport.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color_name {
                get {
                    try {
                        return ((string)(this[this.tableCustomizeDepartmentReport.color_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color_name\' in table \'CustomizeDepartmentReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomizeDepartmentReport.color_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string size_name {
                get {
                    try {
                        return ((string)(this[this.tableCustomizeDepartmentReport.size_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'size_name\' in table \'CustomizeDepartmentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomizeDepartmentReport.size_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal quantity {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomizeDepartmentReport.quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'quantity\' in table \'CustomizeDepartmentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomizeDepartmentReport.quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdeptnameNull() {
                return this.IsNull(this.tableCustomizeDepartmentReport.deptnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdeptnameNull() {
                this[this.tableCustomizeDepartmentReport.deptnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype_nameNull() {
                return this.IsNull(this.tableCustomizeDepartmentReport.type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype_nameNull() {
                this[this.tableCustomizeDepartmentReport.type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tableCustomizeDepartmentReport.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tableCustomizeDepartmentReport.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscolor_nameNull() {
                return this.IsNull(this.tableCustomizeDepartmentReport.color_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcolor_nameNull() {
                this[this.tableCustomizeDepartmentReport.color_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issize_nameNull() {
                return this.IsNull(this.tableCustomizeDepartmentReport.size_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsize_nameNull() {
                this[this.tableCustomizeDepartmentReport.size_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsquantityNull() {
                return this.IsNull(this.tableCustomizeDepartmentReport.quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetquantityNull() {
                this[this.tableCustomizeDepartmentReport.quantityColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomizeDepartmentDetailReportRow : global::System.Data.DataRow {
            
            private CustomizeDepartmentDetailReportDataTable tableCustomizeDepartmentDetailReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomizeDepartmentDetailReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomizeDepartmentDetailReport = ((CustomizeDepartmentDetailReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long row_number {
                get {
                    try {
                        return ((long)(this[this.tableCustomizeDepartmentDetailReport.row_numberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'row_number\' in table \'CustomizeDepartmentDetailReport\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomizeDepartmentDetailReport.row_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_name {
                get {
                    try {
                        return ((string)(this[this.tableCustomizeDepartmentDetailReport.type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_name\' in table \'CustomizeDepartmentDetailReport\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomizeDepartmentDetailReport.type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tableCustomizeDepartmentDetailReport.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'CustomizeDepartmentDetailReport\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomizeDepartmentDetailReport.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color_name {
                get {
                    try {
                        return ((string)(this[this.tableCustomizeDepartmentDetailReport.color_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color_name\' in table \'CustomizeDepartmentDetailReport\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomizeDepartmentDetailReport.color_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string size_name {
                get {
                    try {
                        return ((string)(this[this.tableCustomizeDepartmentDetailReport.size_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'size_name\' in table \'CustomizeDepartmentDetailReport\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomizeDepartmentDetailReport.size_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal quantity {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomizeDepartmentDetailReport.quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'quantity\' in table \'CustomizeDepartmentDetailReport\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomizeDepartmentDetailReport.quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint deptid {
                get {
                    return ((uint)(this[this.tableCustomizeDepartmentDetailReport.deptidColumn]));
                }
                set {
                    this[this.tableCustomizeDepartmentDetailReport.deptidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string deptname {
                get {
                    try {
                        return ((string)(this[this.tableCustomizeDepartmentDetailReport.deptnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'deptname\' in table \'CustomizeDepartmentDetailReport\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomizeDepartmentDetailReport.deptnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrow_numberNull() {
                return this.IsNull(this.tableCustomizeDepartmentDetailReport.row_numberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrow_numberNull() {
                this[this.tableCustomizeDepartmentDetailReport.row_numberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype_nameNull() {
                return this.IsNull(this.tableCustomizeDepartmentDetailReport.type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype_nameNull() {
                this[this.tableCustomizeDepartmentDetailReport.type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tableCustomizeDepartmentDetailReport.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tableCustomizeDepartmentDetailReport.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscolor_nameNull() {
                return this.IsNull(this.tableCustomizeDepartmentDetailReport.color_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcolor_nameNull() {
                this[this.tableCustomizeDepartmentDetailReport.color_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issize_nameNull() {
                return this.IsNull(this.tableCustomizeDepartmentDetailReport.size_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsize_nameNull() {
                this[this.tableCustomizeDepartmentDetailReport.size_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsquantityNull() {
                return this.IsNull(this.tableCustomizeDepartmentDetailReport.quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetquantityNull() {
                this[this.tableCustomizeDepartmentDetailReport.quantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdeptnameNull() {
                return this.IsNull(this.tableCustomizeDepartmentDetailReport.deptnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdeptnameNull() {
                this[this.tableCustomizeDepartmentDetailReport.deptnameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class product_typeRow : global::System.Data.DataRow {
            
            private product_typeDataTable tableproduct_type;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal product_typeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproduct_type = ((product_typeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint TYPE_ID {
                get {
                    return ((uint)(this[this.tableproduct_type.TYPE_IDColumn]));
                }
                set {
                    this[this.tableproduct_type.TYPE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TYPE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableproduct_type.TYPE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYPE_NAME\' in table \'product_type\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_type.TYPE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableproduct_type.CREATE_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CREATE_DATE\' in table \'product_type\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_type.CREATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_ID {
                get {
                    try {
                        return ((string)(this[this.tableproduct_type.CREATE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CREATE_ID\' in table \'product_type\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_type.CREATE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UPDATE_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableproduct_type.UPDATE_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UPDATE_DATE\' in table \'product_type\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_type.UPDATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UPDATE_ID {
                get {
                    try {
                        return ((string)(this[this.tableproduct_type.UPDATE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UPDATE_ID\' in table \'product_type\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_type.UPDATE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint EXCLUSIVE_KEY {
                get {
                    try {
                        return ((uint)(this[this.tableproduct_type.EXCLUSIVE_KEYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXCLUSIVE_KEY\' in table \'product_type\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_type.EXCLUSIVE_KEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint DEL_FLG {
                get {
                    try {
                        return ((uint)(this[this.tableproduct_type.DEL_FLGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEL_FLG\' in table \'product_type\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_type.DEL_FLGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTYPE_NAMENull() {
                return this.IsNull(this.tableproduct_type.TYPE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTYPE_NAMENull() {
                this[this.tableproduct_type.TYPE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_DATENull() {
                return this.IsNull(this.tableproduct_type.CREATE_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_DATENull() {
                this[this.tableproduct_type.CREATE_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_IDNull() {
                return this.IsNull(this.tableproduct_type.CREATE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_IDNull() {
                this[this.tableproduct_type.CREATE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATE_DATENull() {
                return this.IsNull(this.tableproduct_type.UPDATE_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATE_DATENull() {
                this[this.tableproduct_type.UPDATE_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATE_IDNull() {
                return this.IsNull(this.tableproduct_type.UPDATE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATE_IDNull() {
                this[this.tableproduct_type.UPDATE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEXCLUSIVE_KEYNull() {
                return this.IsNull(this.tableproduct_type.EXCLUSIVE_KEYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEXCLUSIVE_KEYNull() {
                this[this.tableproduct_type.EXCLUSIVE_KEYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEL_FLGNull() {
                return this.IsNull(this.tableproduct_type.DEL_FLGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEL_FLGNull() {
                this[this.tableproduct_type.DEL_FLGColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DepartmentStockOutRow : global::System.Data.DataRow {
            
            private DepartmentStockOutDataTable tableDepartmentStockOut;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DepartmentStockOutRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDepartmentStockOut = ((DepartmentStockOutDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_name {
                get {
                    try {
                        return ((string)(this[this.tableDepartmentStockOut.type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_name\' in table \'DepartmentStockOut\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartmentStockOut.type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint department_id {
                get {
                    return ((uint)(this[this.tableDepartmentStockOut.department_idColumn]));
                }
                set {
                    this[this.tableDepartmentStockOut.department_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string department_name {
                get {
                    try {
                        return ((string)(this[this.tableDepartmentStockOut.department_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'department_name\' in table \'DepartmentStockOut\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartmentStockOut.department_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address {
                get {
                    try {
                        return ((string)(this[this.tableDepartmentStockOut.addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'address\' in table \'DepartmentStockOut\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartmentStockOut.addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint stock_out_id {
                get {
                    return ((uint)(this[this.tableDepartmentStockOut.stock_out_idColumn]));
                }
                set {
                    this[this.tableDepartmentStockOut.stock_out_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string defect_status_name {
                get {
                    return ((string)(this[this.tableDepartmentStockOut.defect_status_nameColumn]));
                }
                set {
                    this[this.tableDepartmentStockOut.defect_status_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stock_out_date {
                get {
                    try {
                        return ((string)(this[this.tableDepartmentStockOut.stock_out_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'stock_out_date\' in table \'DepartmentStockOut\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartmentStockOut.stock_out_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_id {
                get {
                    return ((string)(this[this.tableDepartmentStockOut.product_idColumn]));
                }
                set {
                    this[this.tableDepartmentStockOut.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tableDepartmentStockOut.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'DepartmentStockOut\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartmentStockOut.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color_name {
                get {
                    try {
                        return ((string)(this[this.tableDepartmentStockOut.color_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color_name\' in table \'DepartmentStockOut\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartmentStockOut.color_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string size_name {
                get {
                    try {
                        return ((string)(this[this.tableDepartmentStockOut.size_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'size_name\' in table \'DepartmentStockOut\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartmentStockOut.size_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal quantity {
                get {
                    try {
                        return ((decimal)(this[this.tableDepartmentStockOut.quantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'quantity\' in table \'DepartmentStockOut\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartmentStockOut.quantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dest_department_name {
                get {
                    try {
                        return ((string)(this[this.tableDepartmentStockOut.dest_department_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dest_department_name\' in table \'DepartmentStockOut\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableDepartmentStockOut.dest_department_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal price {
                get {
                    try {
                        return ((decimal)(this[this.tableDepartmentStockOut.priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price\' in table \'DepartmentStockOut\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartmentStockOut.priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype_nameNull() {
                return this.IsNull(this.tableDepartmentStockOut.type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype_nameNull() {
                this[this.tableDepartmentStockOut.type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdepartment_nameNull() {
                return this.IsNull(this.tableDepartmentStockOut.department_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdepartment_nameNull() {
                this[this.tableDepartmentStockOut.department_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaddressNull() {
                return this.IsNull(this.tableDepartmentStockOut.addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaddressNull() {
                this[this.tableDepartmentStockOut.addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstock_out_dateNull() {
                return this.IsNull(this.tableDepartmentStockOut.stock_out_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstock_out_dateNull() {
                this[this.tableDepartmentStockOut.stock_out_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tableDepartmentStockOut.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tableDepartmentStockOut.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscolor_nameNull() {
                return this.IsNull(this.tableDepartmentStockOut.color_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcolor_nameNull() {
                this[this.tableDepartmentStockOut.color_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issize_nameNull() {
                return this.IsNull(this.tableDepartmentStockOut.size_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsize_nameNull() {
                this[this.tableDepartmentStockOut.size_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsquantityNull() {
                return this.IsNull(this.tableDepartmentStockOut.quantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetquantityNull() {
                this[this.tableDepartmentStockOut.quantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdest_department_nameNull() {
                return this.IsNull(this.tableDepartmentStockOut.dest_department_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdest_department_nameNull() {
                this[this.tableDepartmentStockOut.dest_department_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspriceNull() {
                return this.IsNull(this.tableDepartmentStockOut.priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpriceNull() {
                this[this.tableDepartmentStockOut.priceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AllDepartmentPurchaseOrderReportRow : global::System.Data.DataRow {
            
            private AllDepartmentPurchaseOrderReportDataTable tableAllDepartmentPurchaseOrderReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AllDepartmentPurchaseOrderReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAllDepartmentPurchaseOrderReport = ((AllDepartmentPurchaseOrderReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string working_date {
                get {
                    try {
                        return ((string)(this[this.tableAllDepartmentPurchaseOrderReport.working_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'working_date\' in table \'AllDepartmentPurchaseOrderReport\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllDepartmentPurchaseOrderReport.working_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string poid {
                get {
                    return ((string)(this[this.tableAllDepartmentPurchaseOrderReport.poidColumn]));
                }
                set {
                    this[this.tableAllDepartmentPurchaseOrderReport.poidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tableAllDepartmentPurchaseOrderReport.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'AllDepartmentPurchaseOrderReport\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllDepartmentPurchaseOrderReport.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color_name {
                get {
                    try {
                        return ((string)(this[this.tableAllDepartmentPurchaseOrderReport.color_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color_name\' in table \'AllDepartmentPurchaseOrderReport\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllDepartmentPurchaseOrderReport.color_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string size_name {
                get {
                    try {
                        return ((string)(this[this.tableAllDepartmentPurchaseOrderReport.size_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'size_name\' in table \'AllDepartmentPurchaseOrderReport\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableAllDepartmentPurchaseOrderReport.size_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_name {
                get {
                    try {
                        return ((string)(this[this.tableAllDepartmentPurchaseOrderReport.type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_name\' in table \'AllDepartmentPurchaseOrderReport\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableAllDepartmentPurchaseOrderReport.type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string department_name {
                get {
                    try {
                        return ((string)(this[this.tableAllDepartmentPurchaseOrderReport.department_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'department_name\' in table \'AllDepartmentPurchaseOrderReport" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllDepartmentPurchaseOrderReport.department_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal sellqty {
                get {
                    try {
                        return ((decimal)(this[this.tableAllDepartmentPurchaseOrderReport.sellqtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sellqty\' in table \'AllDepartmentPurchaseOrderReport\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableAllDepartmentPurchaseOrderReport.sellqtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal sellamount {
                get {
                    try {
                        return ((decimal)(this[this.tableAllDepartmentPurchaseOrderReport.sellamountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sellamount\' in table \'AllDepartmentPurchaseOrderReport\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllDepartmentPurchaseOrderReport.sellamountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal retqty {
                get {
                    try {
                        return ((decimal)(this[this.tableAllDepartmentPurchaseOrderReport.retqtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'retqty\' in table \'AllDepartmentPurchaseOrderReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableAllDepartmentPurchaseOrderReport.retqtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal retamount {
                get {
                    try {
                        return ((decimal)(this[this.tableAllDepartmentPurchaseOrderReport.retamountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'retamount\' in table \'AllDepartmentPurchaseOrderReport\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableAllDepartmentPurchaseOrderReport.retamountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string issue_date {
                get {
                    try {
                        return ((string)(this[this.tableAllDepartmentPurchaseOrderReport.issue_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'issue_date\' in table \'AllDepartmentPurchaseOrderReport\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllDepartmentPurchaseOrderReport.issue_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isworking_dateNull() {
                return this.IsNull(this.tableAllDepartmentPurchaseOrderReport.working_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setworking_dateNull() {
                this[this.tableAllDepartmentPurchaseOrderReport.working_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tableAllDepartmentPurchaseOrderReport.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tableAllDepartmentPurchaseOrderReport.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscolor_nameNull() {
                return this.IsNull(this.tableAllDepartmentPurchaseOrderReport.color_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcolor_nameNull() {
                this[this.tableAllDepartmentPurchaseOrderReport.color_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issize_nameNull() {
                return this.IsNull(this.tableAllDepartmentPurchaseOrderReport.size_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsize_nameNull() {
                this[this.tableAllDepartmentPurchaseOrderReport.size_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype_nameNull() {
                return this.IsNull(this.tableAllDepartmentPurchaseOrderReport.type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype_nameNull() {
                this[this.tableAllDepartmentPurchaseOrderReport.type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdepartment_nameNull() {
                return this.IsNull(this.tableAllDepartmentPurchaseOrderReport.department_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdepartment_nameNull() {
                this[this.tableAllDepartmentPurchaseOrderReport.department_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssellqtyNull() {
                return this.IsNull(this.tableAllDepartmentPurchaseOrderReport.sellqtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsellqtyNull() {
                this[this.tableAllDepartmentPurchaseOrderReport.sellqtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssellamountNull() {
                return this.IsNull(this.tableAllDepartmentPurchaseOrderReport.sellamountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsellamountNull() {
                this[this.tableAllDepartmentPurchaseOrderReport.sellamountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsretqtyNull() {
                return this.IsNull(this.tableAllDepartmentPurchaseOrderReport.retqtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetretqtyNull() {
                this[this.tableAllDepartmentPurchaseOrderReport.retqtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsretamountNull() {
                return this.IsNull(this.tableAllDepartmentPurchaseOrderReport.retamountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetretamountNull() {
                this[this.tableAllDepartmentPurchaseOrderReport.retamountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isissue_dateNull() {
                return this.IsNull(this.tableAllDepartmentPurchaseOrderReport.issue_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setissue_dateNull() {
                this[this.tableAllDepartmentPurchaseOrderReport.issue_dateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StockEvaluationReportRow : global::System.Data.DataRow {
            
            private StockEvaluationReportDataTable tableStockEvaluationReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockEvaluationReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStockEvaluationReport = ((StockEvaluationReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint TYPE_ID {
                get {
                    try {
                        return ((uint)(this[this.tableStockEvaluationReport.TYPE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYPE_ID\' in table \'StockEvaluationReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockEvaluationReport.TYPE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TYPE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableStockEvaluationReport.TYPE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYPE_NAME\' in table \'StockEvaluationReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockEvaluationReport.TYPE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_MASTER_ID {
                get {
                    try {
                        return ((string)(this[this.tableStockEvaluationReport.PRODUCT_MASTER_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT_MASTER_ID\' in table \'StockEvaluationReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableStockEvaluationReport.PRODUCT_MASTER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableStockEvaluationReport.PRODUCT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRODUCT_NAME\' in table \'StockEvaluationReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockEvaluationReport.PRODUCT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COLOR_NAME {
                get {
                    try {
                        return ((string)(this[this.tableStockEvaluationReport.COLOR_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLOR_NAME\' in table \'StockEvaluationReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockEvaluationReport.COLOR_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SIZE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableStockEvaluationReport.SIZE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIZE_NAME\' in table \'StockEvaluationReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockEvaluationReport.SIZE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QUANTITY {
                get {
                    try {
                        return ((decimal)(this[this.tableStockEvaluationReport.QUANTITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QUANTITY\' in table \'StockEvaluationReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockEvaluationReport.QUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GOODQUANTITY {
                get {
                    try {
                        return ((decimal)(this[this.tableStockEvaluationReport.GOODQUANTITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GOODQUANTITY\' in table \'StockEvaluationReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockEvaluationReport.GOODQUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int REALQUANTITY {
                get {
                    return ((int)(this[this.tableStockEvaluationReport.REALQUANTITYColumn]));
                }
                set {
                    this[this.tableStockEvaluationReport.REALQUANTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableStockEvaluationReport.CREATE_DATEColumn]));
                }
                set {
                    this[this.tableStockEvaluationReport.CREATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uint DEPARTMENT_ID {
                get {
                    return ((uint)(this[this.tableStockEvaluationReport.DEPARTMENT_IDColumn]));
                }
                set {
                    this[this.tableStockEvaluationReport.DEPARTMENT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPARTMENT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableStockEvaluationReport.DEPARTMENT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEPARTMENT_NAME\' in table \'StockEvaluationReport\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableStockEvaluationReport.DEPARTMENT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_ID {
                get {
                    return ((string)(this[this.tableStockEvaluationReport.PRODUCT_IDColumn]));
                }
                set {
                    this[this.tableStockEvaluationReport.PRODUCT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTYPE_IDNull() {
                return this.IsNull(this.tableStockEvaluationReport.TYPE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTYPE_IDNull() {
                this[this.tableStockEvaluationReport.TYPE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTYPE_NAMENull() {
                return this.IsNull(this.tableStockEvaluationReport.TYPE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTYPE_NAMENull() {
                this[this.tableStockEvaluationReport.TYPE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCT_MASTER_IDNull() {
                return this.IsNull(this.tableStockEvaluationReport.PRODUCT_MASTER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCT_MASTER_IDNull() {
                this[this.tableStockEvaluationReport.PRODUCT_MASTER_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCT_NAMENull() {
                return this.IsNull(this.tableStockEvaluationReport.PRODUCT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCT_NAMENull() {
                this[this.tableStockEvaluationReport.PRODUCT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOLOR_NAMENull() {
                return this.IsNull(this.tableStockEvaluationReport.COLOR_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOLOR_NAMENull() {
                this[this.tableStockEvaluationReport.COLOR_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIZE_NAMENull() {
                return this.IsNull(this.tableStockEvaluationReport.SIZE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIZE_NAMENull() {
                this[this.tableStockEvaluationReport.SIZE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQUANTITYNull() {
                return this.IsNull(this.tableStockEvaluationReport.QUANTITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQUANTITYNull() {
                this[this.tableStockEvaluationReport.QUANTITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGOODQUANTITYNull() {
                return this.IsNull(this.tableStockEvaluationReport.GOODQUANTITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGOODQUANTITYNull() {
                this[this.tableStockEvaluationReport.GOODQUANTITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPARTMENT_NAMENull() {
                return this.IsNull(this.tableStockEvaluationReport.DEPARTMENT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPARTMENT_NAMENull() {
                this[this.tableStockEvaluationReport.DEPARTMENT_NAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ExtraCustomizeDepartmentReportRow : global::System.Data.DataRow {
            
            private ExtraCustomizeDepartmentReportDataTable tableExtraCustomizeDepartmentReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ExtraCustomizeDepartmentReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableExtraCustomizeDepartmentReport = ((ExtraCustomizeDepartmentReportDataTable)(this.Table));
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class reStockinProductRowChangeEvent : global::System.EventArgs {
            
            private reStockinProductRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public reStockinProductRowChangeEvent(reStockinProductRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public reStockinProductRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class purchaseOrderRowChangeEvent : global::System.EventArgs {
            
            private purchaseOrderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public purchaseOrderRowChangeEvent(purchaseOrderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public purchaseOrderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class purchaseDetailsRowChangeEvent : global::System.EventArgs {
            
            private purchaseDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public purchaseDetailsRowChangeEvent(purchaseDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public purchaseDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TmpStockoutRowChangeEvent : global::System.EventArgs {
            
            private TmpStockoutRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TmpStockoutRowChangeEvent(TmpStockoutRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TmpStockoutRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class supplierStockoutRowChangeEvent : global::System.EventArgs {
            
            private supplierStockoutRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public supplierStockoutRowChangeEvent(supplierStockoutRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public supplierStockoutRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StockStatisticRowChangeEvent : global::System.EventArgs {
            
            private StockStatisticRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockStatisticRowChangeEvent(StockStatisticRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockStatisticRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class stockInRowChangeEvent : global::System.EventArgs {
            
            private stockInRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockInRowChangeEvent(stockInRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockInRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class deptStockStatisticRowChangeEvent : global::System.EventArgs {
            
            private deptStockStatisticRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deptStockStatisticRowChangeEvent(deptStockStatisticRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deptStockStatisticRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class returnPOrderRowChangeEvent : global::System.EventArgs {
            
            private returnPOrderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public returnPOrderRowChangeEvent(returnPOrderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public returnPOrderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class departmentStockInRowChangeEvent : global::System.EventArgs {
            
            private departmentStockInRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public departmentStockInRowChangeEvent(departmentStockInRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public departmentStockInRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class departmentRowChangeEvent : global::System.EventArgs {
            
            private departmentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public departmentRowChangeEvent(departmentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public departmentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class allStockRowChangeEvent : global::System.EventArgs {
            
            private allStockRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public allStockRowChangeEvent(allStockRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public allStockRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class returnMainRowChangeEvent : global::System.EventArgs {
            
            private returnMainRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public returnMainRowChangeEvent(returnMainRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public returnMainRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class deptTempStockoutRowChangeEvent : global::System.EventArgs {
            
            private deptTempStockoutRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deptTempStockoutRowChangeEvent(deptTempStockoutRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deptTempStockoutRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class deptReStockRowChangeEvent : global::System.EventArgs {
            
            private deptReStockRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deptReStockRowChangeEvent(deptReStockRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public deptReStockRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class mainStockOutRowChangeEvent : global::System.EventArgs {
            
            private mainStockOutRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mainStockOutRowChangeEvent(mainStockOutRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mainStockOutRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class stockOutRowChangeEvent : global::System.EventArgs {
            
            private stockOutRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockOutRowChangeEvent(stockOutRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockOutRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class employeeRowChangeEvent : global::System.EventArgs {
            
            private employeeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeeRowChangeEvent(employeeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class workingdayRowChangeEvent : global::System.EventArgs {
            
            private workingdayRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public workingdayRowChangeEvent(workingdayRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public workingdayRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class saleStatisticRowChangeEvent : global::System.EventArgs {
            
            private saleStatisticRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public saleStatisticRowChangeEvent(saleStatisticRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public saleStatisticRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PurchaseOrderPeriodRowChangeEvent : global::System.EventArgs {
            
            private PurchaseOrderPeriodRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderPeriodRowChangeEvent(PurchaseOrderPeriodRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderPeriodRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PurchaseOrderDetailReportRowChangeEvent : global::System.EventArgs {
            
            private PurchaseOrderDetailReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderDetailReportRowChangeEvent(PurchaseOrderDetailReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderDetailReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PurchaseOrderReportRowChangeEvent : global::System.EventArgs {
            
            private PurchaseOrderReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderReportRowChangeEvent(PurchaseOrderReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomizeReportRowChangeEvent : global::System.EventArgs {
            
            private CustomizeReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomizeReportRowChangeEvent(CustomizeReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomizeReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomizeDepartmentReportRowChangeEvent : global::System.EventArgs {
            
            private CustomizeDepartmentReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomizeDepartmentReportRowChangeEvent(CustomizeDepartmentReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomizeDepartmentReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomizeDepartmentDetailReportRowChangeEvent : global::System.EventArgs {
            
            private CustomizeDepartmentDetailReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomizeDepartmentDetailReportRowChangeEvent(CustomizeDepartmentDetailReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomizeDepartmentDetailReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class product_typeRowChangeEvent : global::System.EventArgs {
            
            private product_typeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_typeRowChangeEvent(product_typeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_typeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DepartmentStockOutRowChangeEvent : global::System.EventArgs {
            
            private DepartmentStockOutRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentStockOutRowChangeEvent(DepartmentStockOutRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentStockOutRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AllDepartmentPurchaseOrderReportRowChangeEvent : global::System.EventArgs {
            
            private AllDepartmentPurchaseOrderReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AllDepartmentPurchaseOrderReportRowChangeEvent(AllDepartmentPurchaseOrderReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AllDepartmentPurchaseOrderReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StockEvaluationReportRowChangeEvent : global::System.EventArgs {
            
            private StockEvaluationReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockEvaluationReportRowChangeEvent(StockEvaluationReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockEvaluationReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ExtraCustomizeDepartmentReportRowChangeEvent : global::System.EventArgs {
            
            private ExtraCustomizeDepartmentReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExtraCustomizeDepartmentReportRowChangeEvent(ExtraCustomizeDepartmentReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExtraCustomizeDepartmentReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace POSReports.posDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RestockinProductTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RestockinProductTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "reStockinProduct";
            tableMapping.ColumnMappings.Add("type_name", "type_name");
            tableMapping.ColumnMappings.Add("product_name", "product_name");
            tableMapping.ColumnMappings.Add("STOCK_IN_ID", "STOCK_IN_ID");
            tableMapping.ColumnMappings.Add("STOCK_IN_DATE", "STOCK_IN_DATE");
            tableMapping.ColumnMappings.Add("PRODUCT_ID", "PRODUCT_ID");
            tableMapping.ColumnMappings.Add("QUANTITY", "QUANTITY");
            tableMapping.ColumnMappings.Add("PRICE", "PRICE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`ReStockInProduct`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.reStockinProductDataTable dataTable, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.reStockinProductDataTable GetData(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            posDataSet.reStockinProductDataTable dataTable = new posDataSet.reStockinProductDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PurchaseOrderTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PurchaseOrderTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "purchaseOrder";
            tableMapping.ColumnMappings.Add("PURCHASE_ORDER_ID", "PURCHASE_ORDER_ID");
            tableMapping.ColumnMappings.Add("TYPE_NAME", "TYPE_NAME");
            tableMapping.ColumnMappings.Add("PRODUCT_NAME", "PRODUCT_NAME");
            tableMapping.ColumnMappings.Add("product_id", "product_id");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("Price", "Price");
            tableMapping.ColumnMappings.Add("color_name", "color_name");
            tableMapping.ColumnMappings.Add("size_name", "size_name");
            tableMapping.ColumnMappings.Add("department_name", "department_name");
            tableMapping.ColumnMappings.Add("address", "address");
            tableMapping.ColumnMappings.Add("date_format(purchase_order.CREATE_DATE, \'%d/%m/%Y\')", "date_format(purchase_order_CREATE_DATE, \'%d/%m/%Y\')");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT       date_format(purchase_order.CREATE_DATE, '%d/%m/%Y'), department_name, address, purchase_order_detail.PURCHASE_ORDER_ID, TYPE_NAME, purchase_order_detail.PRODUCT_ID AS product_id, 
                         PRODUCT_NAME, color_name, size_name, SUM(purchase_order_detail.QUANTITY) AS Quantity, SUM(purchase_order_detail.PRICE) AS Price
FROM            allproduct pr INNER JOIN 
                         purchase_order_detail ON pr.PRODUCT_ID = purchase_order_detail.PRODUCT_ID INNER JOIN
                         purchase_order ON purchase_order_detail.PURCHASE_ORDER_ID = purchase_order.PURCHASE_ORDER_ID
left join department dpt on dpt.department_id=purchase_order.department_id
WHERE        (purchase_order_detail.DEL_FLG = 0) AND (purchase_order.CREATE_DATE >= @FromDate) AND 
                         (purchase_order.CREATE_DATE <= @ToDate) and purchase_order.department_id >=@FromDept and purchase_order.department_id <=@ToDept
GROUP BY purchase_order.create_date, TYPE_NAME, PRODUCT_NAME, color_name, size_name 
order by purchase_order.create_date";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.IsNullable = true;
            param.SourceColumn = "CREATE_DATE";
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.IsNullable = true;
            param.SourceColumn = "CREATE_DATE";
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@FromDept";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "DEPARTMENT_ID";
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ToDept";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "DEPARTMENT_ID";
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.purchaseOrderDataTable dataTable, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, int FromDept, int ToDept) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(FromDept));
            this.Adapter.SelectCommand.Parameters[3].Value = ((int)(ToDept));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.purchaseOrderDataTable GetData(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, int FromDept, int ToDept) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(FromDept));
            this.Adapter.SelectCommand.Parameters[3].Value = ((int)(ToDept));
            posDataSet.purchaseOrderDataTable dataTable = new posDataSet.purchaseOrderDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PurchaseDetailsTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PurchaseDetailsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "purchaseDetails";
            tableMapping.ColumnMappings.Add("PURCHASE_ORDER_ID", "PURCHASE_ORDER_ID");
            tableMapping.ColumnMappings.Add("CREATE_DATE", "CREATE_DATE");
            tableMapping.ColumnMappings.Add("type_name", "type_name");
            tableMapping.ColumnMappings.Add("PRODUCT_ID", "PRODUCT_ID");
            tableMapping.ColumnMappings.Add("product_name", "product_name");
            tableMapping.ColumnMappings.Add("color_name", "color_name");
            tableMapping.ColumnMappings.Add("size_name", "size_name");
            tableMapping.ColumnMappings.Add("QUANTITY", "QUANTITY");
            tableMapping.ColumnMappings.Add("PRICE", "PRICE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        ordd.PURCHASE_ORDER_ID, ord.CREATE_DATE, prd.type_name, ordd.PRODUCT_ID, prd.product_name, prd.color_name, prd.size_name, ordd.QUANTITY, 
                         ordd.PRICE
FROM            purchase_order ord INNER JOIN
                         purchase_order_detail ordd ON ord.PURCHASE_ORDER_ID = ordd.PURCHASE_ORDER_ID INNER JOIN
                         allproduct prd ON ordd.PRODUCT_ID = prd.product_id
where ord.create_date>=@FromDate and ord.Create_Date<=@ToDate 
ORDER BY ord.CREATE_DATE asc";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.IsNullable = true;
            param.SourceColumn = "CREATE_DATE";
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.IsNullable = true;
            param.SourceColumn = "CREATE_DATE";
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.purchaseDetailsDataTable dataTable, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.purchaseDetailsDataTable GetData(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            posDataSet.purchaseDetailsDataTable dataTable = new posDataSet.purchaseDetailsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TmpStockoutTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TmpStockoutTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TmpStockout";
            tableMapping.ColumnMappings.Add("stockout_id", "stockout_id");
            tableMapping.ColumnMappings.Add("stock_out_date", "stock_out_date");
            tableMapping.ColumnMappings.Add("type_name", "type_name");
            tableMapping.ColumnMappings.Add("product_id", "product_id");
            tableMapping.ColumnMappings.Add("product_name", "product_name");
            tableMapping.ColumnMappings.Add("quantity", "quantity");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`TmpStockout`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.TmpStockoutDataTable dataTable, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.TmpStockoutDataTable GetData(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            posDataSet.TmpStockoutDataTable dataTable = new posDataSet.TmpStockoutDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SupplierStockoutTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SupplierStockoutTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "supplierStockout";
            tableMapping.ColumnMappings.Add("type_name", "type_name");
            tableMapping.ColumnMappings.Add("product_name", "product_name");
            tableMapping.ColumnMappings.Add("quantity", "quantity");
            tableMapping.ColumnMappings.Add("STOCKOUT_ID", "STOCKOUT_ID");
            tableMapping.ColumnMappings.Add("STOCK_OUT_DATE", "STOCK_OUT_DATE");
            tableMapping.ColumnMappings.Add("PRODUCT_ID", "PRODUCT_ID");
            tableMapping.ColumnMappings.Add("DEFECT_STATUS_NAME", "DEFECT_STATUS_NAME");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        so.STOCKOUT_ID, so.STOCK_OUT_DATE, pr.type_name, sod.PRODUCT_ID, pr.product_name, SUM(sod.QUANTITY) AS quantity, df.DEFECT_STATUS_NAME
FROM            stock_out so INNER JOIN
                         stock_out_detail sod ON so.STOCKOUT_ID = sod.STOCKOUT_ID INNER JOIN
                         stock_defect_status df ON so.DEFECT_STATUS_ID = df.DEFECT_STATUS_ID INNER JOIN
                         allproduct pr ON sod.PRODUCT_ID = pr.product_id
WHERE        (so.DEFECT_STATUS_ID >= 5) AND (so.DEFECT_STATUS_ID <= 7) AND (so.DEL_FLG = 0) AND (sod.QUANTITY > 0) AND (so.STOCK_OUT_DATE >= @FromDate) AND 
                         (so.STOCK_OUT_DATE <= @ToDate)
GROUP BY pr.type_name, so.STOCK_OUT_DATE, pr.product_name, df.defect_status_id
ORDER BY so.STOCK_OUT_DATE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.IsNullable = true;
            param.SourceColumn = "STOCK_OUT_DATE";
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.IsNullable = true;
            param.SourceColumn = "STOCK_OUT_DATE";
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.supplierStockoutDataTable dataTable, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.supplierStockoutDataTable GetData(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            posDataSet.supplierStockoutDataTable dataTable = new posDataSet.supplierStockoutDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StockStatisticTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StockStatisticTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "StockStatistic";
            tableMapping.ColumnMappings.Add("error_qty", "error_qty");
            tableMapping.ColumnMappings.Add("prestk_qty", "prestk_qty");
            tableMapping.ColumnMappings.Add("instock_qty", "instock_qty");
            tableMapping.ColumnMappings.Add("dmg_qty", "dmg_qty");
            tableMapping.ColumnMappings.Add("stkout_qty", "stkout_qty");
            tableMapping.ColumnMappings.Add("tmpout_qty", "tmpout_qty");
            tableMapping.ColumnMappings.Add("rtn_qty", "rtn_qty");
            tableMapping.ColumnMappings.Add("destroy_qty", "destroy_qty");
            tableMapping.ColumnMappings.Add("realstock", "realstock");
            tableMapping.ColumnMappings.Add("mainrtnqty", "mainrtnqty");
            tableMapping.ColumnMappings.Add("TYPE_NAME", "TYPE_NAME");
            tableMapping.ColumnMappings.Add("PRODUCT_ID", "PRODUCT_ID");
            tableMapping.ColumnMappings.Add("COLOR_NAME", "COLOR_NAME");
            tableMapping.ColumnMappings.Add("SIZE_NAME", "SIZE_NAME");
            tableMapping.ColumnMappings.Add("type_name", "type_name");
            tableMapping.ColumnMappings.Add("product_id", "product_id");
            tableMapping.ColumnMappings.Add("product_name", "product_name");
            tableMapping.ColumnMappings.Add("color_name", "color_name");
            tableMapping.ColumnMappings.Add("size_name", "size_name");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`ExtraStockStatistic`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.StockStatisticDataTable dataTable, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.StockStatisticDataTable GetData(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            posDataSet.StockStatisticDataTable dataTable = new posDataSet.StockStatisticDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StockInTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StockInTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "stockIn";
            tableMapping.ColumnMappings.Add("STOCK_IN_ID", "STOCK_IN_ID");
            tableMapping.ColumnMappings.Add("type_name", "type_name");
            tableMapping.ColumnMappings.Add("PRODUCT_ID", "PRODUCT_ID");
            tableMapping.ColumnMappings.Add("product_name", "product_name");
            tableMapping.ColumnMappings.Add("quantity", "quantity");
            tableMapping.ColumnMappings.Add("price", "price");
            tableMapping.ColumnMappings.Add("color_name", "color_name");
            tableMapping.ColumnMappings.Add("size_name", "size_name");
            tableMapping.ColumnMappings.Add("stock_in_date", "stock_in_date");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`StockIn`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.stockInDataTable dataTable, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.stockInDataTable GetData(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            posDataSet.stockInDataTable dataTable = new posDataSet.stockInDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DeptStockStatisticTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DeptStockStatisticTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "deptStockStatistic";
            tableMapping.ColumnMappings.Add("type_name", "type_name");
            tableMapping.ColumnMappings.Add("product_id", "product_id");
            tableMapping.ColumnMappings.Add("product_name", "product_name");
            tableMapping.ColumnMappings.Add("error_qty", "error_qty");
            tableMapping.ColumnMappings.Add("color_name", "color_name");
            tableMapping.ColumnMappings.Add("size_name", "size_name");
            tableMapping.ColumnMappings.Add("prestk_qty", "prestk_qty");
            tableMapping.ColumnMappings.Add("instock_qty", "instock_qty");
            tableMapping.ColumnMappings.Add("dmg_qty", "dmg_qty");
            tableMapping.ColumnMappings.Add("stkout_qty", "stkout_qty");
            tableMapping.ColumnMappings.Add("tmpout_qty", "tmpout_qty");
            tableMapping.ColumnMappings.Add("rtn_qty", "rtn_qty");
            tableMapping.ColumnMappings.Add("destroy_qty", "destroy_qty");
            tableMapping.ColumnMappings.Add("realstock", "realstock");
            tableMapping.ColumnMappings.Add("bkpro", "bkpro");
            tableMapping.ColumnMappings.Add("department_name", "department_name");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`DeptStockStatistic`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "deptID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.deptStockStatisticDataTable dataTable, global::System.Nullable<int> deptID, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((deptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(deptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.deptStockStatisticDataTable GetData(global::System.Nullable<int> deptID, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((deptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(deptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            posDataSet.deptStockStatisticDataTable dataTable = new posDataSet.deptStockStatisticDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ReturnPOrderTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ReturnPOrderTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "returnPOrder";
            tableMapping.ColumnMappings.Add("type_name", "type_name");
            tableMapping.ColumnMappings.Add("product_name", "product_name");
            tableMapping.ColumnMappings.Add("color_name", "color_name");
            tableMapping.ColumnMappings.Add("size_name", "size_name");
            tableMapping.ColumnMappings.Add("quantity", "quantity");
            tableMapping.ColumnMappings.Add("return_date", "return_date");
            tableMapping.ColumnMappings.Add("price", "price");
            tableMapping.ColumnMappings.Add("DEPARTMENT_NAME", "DEPARTMENT_NAME");
            tableMapping.ColumnMappings.Add("ADDRESS", "ADDRESS");
            tableMapping.ColumnMappings.Add("PRODUCT_ID", "PRODUCT_ID");
            tableMapping.ColumnMappings.Add("PURCHASE_ORDER_ID", "PURCHASE_ORDER_ID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`ReturnPOrder`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "deptID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.returnPOrderDataTable dataTable, global::System.Nullable<int> deptID, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((deptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(deptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.returnPOrderDataTable GetData(global::System.Nullable<int> deptID, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((deptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(deptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            posDataSet.returnPOrderDataTable dataTable = new posDataSet.returnPOrderDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DepartmentStockInTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DepartmentStockInTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "departmentStockIn";
            tableMapping.ColumnMappings.Add("type_name", "type_name");
            tableMapping.ColumnMappings.Add("department_id", "department_id");
            tableMapping.ColumnMappings.Add("department_name", "department_name");
            tableMapping.ColumnMappings.Add("stock_in_id", "stock_in_id");
            tableMapping.ColumnMappings.Add("product_id", "product_id");
            tableMapping.ColumnMappings.Add("product_name", "product_name");
            tableMapping.ColumnMappings.Add("sum(dstkdin.quantity)", "sum(dstkdin_quantity)");
            tableMapping.ColumnMappings.Add("price", "price");
            tableMapping.ColumnMappings.Add("color_name", "color_name");
            tableMapping.ColumnMappings.Add("size_name", "size_name");
            tableMapping.ColumnMappings.Add("address", "address");
            tableMapping.ColumnMappings.Add("stock_in_date", "stock_in_date");
            tableMapping.ColumnMappings.Add("quantity", "quantity");
            tableMapping.ColumnMappings.Add("SUM(dstkdindet.quantity)", "SUM(dstkdindet_quantity)");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`DepartmentStockIn`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "deptID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.departmentStockInDataTable dataTable, global::System.Nullable<int> deptID, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((deptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(deptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.departmentStockInDataTable GetData(global::System.Nullable<int> deptID, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((deptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(deptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            posDataSet.departmentStockInDataTable dataTable = new posDataSet.departmentStockInDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class departmentTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public departmentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "department";
            tableMapping.ColumnMappings.Add("DEPARTMENT_ID", "DEPARTMENT_ID");
            tableMapping.ColumnMappings.Add("DEPARTMENT_NAME", "DEPARTMENT_NAME");
            tableMapping.ColumnMappings.Add("ADDRESS", "ADDRESS");
            tableMapping.ColumnMappings.Add("MANAGER_ID", "MANAGER_ID");
            tableMapping.ColumnMappings.Add("ACTIVE", "ACTIVE");
            tableMapping.ColumnMappings.Add("CREATE_DATE", "CREATE_DATE");
            tableMapping.ColumnMappings.Add("CREATE_ID", "CREATE_ID");
            tableMapping.ColumnMappings.Add("UPDATE_DATE", "UPDATE_DATE");
            tableMapping.ColumnMappings.Add("UPDATE_ID", "UPDATE_ID");
            tableMapping.ColumnMappings.Add("EXCLUSIVE_KEY", "EXCLUSIVE_KEY");
            tableMapping.ColumnMappings.Add("DEL_FLG", "DEL_FLG");
            tableMapping.ColumnMappings.Add("START_DATE", "START_DATE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`Department`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.departmentDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.departmentDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            posDataSet.departmentDataTable dataTable = new posDataSet.departmentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AllStockTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AllStockTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "allStock";
            tableMapping.ColumnMappings.Add("type_name", "type_name");
            tableMapping.ColumnMappings.Add("product_id", "product_id");
            tableMapping.ColumnMappings.Add("product_name", "product_name");
            tableMapping.ColumnMappings.Add("color_name", "color_name");
            tableMapping.ColumnMappings.Add("size_name", "size_name");
            tableMapping.ColumnMappings.Add("preqty", "preqty");
            tableMapping.ColumnMappings.Add("inqty", "inqty");
            tableMapping.ColumnMappings.Add("dpreqty", "dpreqty");
            tableMapping.ColumnMappings.Add("moutqty", "moutqty");
            tableMapping.ColumnMappings.Add("maindmg", "maindmg");
            tableMapping.ColumnMappings.Add("dpoutqty", "dpoutqty");
            tableMapping.ColumnMappings.Add("dpdmg", "dpdmg");
            tableMapping.ColumnMappings.Add("mainrtn", "mainrtn");
            tableMapping.ColumnMappings.Add("saleqty", "saleqty");
            tableMapping.ColumnMappings.Add("rtnpr", "rtnpr");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`AllStockReport`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.allStockDataTable dataTable, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.allStockDataTable GetData(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            posDataSet.allStockDataTable dataTable = new posDataSet.allStockDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ReturnMainTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ReturnMainTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "returnMain";
            tableMapping.ColumnMappings.Add("type_name", "type_name");
            tableMapping.ColumnMappings.Add("product_id", "product_id");
            tableMapping.ColumnMappings.Add("product_name", "product_name");
            tableMapping.ColumnMappings.Add("color_name", "color_name");
            tableMapping.ColumnMappings.Add("size_name", "size_name");
            tableMapping.ColumnMappings.Add("STOCK_OUT_DATE", "STOCK_OUT_DATE");
            tableMapping.ColumnMappings.Add("DEPARTMENT_NAME", "DEPARTMENT_NAME");
            tableMapping.ColumnMappings.Add("ADDRESS", "ADDRESS");
            tableMapping.ColumnMappings.Add("quantity", "quantity");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`ReturnMain`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "deptID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.returnMainDataTable dataTable, global::System.Nullable<int> deptID, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((deptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(deptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.returnMainDataTable GetData(global::System.Nullable<int> deptID, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((deptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(deptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            posDataSet.returnMainDataTable dataTable = new posDataSet.returnMainDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DeptTempStockoutTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DeptTempStockoutTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "deptTempStockout";
            tableMapping.ColumnMappings.Add("department_name", "department_name");
            tableMapping.ColumnMappings.Add("type_name", "type_name");
            tableMapping.ColumnMappings.Add("product_id", "product_id");
            tableMapping.ColumnMappings.Add("product_name", "product_name");
            tableMapping.ColumnMappings.Add("color_name", "color_name");
            tableMapping.ColumnMappings.Add("size_name", "size_name");
            tableMapping.ColumnMappings.Add("sum(quantity)", "sum(quantity)");
            tableMapping.ColumnMappings.Add("address", "address");
            tableMapping.ColumnMappings.Add("stock_out_date", "stock_out_date");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`DeptTempStockout`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "deptID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.deptTempStockoutDataTable dataTable, global::System.Nullable<int> deptID, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((deptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(deptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.deptTempStockoutDataTable GetData(global::System.Nullable<int> deptID, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((deptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(deptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            posDataSet.deptTempStockoutDataTable dataTable = new posDataSet.deptTempStockoutDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DeptReStockTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DeptReStockTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "deptReStock";
            tableMapping.ColumnMappings.Add("department_name", "department_name");
            tableMapping.ColumnMappings.Add("type_name", "type_name");
            tableMapping.ColumnMappings.Add("product_id", "product_id");
            tableMapping.ColumnMappings.Add("product_name", "product_name");
            tableMapping.ColumnMappings.Add("color_name", "color_name");
            tableMapping.ColumnMappings.Add("size_name", "size_name");
            tableMapping.ColumnMappings.Add("sum(quantity)", "sum(quantity)");
            tableMapping.ColumnMappings.Add("sum(dstk.stock_in_cost)", "sum(dstk_stock_in_cost)");
            tableMapping.ColumnMappings.Add("address", "address");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`DeptReStock`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "deptID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.deptReStockDataTable dataTable, global::System.Nullable<int> deptID, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((deptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(deptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.deptReStockDataTable GetData(global::System.Nullable<int> deptID, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((deptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(deptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            posDataSet.deptReStockDataTable dataTable = new posDataSet.deptReStockDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MainStockOutTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MainStockOutTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "mainStockOut";
            tableMapping.ColumnMappings.Add("stock_out_date", "stock_out_date");
            tableMapping.ColumnMappings.Add("type_name", "type_name");
            tableMapping.ColumnMappings.Add("product_id", "product_id");
            tableMapping.ColumnMappings.Add("product_name", "product_name");
            tableMapping.ColumnMappings.Add("color_name", "color_name");
            tableMapping.ColumnMappings.Add("size_name", "size_name");
            tableMapping.ColumnMappings.Add("sum(quantity)", "sum(quantity)");
            tableMapping.ColumnMappings.Add("department_name", "department_name");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`MainStockOut`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "deptID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.mainStockOutDataTable dataTable, global::System.Nullable<int> deptID, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((deptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(deptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.mainStockOutDataTable GetData(global::System.Nullable<int> deptID, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((deptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(deptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            posDataSet.mainStockOutDataTable dataTable = new posDataSet.mainStockOutDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StockOutTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StockOutTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "stockOut";
            tableMapping.ColumnMappings.Add("type_name", "type_name");
            tableMapping.ColumnMappings.Add("product_id", "product_id");
            tableMapping.ColumnMappings.Add("product_name", "product_name");
            tableMapping.ColumnMappings.Add("color_name", "color_name");
            tableMapping.ColumnMappings.Add("size_name", "size_name");
            tableMapping.ColumnMappings.Add("department_id", "department_id");
            tableMapping.ColumnMappings.Add("department_name", "department_name");
            tableMapping.ColumnMappings.Add("sum(quantity)", "sum(quantity)");
            tableMapping.ColumnMappings.Add("price", "price");
            tableMapping.ColumnMappings.Add("stock_out_date", "stock_out_date");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`StockOut`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "DeptID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.stockOutDataTable dataTable, global::System.Nullable<int> DeptID, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((DeptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(DeptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.stockOutDataTable GetData(global::System.Nullable<int> DeptID, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((DeptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(DeptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            posDataSet.stockOutDataTable dataTable = new posDataSet.stockOutDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EmployeeTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EmployeeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "employee";
            tableMapping.ColumnMappings.Add("EMPLOYEE_ID", "EMPLOYEE_ID");
            tableMapping.ColumnMappings.Add("EMPLOYEE_NAME", "EMPLOYEE_NAME");
            tableMapping.ColumnMappings.Add("ADDRESS", "ADDRESS");
            tableMapping.ColumnMappings.Add("startdate", "startdate");
            tableMapping.ColumnMappings.Add("BARCODE", "BARCODE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`Employee`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.employeeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.employeeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            posDataSet.employeeDataTable dataTable = new posDataSet.employeeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WorkingdayTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WorkingdayTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "workingday";
            tableMapping.ColumnMappings.Add("employee_id", "employee_id");
            tableMapping.ColumnMappings.Add("employee_name", "employee_name");
            tableMapping.ColumnMappings.Add("barcode", "barcode");
            tableMapping.ColumnMappings.Add("wkday", "wkday");
            tableMapping.ColumnMappings.Add("start_time", "start_time");
            tableMapping.ColumnMappings.Add("end_time", "end_time");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`WorkingDay`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.workingdayDataTable dataTable, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.workingdayDataTable GetData(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            posDataSet.workingdayDataTable dataTable = new posDataSet.workingdayDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SaleStatisticTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SaleStatisticTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "saleStatistic";
            tableMapping.ColumnMappings.Add("prdate", "prdate");
            tableMapping.ColumnMappings.Add("department_name", "department_name");
            tableMapping.ColumnMappings.Add("address", "address");
            tableMapping.ColumnMappings.Add("PURCHASE_ORDER_ID", "PURCHASE_ORDER_ID");
            tableMapping.ColumnMappings.Add("TYPE_NAME", "TYPE_NAME");
            tableMapping.ColumnMappings.Add("product_id", "product_id");
            tableMapping.ColumnMappings.Add("PRODUCT_NAME", "PRODUCT_NAME");
            tableMapping.ColumnMappings.Add("color_name", "color_name");
            tableMapping.ColumnMappings.Add("size_name", "size_name");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("rtnqty", "rtnqty");
            tableMapping.ColumnMappings.Add("Price", "Price");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT       date_format(purchase_order.CREATE_DATE, '%d/%m/%Y') as prdate, department_name, address, purchase_order_detail.PURCHASE_ORDER_ID, TYPE_NAME, purchase_order_detail.PRODUCT_ID AS product_id,
                         PRODUCT_NAME, color_name, size_name, SUM(purchase_order_detail.QUANTITY) AS Quantity,
                         sum(rtn.quantity) as rtnqty, SUM(purchase_order_detail.PRICE) AS Price
FROM            allproduct pr INNER JOIN
                         purchase_order_detail ON pr.PRODUCT_ID = purchase_order_detail.PRODUCT_ID INNER JOIN
                         purchase_order ON purchase_order_detail.PURCHASE_ORDER_ID = purchase_order.PURCHASE_ORDER_ID
left join department dpt on dpt.department_id=purchase_order.department_id
left join return_po rtn on rtn.product_id=pr.product_id
WHERE        (purchase_order_detail.DEL_FLG = 0) AND (purchase_order.CREATE_DATE >= @FromDate) AND
                         (purchase_order.CREATE_DATE <= @ToDate)
                         and purchase_order.department_id >=@FromDeptId and purchase_order.department_id <=@ToDeptId
                         and return_date>=@FromDate and return_date<=@ToDate
GROUP BY purchase_order.create_date, TYPE_NAME, PRODUCT_NAME, color_name, size_name
order by purchase_order.create_date";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.IsNullable = true;
            param.SourceColumn = "CREATE_DATE";
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.IsNullable = true;
            param.SourceColumn = "CREATE_DATE";
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@FromDeptId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "DEPARTMENT_ID";
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@ToDeptId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "DEPARTMENT_ID";
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.saleStatisticDataTable dataTable, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, int FromDeptId, int ToDeptId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(FromDeptId));
            this.Adapter.SelectCommand.Parameters[3].Value = ((int)(ToDeptId));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.saleStatisticDataTable GetData(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, int FromDeptId, int ToDeptId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(FromDeptId));
            this.Adapter.SelectCommand.Parameters[3].Value = ((int)(ToDeptId));
            posDataSet.saleStatisticDataTable dataTable = new posDataSet.saleStatisticDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PurchaseOrderPeriodTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PurchaseOrderPeriodTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PurchaseOrderPeriod";
            tableMapping.ColumnMappings.Add("poid", "poid");
            tableMapping.ColumnMappings.Add("product_name", "product_name");
            tableMapping.ColumnMappings.Add("sellqty", "sellqty");
            tableMapping.ColumnMappings.Add("sellamount", "sellamount");
            tableMapping.ColumnMappings.Add("retqty", "retqty");
            tableMapping.ColumnMappings.Add("retamount", "retamount");
            tableMapping.ColumnMappings.Add("issue_date", "issue_date");
            tableMapping.ColumnMappings.Add("period", "period");
            tableMapping.ColumnMappings.Add("working_date", "working_date");
            tableMapping.ColumnMappings.Add("color_name", "color_name");
            tableMapping.ColumnMappings.Add("size_name", "size_name");
            tableMapping.ColumnMappings.Add("type_name", "type_name");
            tableMapping.ColumnMappings.Add("department_name", "department_name");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`PurchaseOrderPeriod`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "DeptId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.PurchaseOrderPeriodDataTable dataTable, global::System.Nullable<int> DeptId, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((DeptId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(DeptId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.PurchaseOrderPeriodDataTable GetData(global::System.Nullable<int> DeptId, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((DeptId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(DeptId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            posDataSet.PurchaseOrderPeriodDataTable dataTable = new posDataSet.PurchaseOrderPeriodDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PurchaseOrderDetailReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PurchaseOrderDetailReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PurchaseOrderDetailReport";
            tableMapping.ColumnMappings.Add("working_date", "working_date");
            tableMapping.ColumnMappings.Add("poid", "poid");
            tableMapping.ColumnMappings.Add("product_name", "product_name");
            tableMapping.ColumnMappings.Add("color_name", "color_name");
            tableMapping.ColumnMappings.Add("size_name", "size_name");
            tableMapping.ColumnMappings.Add("product_id", "product_id");
            tableMapping.ColumnMappings.Add("sellqty", "sellqty");
            tableMapping.ColumnMappings.Add("sellamount", "sellamount");
            tableMapping.ColumnMappings.Add("retqty", "retqty");
            tableMapping.ColumnMappings.Add("issue_date", "issue_date");
            tableMapping.ColumnMappings.Add("type_name", "type_name");
            tableMapping.ColumnMappings.Add("department_name", "department_name");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`PurchaseOrderDetailReport`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "DeptId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.PurchaseOrderDetailReportDataTable dataTable, global::System.Nullable<int> DeptId, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((DeptId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(DeptId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.PurchaseOrderDetailReportDataTable GetData(global::System.Nullable<int> DeptId, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((DeptId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(DeptId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            posDataSet.PurchaseOrderDetailReportDataTable dataTable = new posDataSet.PurchaseOrderDetailReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PurchaseOrderReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PurchaseOrderReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PurchaseOrderReport";
            tableMapping.ColumnMappings.Add("working_date", "working_date");
            tableMapping.ColumnMappings.Add("poid", "poid");
            tableMapping.ColumnMappings.Add("product_name", "product_name");
            tableMapping.ColumnMappings.Add("sellqty", "sellqty");
            tableMapping.ColumnMappings.Add("sellamount", "sellamount");
            tableMapping.ColumnMappings.Add("retqty", "retqty");
            tableMapping.ColumnMappings.Add("retamount", "retamount");
            tableMapping.ColumnMappings.Add("issue_date", "issue_date");
            tableMapping.ColumnMappings.Add("color_name", "color_name");
            tableMapping.ColumnMappings.Add("size_name", "size_name");
            tableMapping.ColumnMappings.Add("type_name", "type_name");
            tableMapping.ColumnMappings.Add("department_name", "department_name");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`PurchaseOrderReport`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "DeptId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.PurchaseOrderReportDataTable dataTable, global::System.Nullable<int> DeptId, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((DeptId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(DeptId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.PurchaseOrderReportDataTable GetData(global::System.Nullable<int> DeptId, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((DeptId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(DeptId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            posDataSet.PurchaseOrderReportDataTable dataTable = new posDataSet.PurchaseOrderReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CustomizeReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CustomizeReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CustomizeReport";
            tableMapping.ColumnMappings.Add("type_name", "type_name");
            tableMapping.ColumnMappings.Add("product_name", "product_name");
            tableMapping.ColumnMappings.Add("color_name", "color_name");
            tableMapping.ColumnMappings.Add("size_name", "size_name");
            tableMapping.ColumnMappings.Add("quantity", "quantity");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`CustomizeReport`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ReportType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "SortType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "LimitRecs";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.CustomizeReportDataTable dataTable, global::System.Nullable<int> ReportType, global::System.Nullable<int> SortType, global::System.Nullable<int> LimitRecs, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ReportType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ReportType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((SortType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(SortType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((LimitRecs.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(LimitRecs.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.CustomizeReportDataTable GetData(global::System.Nullable<int> ReportType, global::System.Nullable<int> SortType, global::System.Nullable<int> LimitRecs, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ReportType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ReportType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((SortType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(SortType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((LimitRecs.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(LimitRecs.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            posDataSet.CustomizeReportDataTable dataTable = new posDataSet.CustomizeReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CustomizeDepartmentReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CustomizeDepartmentReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CustomizeDepartmentReport";
            tableMapping.ColumnMappings.Add("deptid", "deptid");
            tableMapping.ColumnMappings.Add("deptname", "deptname");
            tableMapping.ColumnMappings.Add("type_name", "type_name");
            tableMapping.ColumnMappings.Add("product_name", "product_name");
            tableMapping.ColumnMappings.Add("color_name", "color_name");
            tableMapping.ColumnMappings.Add("size_name", "size_name");
            tableMapping.ColumnMappings.Add("quantity", "quantity");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`CustomizeDepartmentReport`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ReportType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "SortType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "DeptId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "LimitRecs";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.CustomizeDepartmentReportDataTable dataTable, global::System.Nullable<int> ReportType, global::System.Nullable<int> SortType, global::System.Nullable<int> DeptId, global::System.Nullable<int> LimitRecs, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ReportType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ReportType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((SortType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(SortType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DeptId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(DeptId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((LimitRecs.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(LimitRecs.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.CustomizeDepartmentReportDataTable GetData(global::System.Nullable<int> ReportType, global::System.Nullable<int> SortType, global::System.Nullable<int> DeptId, global::System.Nullable<int> LimitRecs, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ReportType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ReportType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((SortType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(SortType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DeptId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(DeptId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((LimitRecs.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(LimitRecs.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            posDataSet.CustomizeDepartmentReportDataTable dataTable = new posDataSet.CustomizeDepartmentReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CustomizeDepartmentDetailReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CustomizeDepartmentDetailReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CustomizeDepartmentDetailReport";
            tableMapping.ColumnMappings.Add("row_number", "row_number");
            tableMapping.ColumnMappings.Add("type_name", "type_name");
            tableMapping.ColumnMappings.Add("product_name", "product_name");
            tableMapping.ColumnMappings.Add("color_name", "color_name");
            tableMapping.ColumnMappings.Add("size_name", "size_name");
            tableMapping.ColumnMappings.Add("quantity", "quantity");
            tableMapping.ColumnMappings.Add("deptid", "deptid");
            tableMapping.ColumnMappings.Add("deptname", "deptname");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`CustomizeDepartmentDetailReport`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ReportType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "SortType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "DepartmentId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "IsolatedBy";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "LimitRecs";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.CustomizeDepartmentDetailReportDataTable dataTable, global::System.Nullable<int> ReportType, global::System.Nullable<int> SortType, global::System.Nullable<int> DepartmentId, global::System.Nullable<int> IsolatedBy, global::System.Nullable<int> LimitRecs, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ReportType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ReportType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((SortType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(SortType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DepartmentId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(DepartmentId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((IsolatedBy.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(IsolatedBy.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((LimitRecs.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(LimitRecs.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.CustomizeDepartmentDetailReportDataTable GetData(global::System.Nullable<int> ReportType, global::System.Nullable<int> SortType, global::System.Nullable<int> DepartmentId, global::System.Nullable<int> IsolatedBy, global::System.Nullable<int> LimitRecs, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ReportType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ReportType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((SortType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(SortType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DepartmentId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(DepartmentId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((IsolatedBy.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(IsolatedBy.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((LimitRecs.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(LimitRecs.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            posDataSet.CustomizeDepartmentDetailReportDataTable dataTable = new posDataSet.CustomizeDepartmentDetailReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class product_typeTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public product_typeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "product_type";
            tableMapping.ColumnMappings.Add("TYPE_ID", "TYPE_ID");
            tableMapping.ColumnMappings.Add("TYPE_NAME", "TYPE_NAME");
            tableMapping.ColumnMappings.Add("CREATE_DATE", "CREATE_DATE");
            tableMapping.ColumnMappings.Add("CREATE_ID", "CREATE_ID");
            tableMapping.ColumnMappings.Add("UPDATE_DATE", "UPDATE_DATE");
            tableMapping.ColumnMappings.Add("UPDATE_ID", "UPDATE_ID");
            tableMapping.ColumnMappings.Add("EXCLUSIVE_KEY", "EXCLUSIVE_KEY");
            tableMapping.ColumnMappings.Add("DEL_FLG", "DEL_FLG");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `pos`.`product_type` WHERE ((`TYPE_ID` = @Original_TYPE_ID) AND ((@IsNull_TYPE_NAME = 1 AND `TYPE_NAME` IS NULL) OR (`TYPE_NAME` = @Original_TYPE_NAME)) AND ((@IsNull_CREATE_DATE = 1 AND `CREATE_DATE` IS NULL) OR (`CREATE_DATE` = @Original_CREATE_DATE)) AND ((@IsNull_CREATE_ID = 1 AND `CREATE_ID` IS NULL) OR (`CREATE_ID` = @Original_CREATE_ID)) AND ((@IsNull_UPDATE_DATE = 1 AND `UPDATE_DATE` IS NULL) OR (`UPDATE_DATE` = @Original_UPDATE_DATE)) AND ((@IsNull_UPDATE_ID = 1 AND `UPDATE_ID` IS NULL) OR (`UPDATE_ID` = @Original_UPDATE_ID)) AND ((@IsNull_EXCLUSIVE_KEY = 1 AND `EXCLUSIVE_KEY` IS NULL) OR (`EXCLUSIVE_KEY` = @Original_EXCLUSIVE_KEY)) AND ((@IsNull_DEL_FLG = 1 AND `DEL_FLG` IS NULL) OR (`DEL_FLG` = @Original_DEL_FLG)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_TYPE_ID";
            param.DbType = global::System.Data.DbType.UInt32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt32;
            param.IsNullable = true;
            param.SourceColumn = "TYPE_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_TYPE_NAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "TYPE_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_TYPE_NAME";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "TYPE_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_CREATE_DATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CREATE_DATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_CREATE_DATE";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.IsNullable = true;
            param.SourceColumn = "CREATE_DATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_CREATE_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CREATE_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_CREATE_ID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CREATE_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_UPDATE_DATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "UPDATE_DATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_UPDATE_DATE";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.IsNullable = true;
            param.SourceColumn = "UPDATE_DATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_UPDATE_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "UPDATE_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_UPDATE_ID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "UPDATE_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_EXCLUSIVE_KEY";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "EXCLUSIVE_KEY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_EXCLUSIVE_KEY";
            param.DbType = global::System.Data.DbType.UInt32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt32;
            param.IsNullable = true;
            param.SourceColumn = "EXCLUSIVE_KEY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_DEL_FLG";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "DEL_FLG";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_DEL_FLG";
            param.DbType = global::System.Data.DbType.UInt32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt32;
            param.IsNullable = true;
            param.SourceColumn = "DEL_FLG";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `pos`.`product_type` (`TYPE_ID`, `TYPE_NAME`, `CREATE_DATE`, `CREATE_" +
                "ID`, `UPDATE_DATE`, `UPDATE_ID`, `EXCLUSIVE_KEY`, `DEL_FLG`) VALUES (@TYPE_ID, @" +
                "TYPE_NAME, @CREATE_DATE, @CREATE_ID, @UPDATE_DATE, @UPDATE_ID, @EXCLUSIVE_KEY, @" +
                "DEL_FLG)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@TYPE_ID";
            param.DbType = global::System.Data.DbType.UInt32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt32;
            param.IsNullable = true;
            param.SourceColumn = "TYPE_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@TYPE_NAME";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "TYPE_NAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CREATE_DATE";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.IsNullable = true;
            param.SourceColumn = "CREATE_DATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CREATE_ID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CREATE_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@UPDATE_DATE";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.IsNullable = true;
            param.SourceColumn = "UPDATE_DATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@UPDATE_ID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "UPDATE_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@EXCLUSIVE_KEY";
            param.DbType = global::System.Data.DbType.UInt32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt32;
            param.IsNullable = true;
            param.SourceColumn = "EXCLUSIVE_KEY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@DEL_FLG";
            param.DbType = global::System.Data.DbType.UInt32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt32;
            param.IsNullable = true;
            param.SourceColumn = "DEL_FLG";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `pos`.`product_type` SET `TYPE_ID` = @TYPE_ID, `TYPE_NAME` = @TYPE_NAME, `CREATE_DATE` = @CREATE_DATE, `CREATE_ID` = @CREATE_ID, `UPDATE_DATE` = @UPDATE_DATE, `UPDATE_ID` = @UPDATE_ID, `EXCLUSIVE_KEY` = @EXCLUSIVE_KEY, `DEL_FLG` = @DEL_FLG WHERE ((`TYPE_ID` = @Original_TYPE_ID) AND ((@IsNull_TYPE_NAME = 1 AND `TYPE_NAME` IS NULL) OR (`TYPE_NAME` = @Original_TYPE_NAME)) AND ((@IsNull_CREATE_DATE = 1 AND `CREATE_DATE` IS NULL) OR (`CREATE_DATE` = @Original_CREATE_DATE)) AND ((@IsNull_CREATE_ID = 1 AND `CREATE_ID` IS NULL) OR (`CREATE_ID` = @Original_CREATE_ID)) AND ((@IsNull_UPDATE_DATE = 1 AND `UPDATE_DATE` IS NULL) OR (`UPDATE_DATE` = @Original_UPDATE_DATE)) AND ((@IsNull_UPDATE_ID = 1 AND `UPDATE_ID` IS NULL) OR (`UPDATE_ID` = @Original_UPDATE_ID)) AND ((@IsNull_EXCLUSIVE_KEY = 1 AND `EXCLUSIVE_KEY` IS NULL) OR (`EXCLUSIVE_KEY` = @Original_EXCLUSIVE_KEY)) AND ((@IsNull_DEL_FLG = 1 AND `DEL_FLG` IS NULL) OR (`DEL_FLG` = @Original_DEL_FLG)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@TYPE_ID";
            param.DbType = global::System.Data.DbType.UInt32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt32;
            param.IsNullable = true;
            param.SourceColumn = "TYPE_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@TYPE_NAME";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "TYPE_NAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CREATE_DATE";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.IsNullable = true;
            param.SourceColumn = "CREATE_DATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@CREATE_ID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CREATE_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@UPDATE_DATE";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.IsNullable = true;
            param.SourceColumn = "UPDATE_DATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@UPDATE_ID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "UPDATE_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@EXCLUSIVE_KEY";
            param.DbType = global::System.Data.DbType.UInt32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt32;
            param.IsNullable = true;
            param.SourceColumn = "EXCLUSIVE_KEY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@DEL_FLG";
            param.DbType = global::System.Data.DbType.UInt32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt32;
            param.IsNullable = true;
            param.SourceColumn = "DEL_FLG";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_TYPE_ID";
            param.DbType = global::System.Data.DbType.UInt32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt32;
            param.IsNullable = true;
            param.SourceColumn = "TYPE_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_TYPE_NAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "TYPE_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_TYPE_NAME";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "TYPE_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_CREATE_DATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CREATE_DATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_CREATE_DATE";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.IsNullable = true;
            param.SourceColumn = "CREATE_DATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_CREATE_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CREATE_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_CREATE_ID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CREATE_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_UPDATE_DATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "UPDATE_DATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_UPDATE_DATE";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.IsNullable = true;
            param.SourceColumn = "UPDATE_DATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_UPDATE_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "UPDATE_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_UPDATE_ID";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "UPDATE_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_EXCLUSIVE_KEY";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "EXCLUSIVE_KEY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_EXCLUSIVE_KEY";
            param.DbType = global::System.Data.DbType.UInt32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt32;
            param.IsNullable = true;
            param.SourceColumn = "EXCLUSIVE_KEY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@IsNull_DEL_FLG";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "DEL_FLG";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Original_DEL_FLG";
            param.DbType = global::System.Data.DbType.UInt32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.UInt32;
            param.IsNullable = true;
            param.SourceColumn = "DEL_FLG";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT  TYPE_ID, TYPE_NAME, CREATE_DATE, CREATE_ID, UPDATE_DATE, UPDATE_ID, EXCLU" +
                "SIVE_KEY, DEL_FLG\r\nFROM     product_type ORDER BY TYPE_NAME";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.product_typeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.product_typeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            posDataSet.product_typeDataTable dataTable = new posDataSet.product_typeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(posDataSet.product_typeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(posDataSet dataSet) {
            return this.Adapter.Update(dataSet, "product_type");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(uint Original_TYPE_ID, string Original_TYPE_NAME, global::System.Nullable<global::System.DateTime> Original_CREATE_DATE, string Original_CREATE_ID, global::System.Nullable<global::System.DateTime> Original_UPDATE_DATE, string Original_UPDATE_ID, global::System.Nullable<uint> Original_EXCLUSIVE_KEY, global::System.Nullable<uint> Original_DEL_FLG) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((uint)(Original_TYPE_ID));
            if ((Original_TYPE_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TYPE_NAME));
            }
            if ((Original_CREATE_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_CREATE_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_CREATE_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_CREATE_ID));
            }
            if ((Original_UPDATE_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_UPDATE_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_UPDATE_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_UPDATE_ID));
            }
            if ((Original_EXCLUSIVE_KEY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((uint)(Original_EXCLUSIVE_KEY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_DEL_FLG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((uint)(Original_DEL_FLG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(uint TYPE_ID, string TYPE_NAME, global::System.Nullable<global::System.DateTime> CREATE_DATE, string CREATE_ID, global::System.Nullable<global::System.DateTime> UPDATE_DATE, string UPDATE_ID, global::System.Nullable<uint> EXCLUSIVE_KEY, global::System.Nullable<uint> DEL_FLG) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((uint)(TYPE_ID));
            if ((TYPE_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TYPE_NAME));
            }
            if ((CREATE_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(CREATE_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((CREATE_ID == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(CREATE_ID));
            }
            if ((UPDATE_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(UPDATE_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((UPDATE_ID == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(UPDATE_ID));
            }
            if ((EXCLUSIVE_KEY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((uint)(EXCLUSIVE_KEY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((DEL_FLG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((uint)(DEL_FLG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    uint TYPE_ID, 
                    string TYPE_NAME, 
                    global::System.Nullable<global::System.DateTime> CREATE_DATE, 
                    string CREATE_ID, 
                    global::System.Nullable<global::System.DateTime> UPDATE_DATE, 
                    string UPDATE_ID, 
                    global::System.Nullable<uint> EXCLUSIVE_KEY, 
                    global::System.Nullable<uint> DEL_FLG, 
                    uint Original_TYPE_ID, 
                    string Original_TYPE_NAME, 
                    global::System.Nullable<global::System.DateTime> Original_CREATE_DATE, 
                    string Original_CREATE_ID, 
                    global::System.Nullable<global::System.DateTime> Original_UPDATE_DATE, 
                    string Original_UPDATE_ID, 
                    global::System.Nullable<uint> Original_EXCLUSIVE_KEY, 
                    global::System.Nullable<uint> Original_DEL_FLG) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((uint)(TYPE_ID));
            if ((TYPE_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TYPE_NAME));
            }
            if ((CREATE_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(CREATE_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((CREATE_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(CREATE_ID));
            }
            if ((UPDATE_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(UPDATE_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((UPDATE_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(UPDATE_ID));
            }
            if ((EXCLUSIVE_KEY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((uint)(EXCLUSIVE_KEY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((DEL_FLG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((uint)(DEL_FLG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((uint)(Original_TYPE_ID));
            if ((Original_TYPE_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_TYPE_NAME));
            }
            if ((Original_CREATE_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_CREATE_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_CREATE_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_CREATE_ID));
            }
            if ((Original_UPDATE_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_UPDATE_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_UPDATE_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_UPDATE_ID));
            }
            if ((Original_EXCLUSIVE_KEY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((uint)(Original_EXCLUSIVE_KEY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_DEL_FLG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((uint)(Original_DEL_FLG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TYPE_NAME, global::System.Nullable<global::System.DateTime> CREATE_DATE, string CREATE_ID, global::System.Nullable<global::System.DateTime> UPDATE_DATE, string UPDATE_ID, global::System.Nullable<uint> EXCLUSIVE_KEY, global::System.Nullable<uint> DEL_FLG, uint Original_TYPE_ID, string Original_TYPE_NAME, global::System.Nullable<global::System.DateTime> Original_CREATE_DATE, string Original_CREATE_ID, global::System.Nullable<global::System.DateTime> Original_UPDATE_DATE, string Original_UPDATE_ID, global::System.Nullable<uint> Original_EXCLUSIVE_KEY, global::System.Nullable<uint> Original_DEL_FLG) {
            return this.Update(Original_TYPE_ID, TYPE_NAME, CREATE_DATE, CREATE_ID, UPDATE_DATE, UPDATE_ID, EXCLUSIVE_KEY, DEL_FLG, Original_TYPE_ID, Original_TYPE_NAME, Original_CREATE_DATE, Original_CREATE_ID, Original_UPDATE_DATE, Original_UPDATE_ID, Original_EXCLUSIVE_KEY, Original_DEL_FLG);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DepartmentStockOutTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DepartmentStockOutTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DepartmentStockOut";
            tableMapping.ColumnMappings.Add("type_name", "type_name");
            tableMapping.ColumnMappings.Add("department_id", "department_id");
            tableMapping.ColumnMappings.Add("department_name", "department_name");
            tableMapping.ColumnMappings.Add("address", "address");
            tableMapping.ColumnMappings.Add("stock_out_id", "stock_out_id");
            tableMapping.ColumnMappings.Add("defect_status_name", "defect_status_name");
            tableMapping.ColumnMappings.Add("stock_out_date", "stock_out_date");
            tableMapping.ColumnMappings.Add("product_id", "product_id");
            tableMapping.ColumnMappings.Add("product_name", "product_name");
            tableMapping.ColumnMappings.Add("color_name", "color_name");
            tableMapping.ColumnMappings.Add("size_name", "size_name");
            tableMapping.ColumnMappings.Add("quantity", "quantity");
            tableMapping.ColumnMappings.Add("dest_department_name", "dest_department_name");
            tableMapping.ColumnMappings.Add("price", "price");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`DepartmentStockOut`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "deptID";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.DepartmentStockOutDataTable dataTable, global::System.Nullable<int> deptID, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((deptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(deptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.DepartmentStockOutDataTable GetData(global::System.Nullable<int> deptID, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((deptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(deptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            posDataSet.DepartmentStockOutDataTable dataTable = new posDataSet.DepartmentStockOutDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AllDepartmentPurchaseOrderReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AllDepartmentPurchaseOrderReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AllDepartmentPurchaseOrderReport";
            tableMapping.ColumnMappings.Add("working_date", "working_date");
            tableMapping.ColumnMappings.Add("poid", "poid");
            tableMapping.ColumnMappings.Add("product_name", "product_name");
            tableMapping.ColumnMappings.Add("color_name", "color_name");
            tableMapping.ColumnMappings.Add("size_name", "size_name");
            tableMapping.ColumnMappings.Add("type_name", "type_name");
            tableMapping.ColumnMappings.Add("department_name", "department_name");
            tableMapping.ColumnMappings.Add("sellqty", "sellqty");
            tableMapping.ColumnMappings.Add("sellamount", "sellamount");
            tableMapping.ColumnMappings.Add("retqty", "retqty");
            tableMapping.ColumnMappings.Add("retamount", "retamount");
            tableMapping.ColumnMappings.Add("issue_date", "issue_date");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`AllDepartmentPurchaseOrderReport`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.AllDepartmentPurchaseOrderReportDataTable dataTable, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.AllDepartmentPurchaseOrderReportDataTable GetData(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            posDataSet.AllDepartmentPurchaseOrderReportDataTable dataTable = new posDataSet.AllDepartmentPurchaseOrderReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StockEvaluationReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StockEvaluationReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "StockEvaluationReport";
            tableMapping.ColumnMappings.Add("TYPE_ID", "TYPE_ID");
            tableMapping.ColumnMappings.Add("TYPE_NAME", "TYPE_NAME");
            tableMapping.ColumnMappings.Add("PRODUCT_MASTER_ID", "PRODUCT_MASTER_ID");
            tableMapping.ColumnMappings.Add("PRODUCT_NAME", "PRODUCT_NAME");
            tableMapping.ColumnMappings.Add("COLOR_NAME", "COLOR_NAME");
            tableMapping.ColumnMappings.Add("SIZE_NAME", "SIZE_NAME");
            tableMapping.ColumnMappings.Add("QUANTITY", "QUANTITY");
            tableMapping.ColumnMappings.Add("GOODQUANTITY", "GOODQUANTITY");
            tableMapping.ColumnMappings.Add("REALQUANTITY", "REALQUANTITY");
            tableMapping.ColumnMappings.Add("CREATE_DATE", "CREATE_DATE");
            tableMapping.ColumnMappings.Add("DEPARTMENT_ID", "DEPARTMENT_ID");
            tableMapping.ColumnMappings.Add("DEPARTMENT_NAME", "DEPARTMENT_NAME");
            tableMapping.ColumnMappings.Add("PRODUCT_ID", "PRODUCT_ID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`StockEvaluationReport`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.StockEvaluationReportDataTable dataTable, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.StockEvaluationReportDataTable GetData(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            posDataSet.StockEvaluationReportDataTable dataTable = new posDataSet.StockEvaluationReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ExtraCustomizeDepartmentReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ExtraCustomizeDepartmentReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::POSReports.Properties.Settings.Default.posConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`pos`.`ExtraCustomizeDepartmentReport`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ReportType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "SortType";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "DeptId";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "LimitRecs";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "FromDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "ToDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Datetime;
            param.Size = 2147483647;
            param.IsNullable = true;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(posDataSet.ExtraCustomizeDepartmentReportDataTable dataTable, global::System.Nullable<int> ReportType, global::System.Nullable<int> SortType, global::System.Nullable<int> DeptId, global::System.Nullable<int> LimitRecs, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ReportType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ReportType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((SortType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(SortType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DeptId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(DeptId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((LimitRecs.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(LimitRecs.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual posDataSet.ExtraCustomizeDepartmentReportDataTable GetData(global::System.Nullable<int> ReportType, global::System.Nullable<int> SortType, global::System.Nullable<int> DeptId, global::System.Nullable<int> LimitRecs, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ReportType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ReportType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((SortType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(SortType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DeptId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(DeptId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((LimitRecs.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(LimitRecs.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            posDataSet.ExtraCustomizeDepartmentReportDataTable dataTable = new posDataSet.ExtraCustomizeDepartmentReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private product_typeTableAdapter _product_typeTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public product_typeTableAdapter product_typeTableAdapter {
            get {
                return this._product_typeTableAdapter;
            }
            set {
                this._product_typeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._product_typeTableAdapter != null) 
                            && (this._product_typeTableAdapter.Connection != null))) {
                    return this._product_typeTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._product_typeTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(posDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._product_typeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.product_type.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._product_typeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(posDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._product_typeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.product_type.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._product_typeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(posDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._product_typeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.product_type.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._product_typeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(posDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._product_typeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._product_typeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._product_typeTableAdapter != null)) {
                    revertConnections.Add(this._product_typeTableAdapter, this._product_typeTableAdapter.Connection);
                    this._product_typeTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._product_typeTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._product_typeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._product_typeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._product_typeTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._product_typeTableAdapter != null)) {
                    this._product_typeTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._product_typeTableAdapter]));
                    this._product_typeTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591