<?xml version="1.0" encoding="utf-8" ?>
<objects xmlns="http://www.springframework.net" 
        
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xmlns:appframe="http://www.appframe.com/schema/appframe"        
	xsi:schemaLocation="http://www.springframework.net http://www.springframework.net/xsd/spring-objects.xsd">


  <!-- Web service -->
  <!--<object id="remoteLoginLogic" type="Spring.Remoting.SaoFactoryObject, Spring.Services">
    <property name="ServiceInterface" value="AppFrame.Logic.ILoginLogic, AppFrame" />
    <property name="ServiceUrl" value="http://localhost/AppFrameWeb/LoginLogic.rem" />
  </object>
  <object id="remoteCustomerLogic" type="Spring.Remoting.CaoFactoryObject, Spring.Services">
    <property name="RemoteTargetName" value="customerLogic.rem" />
    <property name="ServiceInterface" value="AppFrame.Logic.ICustomerLogic, AppFrame" />
    <property name="ServiceUrl" value="http://localhost/AppFrameWeb" />
  </object>-->
    
  <!--<object id="serviceLoginLogic" type="Spring.Web.Services.WebServiceProxyFactory, Spring.Services">
    <property name="ServiceUri" value="http://localhost:4491/AppFrameWeb/LoginLogicWebService.asmx"/>
    <property name="ServiceInterface" value="AppFrame.Logic.ILoginLogic, AppFrame" />
    <property name="MemberAttributes">
      <dictionary>
        <entry key="validate">
          <object type="System.Web.Services.WebMethodAttribute, System.Web.Services">
            <property name="Description">
              <value>validate method</value>
            </property>
            <property name="MessageName">
              <value>validate</value>
            </property>
          </object>
        </entry>
        <entry key="doAuthentication">
          <object type="System.Web.Services.WebMethodAttribute, System.Web.Services">
            <property name="Description">
              <value>doAuthentication method</value>
            </property>
            <property name="MessageName">
              <value>doAuthentication</value>
            </property>
          </object>
        </entry>
      </dictionary>
    </property>
  </object>-->

    <!--<r:configurer filename="RemotingClient.exe.config" />
      <r:saoFactory id="counterService"
                    serviceInterface="Contract.ISimpleCounter, Contract"
                    serviceUrl="http://localhost:1444/RemotingWeb/RemotedCounter.rem" />
      -->


  <!-- START : SECURITY CONFIG -->
  <!-- Data Access Objects -->
  <object id="LoginDaoImpl" type="AppFrameClient.DataLayer.LoginDaoImpl, AppFrameClient">
    <property name="HibernateTemplate" ref="HibernateTemplate"/>
  </object>

  <object id="RoleDaoImpl" type="AppFrameClient.DataLayer.RoleDaoImpl, AppFrameClient">
    <property name="HibernateTemplate" ref="HibernateTemplate"/>
  </object>

  <!-- Logic Objects -->
  <object id="LoginEventArgs" type="AppFrame.Presenter.LoginEventArgs, AppFrame"/>
  <object id="CustomerEventArgs" type="AppFrame.Presenter.CustomerEventArgs, AppFrame"/>
  <object id="LocalLoginLogic" type="AppFrameClient.Logic.LoginLogic, AppFrameClient">
    <property name="LoginDao" ref="LoginDaoImpl" />
    <property name="RoleDao" ref="RoleDaoImpl" />
  </object> 
  <!-- Controller Objects -->
  <object id="LoginController" type="AppFrame.Presenter.LoginController, AppFrameClient">
    <property name="LoginLogic" ref="LocalLoginLogic"/>
    <property name="ResultEventArgs" ref="LoginEventArgs"/>
  </object>
  <object id="authService" type="AppFrame.Presenter.AuthService, AppFrameClient" />
  <!-- View Objects -->
  <object id="loginView" type="AppFrameClient.View.AuthForm, AppFrameClient" singleton="false">
    <property name="LoginController" ref="LoginController" />
  </object>
  
  <object id="mainView" type="AppFrame.View.MainForm, AppFrameClient"  >
    <property name="AuthService" ref="authService" />
  </object>
  <!-- END : SECURITY CONFIG -->
  <!--<object id="newCustomerView" type="AppFrameClient.View.NewCustomerForm, AppFrameClient" singleton="false">
    <property name="CustomerController" ref="CustomerController" />
  </object>
  <object id="editCustomerView" type="AppFrameClient.View.EditCustomerForm, AppFrameClient" singleton="false">
    <property name="CustomerController" ref="CustomerController" />
  </object>-->
    <object id="importGoodsView" type="AppFrameClient.View.GoodsIO.GoodsInput, AppFrameClient" singleton="false">
    <property name="SupplierLogic" ref="AppFrame.Service.ISupplierLogic" />
    <property name="BlockInDetailLogic" ref="AppFrame.Service.IBlockInDetailLogic" />
    <property name="ColorLogic" ref="AppFrame.Service.IProductColorLogic" />
    <property name="SizeLogic" ref="AppFrame.Service.IProductSizeLogic" />
    <property name="TypeLogic" ref="AppFrame.Service.IProductTypeLogic" />
  </object>
  <!-- START: MENU CROSS CUTTING CONCERN -->
  <object id="menuPermissionAdvice"
        type="AppFrame.Advice.MenuPermissionAdvice, AppFrameClient" />
  <!--<object id="confirmDialogAdvice" 
              type="AppFrame.Advice.ConfirmDialogDisplayAdvice, AppFrameClient" />                     
        
        <object id="ConfirmProxyCreator" type="Spring.Aop.Framework.AutoProxy.DefaultAdvisorAutoProxyCreator, Spring.Aop"/>-->

  <object id="ProxyCreator" type="Spring.Aop.Framework.AutoProxy.ObjectNameAutoProxyCreator, Spring.Aop">
    <property name="ObjectNames">
      <list>
        <value>authService</value>
      </list>
    </property>
    <property name="InterceptorNames">
      <list>
        <value>menuPermissionAdvice</value>        
      </list>
    </property>
  </object>
  
  <!--<object id="insertUserToLogicAdvice"
        type="AppFrame.Advice.InsertUserInfoToLogicAdvice, AppFrame" />  
  <object name="proxyRemoteCustomerLogic" type="Spring.Aop.Framework.ProxyFactoryObject, Spring.Aop">
    <property name="proxyInterfaces" value="AppFrame.Logic.ITestCustomerLogic"/>
    <property name="target" ref="remoteCustomerLogic"/>
    <property name="interceptorNames">
      <list>
        <value>insertUserToLogicAdvice</value>        
      </list>
    </property>
  </object>-->

  <!-- END: MENU CROSS CUTTING CONCERN -->
  <!-- START: RESOURCE FILE -->
  <object id="messageResources" type="Spring.Context.Support.ResourceSetMessageSource, Spring.Core">
    <property name="ResourceManagers">
      <list>
        <value>AppFrameClient.Resources.MessagesResource, AppFrameClient</value>
      </list>
    </property>
  </object>
  <object id="errorResources" type="Spring.Context.Support.ResourceSetMessageSource, Spring.Core">
    <property name="ResourceManagers">
      <list>
        <value>AppFrameClient.Resources.ErrorsResource, AppFrameClient</value>
      </list>
    </property>
  </object>
  <!-- END: RESOURCE FILE -->
  <!-- START : Authentication Module -->
  <object id ="User" type ="AppFrame.Common.AppFrameUser,AppFrameClient" >
    <property name="LoginLogic" ref="LocalLoginLogic" />
  </object>
  <object id ="AuthUserManager" type ="AppFrame.Common.AppUserManager,AppFrame" >
    <property name="User" ref="User" />
  </object>
  <object id="AuthenticationModule" type="AppFrame.Common.AuthManager, AppFrame" >
    <property name="UserManager" ref="AuthUserManager" />
  </object> 
  
  <!--<appframe:security>
    <appframe:authentication id ="AuthenticationModule" type="AppFrame.Common.AuthManager, AppFrame" usermanager="AuthUserManager" />
    <appframe:usermanager id="AuthUserManager" type="AppFrame.Common.AppUserManager,AppFrame" user="AuthUser" />    
  </appframe:security>
  <object id="AuthUser" type="AppFrame.Common.AppFrameUser,AppFrameClient" >
    <property name="LoginLogic" ref="remoteLoginLogic" /> 
  </object>-->
      <!-- END : Authentication Module -->

  <object name="loggingAdvice" type="Spring.Aspects.Logging.SimpleLoggingAdvice, Spring.Aop">
    <property name="logUniqueIdentifier" value="false"/>
    <property name="logExecutionTime"    value="true"/>
    <property name="logMethodArguments"  value="true"/>
    <property name="LogReturnValue"      value="true"/>

    <property name="Separator"           value=";"/>
    <property name="LogLevel"            value="Info"/>
    <property name="HideProxyTypeNames"  value="true"/>
    <property name="LoggerName"    value="AppFrame"/>
  </object>  
</objects>
