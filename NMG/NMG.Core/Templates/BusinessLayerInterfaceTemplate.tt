<#@ template hostspecific="true" language="C#v3.5" #>
<#@ property name="ClassName" type="System.String" 
			 processor="PropertyProcessor" #>
<#@ property name="NamespaceName" type="System.String" 
             processor="PropertyProcessor" #>
<#@ property name="ModelNamespaceName" type="System.String" 
             processor="PropertyProcessor" #>
<#@ property name="DaoNamespaceName" type="System.String" 
             processor="PropertyProcessor" #>			 
			 

using System;
using System.Collections;
using System.Collections.Generic;
using <#= ModelNamespaceName #>;
using <#= DaoNamespaceName #>;

namespace <#= NamespaceName #>
{
    public interface I<#= ClassName #>Logic
    {
        /// <summary>
        /// Find  <#= ClassName #> object by id. Return null if nothing is found
        /// </summary>
        /// <param name="id">Id of  <#= ClassName #></param>
        /// <returns></returns>
         <#= ClassName #> FindById(object id);
        
        /// <summary>
        /// Add  <#= ClassName #> to database.
        /// </summary>
        /// <param name="data"></param>
        /// <returns></returns>
         <#= ClassName #> Add( <#= ClassName #> data);
        
        /// <summary>
        /// Update  <#= ClassName #> to database.
        /// </summary>
        /// <param name="data"></param>
        /// <returns></returns>
        void Update( <#= ClassName #> data);
        
        /// <summary>
        /// Delete  <#= ClassName #> from database.
        /// </summary>
        /// <param name="data"></param>
        /// <returns></returns>
        void Delete( <#= ClassName #> data);
        
        /// <summary>
        /// Delete  <#= ClassName #> from database.
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        void DeleteById(object id);
        
        /// <summary>
        /// Find all  <#= ClassName #> from database. No pagination.
        /// </summary>
        /// <param name="criteria"></param>
        /// <returns></returns>
        IList<<#= ClassName #>> FindAll(ObjectCriteria criteria);
        
        /// <summary>
        /// Find all  <#= ClassName #> from database. Has pagination.
        /// </summary>
        /// <param name="criteria"></param>
        /// <returns></returns>
        QueryResult FindPaging(ObjectCriteria criteria);
    }
}