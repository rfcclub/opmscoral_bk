<#@ template hostspecific="true" language="C#v3.5" #>
<#@ import namespace="System.Collections" #>
<#@ property name="ClassName" type="System.String" 
			 processor="PropertyProcessor" #>
<#@ property name="NamespaceName" type="System.String" 
             processor="PropertyProcessor" #>

<#@ property name="FieldNames" type="ArrayList" 
             processor="PropertyProcessor" #>
<#@ property name="MethodNames" type="ArrayList" 
             processor="PropertyProcessor" #>
			 
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using AppFrame.Base;
using Caliburn.Core.Metadata;
using Caliburn.PresentationFramework.ApplicationModel;
using Caliburn.PresentationFramework.Screens;

namespace <#= NamespaceName #>
{
    public interface I<#= ClassName #> : IScreenNode
    {
        #region Fields
		<# 
			foreach(string fieldName in FieldNames)
			{				            
		#>                
        string <#= fieldName #>
        {
            get;
            set;            
        }
		<# 
			}
		#>
	#endregion
		
		#region Methods
		<# 
			foreach(string methodName in MethodNames)
			{			
            
		#>        
        void <#= methodName #>();
        
		<# 
			}
		#>
	#endregion
    }
}